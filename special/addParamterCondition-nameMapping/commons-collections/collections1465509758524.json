{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":462,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":198,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":554,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":289,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":748,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":520,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":715,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":212,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":470,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":32,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":592,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":581,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":614,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":396,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":431,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":168,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":586,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":792,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":774,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.ListUtilsTest.testLazyList":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":466,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":626,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":412,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":840,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":410,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":526,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":804,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":108,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":147,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":726,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":564,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":498,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":354,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":679,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":582,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":231,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":110,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":224,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.CollectionUtilsTest.intersection":41,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":204,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":820,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":400,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":608,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":639,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":425,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":256,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":717,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":539,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":154,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":749,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":463,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":214,"org.apache.commons.collections4.map.CompositeMapTest.testPut":31,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":429,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":585,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":765,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":294,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":129,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":196,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":478,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":65,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":546,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":779,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":385,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":781,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":780,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":518,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":187,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":627,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":246,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":835,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":104,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":211,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":625,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":823,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":114,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":624,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":128,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":143,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":565,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":621,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":493,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":599,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":329,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":657,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":725,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":275,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":636,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":496,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":358,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":838,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":533,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":688,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":671,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":402,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":84,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":173,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":831,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":444,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":479,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":762,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":249,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":183,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":131,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":390,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":754,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":527,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":655,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":738,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":119,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":630,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":720,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":252,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":366,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":843,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":333,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":207,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":424,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":714,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":414,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":286,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":282,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":393,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":555,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":731,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":597,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":285,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":812,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":459,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":317,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":822,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":685,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":468,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":750,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":461,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":590,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":363,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":159,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":795,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":596,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":595,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":112,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":789,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":830,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":102,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":680,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":826,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":379,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":148,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":456,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":570,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":845,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":24,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":23,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":675,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":1,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":580,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":623,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":259,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":598,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":814,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":93,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":75,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":735,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":340,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":172,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":296,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":682,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":760,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":372,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":773,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":519,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":240,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":362,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":616,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":228,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":723,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":764,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":547,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":349,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":234,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":534,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":62,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":182,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":191,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":90,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":406,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":130,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":383,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":61,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":610,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":261,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":452,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":746,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":95,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":427,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":579,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":8,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":784,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":22,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":63,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":315,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":36,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":465,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":311,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":569,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":277,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":656,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":842,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":420,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":166,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":428,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":811,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":809,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":799,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":543,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":800,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":649,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":647,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":707,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":651,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":650,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":681,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":443,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":794,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":133,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":281,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":391,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":260,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":833,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":14,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":560,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":767,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":620,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":821,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":436,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":435,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":524,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":360,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":115,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":11,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":368,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":549,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":695,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":365,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":98,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":392,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":817,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":88,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":298,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":642,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":571,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":535,"org.apache.commons.collections4.map.LRUMapTest.testLRU":583,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":699,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":269,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":837,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":141,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":78,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":706,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":632,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":796,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":552,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":248,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":361,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":739,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":220,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":178,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":105,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":759,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":156,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":186,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":810,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":618,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":464,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":225,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":451,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":690,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":589,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":39,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":423,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":247,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":691,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":69,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":670,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":206,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":751,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":756,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":665,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":550,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":705,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":575,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":474,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":782,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":674,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":641,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":839,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":640,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":747,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":761,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":531,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":177,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":401,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":660,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":76,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":477,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":829,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":740,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":827,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":271,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":769,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":693,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":100,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":146,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":94,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":507,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":686,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":785,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":351,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":716,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":609,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":152,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":109,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":355,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":215,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":70,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":13,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":335,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":635,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":244,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":162,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":711,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":487,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":488,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":486,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":308,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":378,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":802,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":600,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":101,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":743,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":775,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":253,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":798,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":151,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":522,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":389,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":793,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":460,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":783,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":733,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":790,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":357,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":139,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":245,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":813,"org.apache.commons.collections4.map.CompositeMapTest.testGet":30,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":135,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":458,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":323,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":251,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":633,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":834,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":673,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":736,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":700,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":646,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":81,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":171,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":516,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":501,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":510,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":377,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":387,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":320,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":375,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":538,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":334,"org.apache.commons.collections4.CollectionUtilsTest.union":40,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":528,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":74,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":344,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":262,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":568,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":485,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":99,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":475,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":481,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":772,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":210,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":728,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":467,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":345,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":506,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":137,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":19,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":658,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":77,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":637,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":708,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":292,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":310,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":668,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":257,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":517,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":771,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":490,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":489,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":515,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":106,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":787,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":602,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":367,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":576,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":230,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":67,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":591,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":841,"org.apache.commons.collections4.ListUtilsTest.testSubtract":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":662,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":165,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":175,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":155,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":116,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":828,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":577,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":548,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":727,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":473,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":745,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":669,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":72,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":328,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":123,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":353,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":511,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":283,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":274,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":327,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":373,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":648,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":721,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":844,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":500,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":386,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":836,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":342,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":416,"org.apache.commons.collections4.map.SingletonMapTest.testClone":16,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":497,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":34,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":33,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":824,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":202,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":169,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":384,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":778,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":127,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":472,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":57,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":136,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":26,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":777,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":776,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":605,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":313,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":403,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":805,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":709,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":124,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":242,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":634,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":455,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":553,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":574,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":661,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":432,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":25,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":730,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":563,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":221,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":272,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":405,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":645,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":770,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":38,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":397,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":558,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":35,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":514,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":559,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":678,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":696,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":28,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":325,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":15,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":502,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":509,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":758,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":631,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":263,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":603,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":744,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":297,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":302,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":356,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":120,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":687,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":791,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":654,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":806,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":808,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":807,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":825,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":209,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":409,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":185,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":376,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":364,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":741,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":121,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":419,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":753,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":193,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":82,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":222,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":587,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":446,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":306,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":192,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":413,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":347,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":818,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":138,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":350,"org.apache.commons.collections4.set.CompositeSetTest.testContains":27,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":719,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":243,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":703,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":86,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":492,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":233,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":227,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":324,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":788,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":89,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":291,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":258,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":712,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":309,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":66,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":694,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":847,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":757,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":434,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":846,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":407,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":199,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":170,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":21,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":415,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":629,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":752,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":512,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":689,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":47,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":371,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":398,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":404,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":532,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":562,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":724,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":288,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":238,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":737,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":768,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":442,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":482,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":454,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":359,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":307,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":819,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":606,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":742,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":236,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":483,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":181,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":79,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":710,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":469,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":417,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":411,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":816,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":87,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":167,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":803,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":698,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":556,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":529,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":734,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":395,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":60,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":684,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":683,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":541,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":584,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":426,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":801,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":653,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":7,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":219,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":54,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":216,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":530,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":815,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":312,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":766,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":71,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":832},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[0],"tindex":"e13f09bf-2e8d-11e6-a84c-47a9d8ebfb28","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            if (start < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e13ff420-2e8d-11e6-a84c-2fbc7837d4a9","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e1401b31-2e8d-11e6-a84c-a5c325fce497","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[1],"tindex":"e1401b32-2e8d-11e6-a84c-a7ea10c1129f","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"e1404243-2e8d-11e6-a84c-235fbad51715","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[2],"tindex":"e1410594-2e8d-11e6-a84c-b780c3d14585","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate2 == null) || (predicate2 == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[3,4,5,6],"tindex":"e1412ca5-2e8d-11e6-a84c-938f8a5f76a8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[7],"tindex":"e14153b6-2e8d-11e6-a84c-cb0bd7431ade","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[8],"tindex":"e14153b7-2e8d-11e6-a84c-e96395ed80f3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"e14153b8-2e8d-11e6-a84c-87bc849d4048","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e1417ac9-2e8d-11e6-a84c-29abbcf44c81","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e1417aca-2e8d-11e6-a84c-09f1ff29a01f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key != null) {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e141a1db-2e8d-11e6-a84c-d9eb197db8de","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"e141a1dc-2e8d-11e6-a84c-578478b9b893","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e141c8ed-2e8d-11e6-a84c-15be5aad48d0","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[9],"tindex":"e141c8ee-2e8d-11e6-a84c-89277e2078fe","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e141c8ef-2e8d-11e6-a84c-27b26e39fe65","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[10],"tindex":"e141f000-2e8d-11e6-a84c-f9807011e8c5","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e141f001-2e8d-11e6-a84c-fb9b0eb3983d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[11],"tindex":"e1421712-2e8d-11e6-a84c-6fc33b90de35","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"e1421713-2e8d-11e6-a84c-57457afef2bf","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[12],"tindex":"e1421714-2e8d-11e6-a84c-b3c33be38421","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[13,14],"tindex":"e1423e25-2e8d-11e6-a84c-b50f3aa047fc","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e1426536-2e8d-11e6-a84c-7ba3592b480f","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map == null) {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    map.size();\n                    if ((array == null) || ((array.int) == 0)) {\n                        return map;\n                    } \n                    final java.lang.Object java.lang.Object = array[0];\n                    if (obj instanceof java.util.Map.Entry) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                            map.put(entry.getKey(), entry.getValue());\n                        }\n                    } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                            map.put(keyval.getKey(), keyval.getValue());\n                        }\n                    } else if (obj instanceof java.lang.Object[]) {\n                        for (int int = 0 ; i < (array.int) ; i++) {\n                            final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                            if ((sub == null) || ((sub.int) < 2)) {\n                                throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                            } \n                            map.put(((K)(sub[0])), ((V)(sub[1])));\n                        }\n                    } else {\n                        for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                            map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                        }\n                    }\n                    return map;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[15],"tindex":"e1428c47-2e8d-11e6-a84c-d9b5a2e9fd8c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[16,17,18,19,20,21,22,23,24],"tindex":"e1428c48-2e8d-11e6-a84c-1dfbeb85c83a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"e142b359-2e8d-11e6-a84c-3d5e308d854e","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 1) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[33,34,35,36,44,45,46,47,48,49,50,51,52,53,54],"tindex":"e142b35a-2e8d-11e6-a84c-d1b1ce48b778","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[55,56,57,58,59,60],"tindex":"e142b35b-2e8d-11e6-a84c-43d6a4ccf3c8","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((end2 - end2) > (end1 - start2)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"end1","end1":"end2","start2":"start2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e142da6c-2e8d-11e6-a84c-ff8a0eff7d4d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[61,62],"tindex":"e142da6d-2e8d-11e6-a84c-ffafb139a7b5","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[63,64],"tindex":"e143017e-2e8d-11e6-a84c-97a4a115a265","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[40,42,43],"tindex":"e143017f-2e8d-11e6-a84c-5b4490d6df4f","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e1432890-2e8d-11e6-a84c-09fbc015ac7d","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[65,64],"tindex":"e1432891-2e8d-11e6-a84c-5feb32d60244","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,38,383,384,385,386,42,43],"tindex":"e1432892-2e8d-11e6-a84c-7dc8a705aa02","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[387],"tindex":"e14376b3-2e8d-11e6-a84c-87b255eca443","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[388,389],"tindex":"e14376b4-2e8d-11e6-a84c-cb3f02936f91","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[390,391],"tindex":"e14376b5-2e8d-11e6-a84c-61615f508168","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e1439dc6-2e8d-11e6-a84c-377be3b5f45e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"e1439dc7-2e8d-11e6-a84c-cfdb7e8cdb87","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[392],"tindex":"e1439dc8-2e8d-11e6-a84c-1ffcb1c86107","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"e143c4d9-2e8d-11e6-a84c-2dd0bffc4a50","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e143c4da-2e8d-11e6-a84c-e75e422a3e5d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e143ebeb-2e8d-11e6-a84c-89547b5d6922","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[393],"tindex":"e14412fc-2e8d-11e6-a84c-c53ceb3d9ea5","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e14412fd-2e8d-11e6-a84c-dfb4a54d4973","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[197,209,286,321,358],"tindex":"e1443a0e-2e8d-11e6-a84c-2badc0570744","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[394],"tindex":"e1443a0f-2e8d-11e6-a84c-6bf55d4654e4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"e1443a10-2e8d-11e6-a84c-37ec9de49fce","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[395],"tindex":"e1446121-2e8d-11e6-a84c-f71f862651cf","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[396],"tindex":"e1446122-2e8d-11e6-a84c-7f3ab4d5e87d","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"e1446123-2e8d-11e6-a84c-0383f48ca862","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[397],"tindex":"e1448834-2e8d-11e6-a84c-41fe268def01","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e1454b85-2e8d-11e6-a84c-4d056a8c91bc","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e1457296-2e8d-11e6-a84c-0b7e5f708c3d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[398,399,400,401,402,403,404,405,406,407,408],"tindex":"e1457297-2e8d-11e6-a84c-a1b335a51630","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e14599a8-2e8d-11e6-a84c-7b178e1b01ed","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[409,410,411,412,413,414,415,416,417,418,13,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,14,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"e14599a9-2e8d-11e6-a84c-ed2c3bff1741","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"e14599aa-2e8d-11e6-a84c-1f8839d046b0","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[461,492],"tindex":"e145c0bb-2e8d-11e6-a84c-dbf839478a55","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == null) {\n                {\n                    return (doRemoveValue(o)) != null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[427,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542],"tindex":"e145c0bc-2e8d-11e6-a84c-5565ada11069","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[168,170,171,174,177,184,176,197,222,224,225,228,231,238,230,251],"tindex":"e145c0bd-2e8d-11e6-a84c-d7adf4940a62","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[543],"tindex":"e145e7ce-2e8d-11e6-a84c-d348791c19d8","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"e145e7cf-2e8d-11e6-a84c-2da8de89fb56","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            if (start < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e145e7d0-2e8d-11e6-a84c-f3da6b7800bd","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[544,545],"tindex":"e1460ee1-2e8d-11e6-a84c-77e7ece34fd7","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[546],"tindex":"e1465d02-2e8d-11e6-a84c-01d73afb94f5","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e1465d03-2e8d-11e6-a84c-8ff738ecef74","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[547,388,548,549,550,551,389,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681],"tindex":"e1465d04-2e8d-11e6-a84c-3b647ac9fc06","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[682,683,684,685],"tindex":"e1468415-2e8d-11e6-a84c-0d828a260cc0","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[686],"tindex":"e1468416-2e8d-11e6-a84c-7f6edd13ae55","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e146ab27-2e8d-11e6-a84c-75aa592b3b0f","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[687,688,689,690,691],"tindex":"e146ab28-2e8d-11e6-a84c-6bed1bcd7ab9","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[692],"tindex":"e146d239-2e8d-11e6-a84c-ff6d54c42721","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[547,388,548,549,550,551,389,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681],"tindex":"e146d23a-2e8d-11e6-a84c-ab27e2a7189c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e146f94b-2e8d-11e6-a84c-e1495e566550","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e147205c-2e8d-11e6-a84c-a93d37e5ce63","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[693,694],"tindex":"e147205d-2e8d-11e6-a84c-87ae3ef073ef","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[695,696],"tindex":"e147476e-2e8d-11e6-a84c-e1d7f53dc220","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"e147476f-2e8d-11e6-a84c-1d16a6b6c8a2","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"e1476e80-2e8d-11e6-a84c-d53fcbc879af","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"e1476e81-2e8d-11e6-a84c-092f1bfe7b84","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[697,698,699,700],"tindex":"e1476e82-2e8d-11e6-a84c-0591de71b91c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e1476e83-2e8d-11e6-a84c-435d63306700","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[15],"tindex":"e1479594-2e8d-11e6-a84c-03bab60d2b4f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[],"tindex":"e1479595-2e8d-11e6-a84c-9d023e3ba28c","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (len < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[701],"tindex":"e147bca6-2e8d-11e6-a84c-953721412d90","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[],"tindex":"e147bca7-2e8d-11e6-a84c-970bf21ef3e4","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate2 == null) || (predicate2 == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[702,703,704,705,706,707,708],"tindex":"e147bca8-2e8d-11e6-a84c-97d8b658cf76","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[478,482,492,495,496,499,500,501,502,503],"tindex":"e147e3b9-2e8d-11e6-a84c-cf7455c5349e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,698,729,17,18,19,20,21,730,731,22,732,23,515,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,699,754,755,756,757,758,759,760,761,762,526,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,527,794,795,796,797,798,799,800,801,802,700,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,533,827,828,829,830,831,832,833,834,835,836,837,838,534,839,840,841,842,843],"tindex":"e147e3ba-2e8d-11e6-a84c-b9437cda7f9d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"e1480acb-2e8d-11e6-a84c-990b8c6365f7","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[844],"tindex":"e1480acc-2e8d-11e6-a84c-4125b66d6ca9","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e1480acd-2e8d-11e6-a84c-cd8227152bf7","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[845,846],"tindex":"e14831de-2e8d-11e6-a84c-a7ee72025d01","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[59],"tindex":"e14831df-2e8d-11e6-a84c-8fc21f17e2e2","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((b == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[847],"tindex":"e1488000-2e8d-11e6-a84c-a1288c47659d","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"e148a711-2e8d-11e6-a84c-a7218cb6f264","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == null) {\n                {\n                    return (doRemoveValue(o)) != null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e148a712-2e8d-11e6-a84c-b9d9f950df41","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map == null) {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    map.size();\n                    if ((array == null) || ((array.int) == 0)) {\n                        return map;\n                    } \n                    final java.lang.Object java.lang.Object = array[0];\n                    if (obj instanceof java.util.Map.Entry) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                            map.put(entry.getKey(), entry.getValue());\n                        }\n                    } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                        for (final java.lang.Object java.lang.Object : array) {\n                            final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                            map.put(keyval.getKey(), keyval.getValue());\n                        }\n                    } else if (obj instanceof java.lang.Object[]) {\n                        for (int int = 0 ; i < (array.int) ; i++) {\n                            final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                            if ((sub == null) || ((sub.int) < 2)) {\n                                throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                            } \n                            map.put(((K)(sub[0])), ((V)(sub[1])));\n                        }\n                    } else {\n                        for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                            map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                        }\n                    }\n                    return map;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}