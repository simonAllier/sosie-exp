{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":130,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":17,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":0,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":94,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":97,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":82,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":91,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":38,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":60,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":50,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":4,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":36,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":66,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":42,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":13,"org.apache.commons.collections4.CollectionUtilsTest.get":107,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":3,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":125,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":29,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":112,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":113,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":74,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":46,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":62,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":121,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":69,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":111,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":26,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":99,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":32,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":47,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":7,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":115,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":119,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":45,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":106,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":128,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":123,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":18,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":68,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":136,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":96,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":114,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":124,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":92,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":43,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":52,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":67,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":105,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":134,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":132,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":2,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":83,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":133,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":88,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":90,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":14,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":80,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":126,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":40,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":70,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":131,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":34,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":75,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":28,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":135,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":108,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":61,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":104,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":76,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":81,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":56,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":6,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":58,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":15,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":54,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":87,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":73,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":33},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[],"tindex":"9ea098ae-2e8d-11e6-abac-3f25fabb98a1","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Float) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"9ea15bff-2e8d-11e6-abac-1d85843349ad","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(newCapacity)) {\n        {\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n            if (newCapacity <= oldCapacity) {\n                return ;\n            } \n            if ((int) == 0) {\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n            } else {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                (int)++;\n                for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                    if (entry != null) {\n                        oldEntries[i] = null;\n                        do {\n                            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            final int int = hashIndex(entry.int, newCapacity);\n                            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                            newEntries[index] = entry;\n                            entry = next;\n                        } while (entry != null );\n                    } \n                }\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"newCapacity"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[0,1],"tindex":"9ea1aa20-2e8d-11e6-abac-8dd386b95781","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9ea1d131-2e8d-11e6-abac-59d8200bd605","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[2,3,4,5,6,7,8,9],"tindex":"9ea1f842-2e8d-11e6-abac-173d2e9d2ce0","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"9ea1f843-2e8d-11e6-abac-ff6ceae3a717","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[32,33],"tindex":"9ea21f54-2e8d-11e6-abac-0df7d17a758d","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"other"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"9ea24665-2e8d-11e6-abac-693ef580229d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"9ea26d76-2e8d-11e6-abac-affda0b0cd16","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[34,35],"tindex":"9ea29487-2e8d-11e6-abac-59eb2a41625f","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[36],"tindex":"9ea2bb98-2e8d-11e6-abac-afd1c6417259","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[37],"tindex":"9ea2bb99-2e8d-11e6-abac-ed4250c5745d","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[],"tindex":"9ea2e2aa-2e8d-11e6-abac-9baef9b2d517","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (defaultValue < 0) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[38,39],"tindex":"9ea309bb-2e8d-11e6-abac-c9544d08001b","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[40],"tindex":"9ea309bc-2e8d-11e6-abac-7dc0732f2228","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[41,42],"tindex":"9ea330cd-2e8d-11e6-abac-4b590d5f7958","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:312","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeChanged(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9ea357de-2e8d-11e6-abac-714aa28569d7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (dataSize < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"dataSize"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"9ea37eef-2e8d-11e6-abac-cf2bde4d8700","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"9ea37ef0-2e8d-11e6-abac-ef1d5481505c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[102,103,104,105],"tindex":"9ea3a601-2e8d-11e6-abac-8fb4545e09ad","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9ea3cd12-2e8d-11e6-abac-2b98b9607aaa","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"9ea3cd13-2e8d-11e6-abac-d5881febd4ca","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"9ea3f424-2e8d-11e6-abac-bd17fe824e3c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[106],"tindex":"9ea3f425-2e8d-11e6-abac-49a46cd76bc3","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[107,108,109,110],"tindex":"9ea41b36-2e8d-11e6-abac-5d063d89d151","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index == 0) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"9ea49067-2e8d-11e6-abac-47acba5b8d4f","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator1 == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"9ea49068-2e8d-11e6-abac-033c76c25c30","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Collection<?>) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9ea49069-2e8d-11e6-abac-0546b7f24042","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":28,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}