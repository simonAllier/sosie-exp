{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":326,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":134,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":322,"org.apache.commons.collections4.CollectionUtilsTest.collect":186,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":39,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":40,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":46,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":213,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":7,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":328,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":329,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":234,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":54,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":291,"org.apache.commons.collections4.ListUtilsTest.testLazyList":377,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":346,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":352,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":318,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":263,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":168,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":261,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":38,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":225,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":37,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":249,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":17,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":373,"org.apache.commons.collections4.CollectionUtilsTest.transform2":184,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":270,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":345,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":254,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":354,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":246,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":336,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":255,"org.apache.commons.collections4.CollectionUtilsTest.intersection":84,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":382,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":331,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":181,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":228,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":360,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":323,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":277,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":230,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":120,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":315,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":313,"org.apache.commons.collections4.map.CompositeMapTest.testPut":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":281,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":32,"org.apache.commons.collections4.map.CompositeMapTest.testGet":74,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":302,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":216,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":0,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":136,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":130,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":115,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":29,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":71,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":222,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":369,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":342,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":85,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":327,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":81,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":332,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":319,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":244,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":151,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":376,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":150,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":201,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":297,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":330,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":111,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":243,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":227,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":31,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":118,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":171,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":108,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":173,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":357,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":44,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":192,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":99,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":276,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":265,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":210,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":325,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":362,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":190,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":294,"org.apache.commons.collections4.IteratorUtilsTest.testToList":198,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":208,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":177,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":23,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":267,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":344,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":60,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":77,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":215,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":309,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":13,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":229,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":153,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":366,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":179,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":69,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":163,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":123,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":5,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":363,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":107,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":193,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":364,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":117,"org.apache.commons.collections4.ListUtilsTest.testPartition":166,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":102,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":308,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":34,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":127,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":27,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":284,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":93,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":113,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":155,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":28,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":2,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":236,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":241,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":212,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":79,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":380,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":72,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":259,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":189,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":282,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":232,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":237,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":279,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":361,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":370,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":203,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":110,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":21,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":88,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":260,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":12,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":257,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":50,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":271,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":141,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":317,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":20,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":176,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":272,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":264,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":90,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":57,"org.apache.commons.collections4.set.CompositeSetTest.testContains":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":119,"org.apache.commons.collections4.CollectionUtilsTest.isFull":375,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":218,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":280,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":252,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":306,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":296,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":293,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":286,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":300,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":266,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":287,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":43,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":48,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":295,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":343,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":202,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":196,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":384,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":138,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":101,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":160,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":333,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":146,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":191,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":219,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":321,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":142,"org.apache.commons.collections4.map.LRUMapTest.testLRU":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":262,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":247,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":245,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":122,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":206,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":207,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":98,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":278,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":316,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":304,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":22,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":275,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":100,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":114},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[0],"tindex":"0f827423-2e8e-11e6-a9a7-d5fb89752fbb","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n                    if ((predicates.int) != (closures.int)) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n                    } \n                    if ((predicates.int) == 0) {\n                        return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n                    } \n                    return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1],"tindex":"0f833774-2e8e-11e6-a9a7-9707486d58bf","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        changed |= remove(o);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0f835e85-2e8e-11e6-a9a7-4593ce4429ff","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        changed |= remove(o);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[2],"tindex":"0f835e86-2e8e-11e6-a9a7-cd0bec7fcf70","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (b.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[3,4,5,6],"tindex":"0f838597-2e8e-11e6-a9a7-556b2373bc44","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[7,8,9,10,11,12,13],"tindex":"0f83aca8-2e8e-11e6-a9a7-6342fec90f29","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.lang.Object[]) {\n                {\n                    if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    if ((other.size()) != 1) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n                    return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"0f83d3b9-2e8e-11e6-a9a7-27622e3987e5","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[14],"tindex":"0f83d3ba-2e8e-11e6-a9a7-b5cfcf329e50","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0f83facb-2e8e-11e6-a9a7-053a95f601e9","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return defaultValue;\n                    } \n                    return longObject.longValue();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[15],"tindex":"0f83facc-2e8e-11e6-a9a7-290847df5a57","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0f8421dd-2e8e-11e6-a9a7-19552a1f8074","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"0f8448ee-2e8e-11e6-a9a7-8f86fb79834d","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[16],"tindex":"0f8448ef-2e8e-11e6-a9a7-ff2c9b57d8d1","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[17],"tindex":"0f847000-2e8e-11e6-a9a7-f974e9d47410","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[18,19,20,21,22,23,24,25,26],"tindex":"0f847001-2e8e-11e6-a9a7-83c058fd46f9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0f849712-2e8e-11e6-a9a7-fda7ae63da22","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"0f84be23-2e8e-11e6-a9a7-adabaa27822d","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,2,82,83,84,85,86],"tindex":"0f84e534-2e8e-11e6-a9a7-5fedda2af09f","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"0f84e535-2e8e-11e6-a9a7-0911839bcc79","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"0f850c46-2e8e-11e6-a9a7-392374042b30","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[136,137,138,139,140,141,142,143],"tindex":"0f850c47-2e8e-11e6-a9a7-af68adf89c10","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"0f853358-2e8e-11e6-a9a7-097a264b35b8","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[144],"tindex":"0f855a69-2e8e-11e6-a9a7-2734bed5c481","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"0f855a6a-2e8e-11e6-a9a7-09f92c8d800b","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n                    if ((predicates.int) != (closures.int)) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n                    } \n                    if ((predicates.int) == 0) {\n                        return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n                    } \n                    return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"0f85817b-2e8e-11e6-a9a7-35d16f4a40a1","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,145,146,147,148,149,150,151,152,153,154,155,156,157,5,158,159,160,161,162,163,164,165],"tindex":"0f85a88c-2e8e-11e6-a9a7-3b3634696544","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        {\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[166],"tindex":"0f85a88d-2e8e-11e6-a9a7-5b69056ecaec","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[167,168,169,170,171,172,173,174,175,176],"tindex":"0f85cf9e-2e8e-11e6-a9a7-ef130c3ff099","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[177,178],"tindex":"0f85cf9f-2e8e-11e6-a9a7-01ca8591c645","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                {\n                    return (doRemoveKey(o)) != null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"0f85cfa0-2e8e-11e6-a9a7-9d93f4f63ce9","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"0f85cfa1-2e8e-11e6-a9a7-571177ad4db4","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[179,180,181,182],"tindex":"0f85f6b2-2e8e-11e6-a9a7-25c9e9f3ac07","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"0f85f6b3-2e8e-11e6-a9a7-990f4cbec6b1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                {\n                    return (doRemoveKey(o)) != null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"0f85f6b4-2e8e-11e6-a9a7-7d3069567c91","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[183],"tindex":"0f861dc5-2e8e-11e6-a9a7-6f937f6a7b26","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"0f861dc6-2e8e-11e6-a9a7-a756991002ca","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"0f861dc7-2e8e-11e6-a9a7-85c7a9cdd5fe","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[184,185,186],"tindex":"0f8644d8-2e8e-11e6-a9a7-2586f8261444","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0f8644d9-2e8e-11e6-a9a7-a3a2e29ef730","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"0f8644da-2e8e-11e6-a9a7-1551446756e4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"0f866beb-2e8e-11e6-a9a7-9594f8254ed5","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0f866bec-2e8e-11e6-a9a7-dbce8da363ff","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0f8692fd-2e8e-11e6-a9a7-ff40ebfd5962","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return defaultValue;\n                    } \n                    return longObject.longValue();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"0f86ba0e-2e8e-11e6-a9a7-3110d9c991ca","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[187],"tindex":"0f86ba0f-2e8e-11e6-a9a7-39d6718d013c","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[188],"tindex":"0f86ba10-2e8e-11e6-a9a7-ada661e03f9a","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0f86e121-2e8e-11e6-a9a7-71aefdf04249","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"0f86e122-2e8e-11e6-a9a7-af979fe6bd48","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[189],"tindex":"0f86e123-2e8e-11e6-a9a7-bb0eef112ae7","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[190,191,192,193,194,195,196],"tindex":"0f870834-2e8e-11e6-a9a7-01767a56e20e","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"0f870835-2e8e-11e6-a9a7-43ffb45a8d9e","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[197,198,199],"tindex":"0f872f46-2e8e-11e6-a9a7-495fd0c223ad","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"0f872f47-2e8e-11e6-a9a7-d52eca239213","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0f872f48-2e8e-11e6-a9a7-b1dda3a50aed","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[200,201,202],"tindex":"0f872f49-2e8e-11e6-a9a7-83bb30a55dd6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[203,145,204,205],"tindex":"0f87565a-2e8e-11e6-a9a7-2d38e1e8bdb4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[206,207,208],"tindex":"0f8867cb-2e8e-11e6-a9a7-bbe35c246826","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[209],"tindex":"0f888edc-2e8e-11e6-a9a7-55007ec32bbf","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0f888edd-2e8e-11e6-a9a7-01577f5c06ca","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[210],"tindex":"0f888ede-2e8e-11e6-a9a7-0ff31781d138","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[211],"tindex":"0f88b5ef-2e8e-11e6-a9a7-030b2a85eac2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((collection == null) || ((collection.size()) != 1)) {\n                        throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n                    } \n                    return collection.iterator().next();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0f88b5f0-2e8e-11e6-a9a7-cdf404559102","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[3,5],"tindex":"0f88b5f1-2e8e-11e6-a9a7-51f1555c2834","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"0f88dc02-2e8e-11e6-a9a7-d9c908664a39","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[212],"tindex":"0f890313-2e8e-11e6-a9a7-29125a8ffc5f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map == null) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[27,28,29,30,31,32,33,34,35,213,42,43,44,45,46,47,48,52,53,54,55,56,57,58,59,60,214,67],"tindex":"0f892a24-2e8e-11e6-a9a7-c741665b13e6","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[215],"tindex":"0f895135-2e8e-11e6-a9a7-4312babda7d7","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[216,217,218,219,178,220,221,222,223,224],"tindex":"0f895136-2e8e-11e6-a9a7-d9d99d79af5b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"0f897847-2e8e-11e6-a9a7-0fbf03a58d1e","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[183],"tindex":"0f897848-2e8e-11e6-a9a7-c3d6fd00c2bd","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"0f899f59-2e8e-11e6-a9a7-8f2d6e613dec","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"0f89c66a-2e8e-11e6-a9a7-abf40f7ec96c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[225],"tindex":"0f89c66b-2e8e-11e6-a9a7-43dee68cba98","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"0f89ed7c-2e8e-11e6-a9a7-e7f8a3803bcd","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[2,259,85,86],"tindex":"0f8a148d-2e8e-11e6-a9a7-a1dff9b2509a","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0f8a148e-2e8e-11e6-a9a7-c9ff189914c8","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,177,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,216,330,331,332,217,333,334,335,336,337,338,339,340,341,218,342,343,219,178,344,345,220,221,222,223,224],"tindex":"0f8a3b9f-2e8e-11e6-a9a7-c9f0e63221c7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[152,346,153,347,348,349,154,350,351],"tindex":"0f8a62b0-2e8e-11e6-a9a7-0d73aa3422d8","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[352,353,354,355,356],"tindex":"0f8a62b1-2e8e-11e6-a9a7-f143504650c0","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"0f8a89c2-2e8e-11e6-a9a7-59aa8dee6ced","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"0f8ab0d3-2e8e-11e6-a9a7-21630fb3b8be","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0f8afef4-2e8e-11e6-a9a7-5f815ae2dda3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[357],"tindex":"0f8afef5-2e8e-11e6-a9a7-437d4a242e2d","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[358],"tindex":"0f8afef6-2e8e-11e6-a9a7-cf94e8c208b3","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0f8b2607-2e8e-11e6-a9a7-dd82e7e7935c","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[359],"tindex":"0f8b2608-2e8e-11e6-a9a7-f30745131f50","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        {\n            return list == null ? defaultList : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[360,361,362,363,364],"tindex":"0f8b2609-2e8e-11e6-a9a7-c3371e7de23c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[365,366,367,368,369,370,371],"tindex":"0f8b260a-2e8e-11e6-a9a7-eb0453e1a84a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[372,210],"tindex":"0f8b4d1b-2e8e-11e6-a9a7-fd187106849d","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"0f8b4d1c-2e8e-11e6-a9a7-cba52146ba93","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"0f8b4d1d-2e8e-11e6-a9a7-716879f07002","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.lang.Object[]) {\n                {\n                    if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    if ((other.size()) != 1) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n                    return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[373],"tindex":"0f8b742e-2e8e-11e6-a9a7-4565a06e34f8","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"0f8b742f-2e8e-11e6-a9a7-c7039fba1e5f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((collection == null) || ((collection.size()) != 1)) {\n                        throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n                    } \n                    return collection.iterator().next();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[374],"tindex":"0f8b7430-2e8e-11e6-a9a7-9745c87484e5","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[375,376],"tindex":"0f8b9b41-2e8e-11e6-a9a7-d746d3d2fee2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[377],"tindex":"0f8b9b42-2e8e-11e6-a9a7-e17ceaee0b51","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0f8b9b43-2e8e-11e6-a9a7-bbd5d70a3f5a","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[378],"tindex":"0f8bc254-2e8e-11e6-a9a7-895447614d28","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0f8bc255-2e8e-11e6-a9a7-1d6a02bfd6f5","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[188,0,379,380,381,208,382,383,384,385],"tindex":"0f8bc256-2e8e-11e6-a9a7-f19bcd14cfd9","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}