{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":257,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":663,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":131,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":61,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":105,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":597,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":622,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":75,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":740,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":758,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":359,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":553,"org.apache.commons.collections4.CollectionUtilsTest.collect":277,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":557,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":559,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":535,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":558,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":695,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":543,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":373,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":265,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":500,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":728,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":310,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":365,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":172,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":515,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":655,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":258,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":307,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":355,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":403,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":300,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":197,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":467,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":249,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":556,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":619,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":554,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":555,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":228,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":421,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":722,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":491,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":308,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":458,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":572,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":387,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":178,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":605,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":10,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":426,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":609,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":591,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":54,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":628,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":132,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":579,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":566,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":751,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":691,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":416,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":377,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":375,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":427,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":576,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":33,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":471,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":697,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":754,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":406,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":244,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":534,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":360,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":314,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":408,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":701,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":42,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":280,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":346,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":643,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":518,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":352,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":1,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":89,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":646,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":647,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":550,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":631,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":216,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":367,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":217,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":730,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":52,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":684,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":32,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":250,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":37,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":215,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":546,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":745,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":390,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":753,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":520,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":138,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":626,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":620,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":634,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":468,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":439,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":338,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":240,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":507,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":621,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":158,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":160,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":374,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":440,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":651,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":757,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":364,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":255,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":675,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":716,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":370,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":734,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":587,"org.apache.commons.collections4.list.TreeListTest.testRemove":714,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":266,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":494,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":385,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":466,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":91,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":508,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":681,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":356,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":501,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":288,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":723,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":514,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":262,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":536,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":175,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":672,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":724,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":721,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":14,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":432,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":334,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":368,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":259,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":260,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":200,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":479,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":392,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":437,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":163,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":719,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":142,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":709,"org.apache.commons.collections4.map.LRUMapTest.testClone":83,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":531,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":100,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":290,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":548,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":480,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":565,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":40,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":247,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":469,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":533,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":28,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":313,"org.apache.commons.collections4.list.TreeListTest.testListEquals":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":749,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":362,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":436,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":682,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":577,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":129,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":198,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":712,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":561,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":673,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":660,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":351,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":578,"org.apache.commons.collections4.IteratorUtilsTest.testToList":395,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":659,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":329,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":357,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":478,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":389,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":746,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":637,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":118,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":117,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":512,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":744,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":289,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":456,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":522,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":741,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":270,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":348,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":713,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":164,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":699,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":2,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":653,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":705,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":443,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":103,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":702,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":361,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":688,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":62,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":398,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":463,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":497,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":472,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":707,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":208,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":453,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":45,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":735,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":411,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":286,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":231,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":738,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":674,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":537,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":39,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":423,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":347,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":43,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":569,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":625,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":49,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":183,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":669,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":568,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":656,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":499,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":544,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":177,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":759,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":321,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":743,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":393,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":206,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":282,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":35,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":761,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":64,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":545,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":589,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":102,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":567,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":147,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":574,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":148,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":687,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":205,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":11,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":59,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":710,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":229,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":38,"org.apache.commons.collections4.map.HashedMapTest.testClone":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":747,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":319,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":760,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":409,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":316,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":431,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":600,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":677,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":201,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":125,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":562,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":708,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":207,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":624,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":135,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":615,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":444,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":239,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":447,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":17,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":291,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":167,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":678,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":298,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":7,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":430,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":539,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":540,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":683,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":541,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":658,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":733,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":492,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":309,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":449,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":627,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":484,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":180,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":493,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":676,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":179,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":181,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":354,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":166,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":92,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":238,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":563,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":461,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":434,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":750,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":4,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":510,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":137,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":193,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":729,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":519,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":580,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":41,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":657,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":111,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":161,"org.apache.commons.collections4.list.TreeListTest.testBug35258":717,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":726,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":410,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":650,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":317,"org.apache.commons.collections4.map.LinkedMapTest.testClone":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":482,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":502,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":424,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":736,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":233,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":715,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":254,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":267,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":210,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":235,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":509,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":690,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":428,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":333,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":311,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":429,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":517,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":560,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":711,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":323,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":66,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":599,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":703,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":475,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":473,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":248,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":278,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":727,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":693,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":532,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":538,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":756,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":128,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":152,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":465,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":588,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":474,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":689,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":748,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":752,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":383,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":371,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":529,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":271,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":96,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":30,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":592,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":742,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":528,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":194,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":582,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":739,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":525,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":292,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":614,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":640,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":372,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":581,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":630,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":384,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":692,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":549,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":69,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":358,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":227,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":662,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":486,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":108,"org.apache.commons.collections4.map.LRUMapTest.testLRU":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":306,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":299,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":641,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":419,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":611,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":696,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":666,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":67,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":415,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":725,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":12,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":283,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":645,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":47,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":485,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":451,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":27,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":607,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":737,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":638,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":86,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":315,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":442,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":115,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":686,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":353,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":195,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":113,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":551,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":114,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":341,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":94,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":279,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":483,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":281,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":322,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":312,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":246,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":706,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":731,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":639,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":435,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":87,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":623,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":112,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":413,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":652,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":199,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":464,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":585,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":274,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":36},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[0],"tindex":"d69abd54-3e80-11e6-a164-9d4177ab5ed4","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"d69b0b75-3e80-11e6-a164-b394ab66ed0d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[15],"tindex":"d69b3286-3e80-11e6-a164-31c7c2ef2d00","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"d69b3287-3e80-11e6-a164-9d31e01f55d5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[277],"tindex":"d69b3288-3e80-11e6-a164-eb503c95722c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[97,163],"tindex":"d69b5999-3e80-11e6-a164-c1ae0c2b6a2d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[278],"tindex":"d69b599a-3e80-11e6-a164-b3ecd8b0b34a","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"d69b80ab-3e80-11e6-a164-e3106a0c423d","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"d69b80ac-3e80-11e6-a164-77a9552b042d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[294],"tindex":"d69b80ad-3e80-11e6-a164-492365e189ba","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[104,108,119,120,170,174,185,186],"tindex":"d69b80ae-3e80-11e6-a164-f1c87d26e2c7","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[23,42],"tindex":"d69ba7bf-3e80-11e6-a164-d52f93a9f41d","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d69ba7c0-3e80-11e6-a164-e91fdbc8900f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[295],"tindex":"d69bced1-3e80-11e6-a164-71471823a6b8","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d69bced2-3e80-11e6-a164-f53b5297a6b4","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[296],"tindex":"d69bced3-3e80-11e6-a164-739522ac55c7","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392],"tindex":"d69bced4-3e80-11e6-a164-dbcee1af4623","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"d69bf5e5-3e80-11e6-a164-118737fd17f5","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[393,394,395],"tindex":"d69bf5e6-3e80-11e6-a164-a518cace819e","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[139,142],"tindex":"d69bf5e7-3e80-11e6-a164-5791424e059f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[60,64,75,76,396,397,398,399,400,135,139,150,151,401,402,403,404,197,204,208,219,220,245,251,265,268],"tindex":"d69bf5e8-3e80-11e6-a164-6332a4dafbed","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437],"tindex":"d69bf5e9-3e80-11e6-a164-e321b1f65fb1","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[438],"tindex":"d69c1cfa-3e80-11e6-a164-43241bcb0c5f","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[439],"tindex":"d69c1cfb-3e80-11e6-a164-57e5ddbb3184","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:213","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"tindex":"d69c1cfc-3e80-11e6-a164-35b09532c989","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[466,467,468,469],"tindex":"d69c1cfd-3e80-11e6-a164-7d60626eaebe","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                        while (e.hasNext()) {\n                            if (!(coll.contains(e.next()))) {\n                                e.remove();\n                                modified = true;\n                            } \n                        }\n                        return modified;\n                    } else {\n                        return decorated().retainAll(null);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[470],"tindex":"d69c1cfe-3e80-11e6-a164-4ff7148fdb21","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[301,302,342,343,368,369],"tindex":"d69c440f-3e80-11e6-a164-81856ccd5dd9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[471,472],"tindex":"d69c4410-3e80-11e6-a164-d790a0345ecf","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"d69c4411-3e80-11e6-a164-279bf0d611f9","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n                {\n                    return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"d69c4412-3e80-11e6-a164-7f4092a839a6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[473,474,475,476,477,478,479,480,481,482,483,484,485],"tindex":"d69c4413-3e80-11e6-a164-d368c2bc710a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[],"tindex":"d69c4414-3e80-11e6-a164-b383fadfd9b5","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"removeCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"d69c6b25-3e80-11e6-a164-c7034fc99da9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d69c6b26-3e80-11e6-a164-eddad376da53","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[486,487],"tindex":"d69c6b27-3e80-11e6-a164-bbdd5e934c5a","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"d69c6b28-3e80-11e6-a164-c984ace78d39","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[351],"tindex":"d69c6b29-3e80-11e6-a164-81110d73fca9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"d69c923a-3e80-11e6-a164-e9840e1d5369","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (input == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            try {\n                                if (input == null) {\n                                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                                } \n                                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                                return con.newInstance(java.lang.Object[]);\n                            } catch (final java.lang.NoSuchMethodException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n                            } catch (final java.lang.InstantiationException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n                            } catch (final java.lang.IllegalAccessException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n                            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[488],"tindex":"d69c923b-3e80-11e6-a164-d9c2fe08d66f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"d69c923c-3e80-11e6-a164-65433508ea61","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"d69c923d-3e80-11e6-a164-0d793db7dbdc","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"tindex":"d69c923e-3e80-11e6-a164-7da0e4940bfe","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,0,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"d69cb94f-3e80-11e6-a164-070e19d2d4f1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                {\n                    final K K = castKey(k);\n                    if (key == null) {\n                        return null;\n                    } \n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[563,564],"tindex":"d69cb950-3e80-11e6-a164-1dd8a97a52e9","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"d69cb951-3e80-11e6-a164-9b6556f1abc3","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"d69ce062-3e80-11e6-a164-71de8425c2cc","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[565],"tindex":"d69ce063-3e80-11e6-a164-65aa4ef00de3","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[308,324],"tindex":"d69ce064-3e80-11e6-a164-1d8604b97fa0","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[566,567,568,569,570,571,572],"tindex":"d69ce065-3e80-11e6-a164-1b697fac3636","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index > 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,228,616,617,618,619,620],"tindex":"d69ce066-3e80-11e6-a164-c1d45ff95063","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d69ce067-3e80-11e6-a164-4f46bc43b111","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639],"tindex":"d69d0778-3e80-11e6-a164-2179f41dafcb","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d69d0779-3e80-11e6-a164-a70929d05959","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"d69d077a-3e80-11e6-a164-c32aaa37e39e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[640,641],"tindex":"d69d2e8b-3e80-11e6-a164-916d72fa9bc6","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[642,643,644,645,646,647],"tindex":"d69d2e8c-3e80-11e6-a164-d7a8e7e6f150","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"d69d2e8d-3e80-11e6-a164-0b47f501d99a","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676],"tindex":"d69d2e8e-3e80-11e6-a164-05cd8060ccdc","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[677],"tindex":"d69d2e8f-3e80-11e6-a164-f98c93b0a14b","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d69d2e90-3e80-11e6-a164-e14be5af0192","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d69d55a1-3e80-11e6-a164-6f544c204d11","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"d69d55a2-3e80-11e6-a164-29d3a3eef795","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                {\n                    final boolean boolean = java.util.Set<E>.remove(object);\n                    if (result) {\n                        super.remove(object);\n                    } \n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"d69d55a3-3e80-11e6-a164-571de32c9051","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                {\n                    final K K = castKey(k);\n                    if (key == null) {\n                        return null;\n                    } \n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[678,679,680,681,682],"tindex":"d69d55a4-3e80-11e6-a164-79305fa063ee","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[651,683,684],"tindex":"d69d7cb5-3e80-11e6-a164-1b6a64a247e3","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"d69d7cb6-3e80-11e6-a164-63197c718111","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"d69d7cb7-3e80-11e6-a164-fb705d436e4e","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (input == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            try {\n                                if (input == null) {\n                                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                                } \n                                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                                return con.newInstance(java.lang.Object[]);\n                            } catch (final java.lang.NoSuchMethodException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n                            } catch (final java.lang.InstantiationException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n                            } catch (final java.lang.IllegalAccessException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n                            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"d69d7cb8-3e80-11e6-a164-b56cbf35cda8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[685],"tindex":"d69da3c9-3e80-11e6-a164-a5c24307665b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[83,85,90,96,97,101,102,103,104,105,106,107,108,111,112,113,114,115,116,117,118,123,124,125,162,163,167,168,169,170,171,173,174,177,178,179,180,181,182,183,184,189],"tindex":"d69da3ca-3e80-11e6-a164-ed61d8a07b64","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[686],"tindex":"d69da3cb-3e80-11e6-a164-7f6167c877b6","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d69da3cc-3e80-11e6-a164-c52c4403b8a3","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"d69dcadd-3e80-11e6-a164-d770717c7333","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n                {\n                    return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"d69dcade-3e80-11e6-a164-7932468144e7","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d69dcadf-3e80-11e6-a164-739590dedf43","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                        while (e.hasNext()) {\n                            if (!(coll.contains(e.next()))) {\n                                e.remove();\n                                modified = true;\n                            } \n                        }\n                        return modified;\n                    } else {\n                        return decorated().retainAll(null);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[687],"tindex":"d69dcae0-3e80-11e6-a164-4f85f9f74ea2","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[302,343,384,388,390,391,392],"tindex":"d69dcae1-3e80-11e6-a164-a7ce38a62faa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[640],"tindex":"d69dcae2-3e80-11e6-a164-f95d83868628","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"d69df1f3-3e80-11e6-a164-e5b1fa888f62","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[688,689],"tindex":"d69df1f4-3e80-11e6-a164-13efca513813","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"d69df1f5-3e80-11e6-a164-d37d14ca2492","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[522,690,691,692,693,529,530,531,694,0,553,557,558,695,696,697,698,560,561,562,699],"tindex":"d69df1f6-3e80-11e6-a164-dd2b7c2cf683","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"d69e1907-3e80-11e6-a164-536ad4fcd69f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                {\n                    final boolean boolean = java.util.Set<E>.remove(object);\n                    if (result) {\n                        super.remove(object);\n                    } \n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[16,18,31,35,37,50,57,58,59,60,61,63,64,67,68,700,101,102,103,104,105,107,108,111,112,132,133,134,135,136,138,143,167,168,169,170,171,173,174,177,178,701,197,194,201,202,203,204,205,207,208,211,212,228],"tindex":"d69e1908-3e80-11e6-a164-7127a576c922","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtBinaryOperatorImpl","sourcecode":"(count <= 0) || (closure == null)"},"failures":[702],"tindex":"d69e1909-3e80-11e6-a164-c191de93dc62","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((count <= 0) || (closure == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count","closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[703,704,705,706,706,707,708,708,709,710,711],"tindex":"d69e190a-3e80-11e6-a164-69b69337a778","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"d69e190b-3e80-11e6-a164-8fcbf01bb19e","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (input == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            try {\n                                if (input == null) {\n                                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                                } \n                                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                                return con.newInstance(java.lang.Object[]);\n                            } catch (final java.lang.NoSuchMethodException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n                            } catch (final java.lang.InstantiationException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n                            } catch (final java.lang.IllegalAccessException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n                            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"d69e401c-3e80-11e6-a164-6b6a737adcd3","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[535],"tindex":"d69e401d-3e80-11e6-a164-2be2bd3d8068","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"d69e401e-3e80-11e6-a164-31a166ca71db","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[712,687],"tindex":"d69e401f-3e80-11e6-a164-d993cc276d56","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"d69e4020-3e80-11e6-a164-bd9306b1c83c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[713,714,715,716,717,718,719,720,721,722,489,490,491,492,723,724,493,494,725,726,495,727,728,496,729,730,731,732,733,734,497,498,499,500,735,501,502,503,504,505,506,507,508,510,736,737,738],"tindex":"d69e4021-3e80-11e6-a164-f5e7b66d7816","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if ((endIndex < endIndex) || (index > index)) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"endIndex","endIndex":"index","index":"endIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"d69e6732-3e80-11e6-a164-510c85b1a544","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[229,230,231,232],"tindex":"d69e6733-3e80-11e6-a164-033430951170","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[739],"tindex":"d69e6734-3e80-11e6-a164-47729ed7ee1e","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (equator == null) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[740,741,511,512,742,743,744,745,513,514,746,515,516,517,518,747,519,748,520,749,750,521,522,751,752,753,523,524,525,526,527,528,690,754,755,691,692,756,757,693,529,530,531,694,758,759],"tindex":"d69e6735-3e80-11e6-a164-e504c3e0ed7a","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"d69e8e46-3e80-11e6-a164-1fd517f96112","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[760,761],"tindex":"d69e8e47-3e80-11e6-a164-3351fe5f2a50","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}