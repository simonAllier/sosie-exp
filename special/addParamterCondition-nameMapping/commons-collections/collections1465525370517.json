{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":4,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":5,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":37,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":36,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":20},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3ab75aad-2eb2-11e6-8c7c-61c8094043ca","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0,1],"tindex":"3ab8450e-2eb2-11e6-8c7c-3539f5c24d72","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"3ab8450f-2eb2-11e6-8c7c-9167c5e5de46","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (!(node.isEmpty())) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[35,36],"tindex":"3ab86c20-2eb2-11e6-8c7c-d52313ce95f5","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[37],"tindex":"3ab89331-2eb2-11e6-8c7c-73b1e49b59aa","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":5,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}