{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":55,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":407,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":487,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":197,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":104,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":199,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":424,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":583,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":599,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":277,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":348,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":108,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":347,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":580,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":266,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":191,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":63,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":538,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":77,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":474,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":336,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":70,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":528,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":496,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":23,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":532,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":359,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":183,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":187,"org.apache.commons.collections4.ListUtilsTest.testLazyList":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":59,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":3,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":570,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":0,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":454,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":518,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":405,"org.apache.commons.collections4.CollectionUtilsTest.transform2":404,"org.apache.commons.collections4.CollectionUtilsTest.transform1":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":171,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":91,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":262,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":419,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":383,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":80,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":339,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":73,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":309,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":582,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":381,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":491,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":393,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":436,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":585,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":505,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":483,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":111,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":287,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":389,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":446,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":600,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":549,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":207,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":548,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":304,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":355,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":534,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":168,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":366,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":182,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":439,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":78,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":68,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":485,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":435,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":74,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":126,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":114,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":458,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":396,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":60,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":176,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":323,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":511,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":357,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":292,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":536,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":564,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":271,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":495,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":72,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":109,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":399,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":415,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":155,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":596,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":280,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":566,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":169,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":397,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":510,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":426,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":490,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":390,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":395,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":138,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":448,"org.apache.commons.collections4.ListUtilsTest.testSubtract":143,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":240,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":417,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":460,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":537,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":209,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":587,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":269,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":146,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":16,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":558,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":367,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":66,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":190,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":501,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":584,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":257,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":519,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":476,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":52,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":500,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":551,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":382,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":227,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":325,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":222,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":334,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":221,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":219,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":298,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":343,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":319,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":414,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":208,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":358,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":351,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":153,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":503,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":150,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":391,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":291,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":324,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":230,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":370,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":318,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":198,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":254,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":563,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":533,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":473,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":492,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":567,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":247,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":463,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":156,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":452,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":205,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":578,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":497,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":464,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":507,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":447,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":124,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":338,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":210,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":467,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":576,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":160,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":457,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":102,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":425,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":249,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":353,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":569,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":297,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":543,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":574,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":251,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":554,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":498,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":166,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":220,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":545,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":311,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":486,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":470,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":606,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":471,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":45,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":229,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":239,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":22,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":494,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":499,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":158,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":241,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":200,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":607,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":305,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":552,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":1,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":228,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":479,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":546,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":235,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":526,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":149,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":185,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":236,"org.apache.commons.collections4.SetUtilsTest.testHashCode":245,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":306,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":581,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":212,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":123,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":58,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":597,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":234,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":299,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":368,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":147,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":137,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":330,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":115,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":364,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":531,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":130,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":422,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":521,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":148,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":432,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":412,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":553,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":469,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":296,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":603,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":380,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":524,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":540,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":437,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":139,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":260,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":430,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":525,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":188,"org.apache.commons.collections4.SetUtilsTest.testEquals":246,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":26,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":177,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":161,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":279,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":560,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":335,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":411,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":434,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":289,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":141,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":312,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":481,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":157,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":294,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":263,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":275,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":331,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":259,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":243,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":484,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":410,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":116,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":29,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":341,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":250,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":509,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":75,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":47,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":285,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":465,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":301,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":192,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":224,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":352,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":379,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":462,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":377,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":100,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":571,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":376,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":579,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":76,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":542,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":284,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":218,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":384,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":502,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":255,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":173,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":504,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":401,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":516,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":588,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":321,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":140,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":512,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":577,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":488,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":332,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":575,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":333,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":539,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":189,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":283,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":18,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":216,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":44,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":314,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":423,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":15,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":313,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":276,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":315,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":316,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":261,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":522,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":233,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":326,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":482,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":121,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":328,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":561},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0],"tindex":"c1d5574f-2eae-11e6-9776-b16582216df9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"c1d6b6e0-2eae-11e6-9776-a1f3c8d52169","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"c1d70501-2eae-11e6-9776-e5452854fe6b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c1d72c12-2eae-11e6-9776-67d0b49952f6","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c1d75323-2eae-11e6-9776-b18cf40cb53f","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[71,75,85,88,89,92,93,94,95,96],"tindex":"c1d77a34-2eae-11e6-9776-a53b35948752","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from == null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c1d7c855-2eae-11e6-9776-13c5dc73be41","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"c1d7ef66-2eae-11e6-9776-bfdd777c95a2","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[121,122,123,124],"tindex":"c1d81677-2eae-11e6-9776-c1fbef94e5a7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[3,44,88,92,94,95,96],"tindex":"c1d83d88-2eae-11e6-9776-95952e8c38c2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"c1d86499-2eae-11e6-9776-f1d1523b984d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[143,144],"tindex":"c1d8649a-2eae-11e6-9776-2b544beb0802","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"c1d88bab-2eae-11e6-9776-e3d5acc1fe37","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[145,146,147,148,149,150,151],"tindex":"c1d88bac-2eae-11e6-9776-8b3a2f4d9266","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[152,153,154,155,156,157,158,159],"tindex":"c1d8b2bd-2eae-11e6-9776-034b0a61379a","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[160,161],"tindex":"c1d8b2be-2eae-11e6-9776-2f83cc8453a6","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c1d8d9cf-2eae-11e6-9776-e74454b7ae93","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"c1d900e0-2eae-11e6-9776-b16eb6837a8e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c1d900e1-2eae-11e6-9776-b746ae7b8789","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[221],"tindex":"c1d927f2-2eae-11e6-9776-dfb3e7f66bcc","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"c1d94f03-2eae-11e6-9776-91443a2ca661","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"tindex":"c1d94f04-2eae-11e6-9776-dd760993e715","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[331],"tindex":"c1da3965-2eae-11e6-9776-c9fe8ac0a501","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[246],"tindex":"c1da6076-2eae-11e6-9776-17fbb3665078","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (((set2 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set2","set1":"set2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"c1da6077-2eae-11e6-9776-2b53e535c2c4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[332,333,334],"tindex":"c1da6078-2eae-11e6-9776-fbb75d8c1c1b","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[335,336,337,338,339,340,341,342],"tindex":"c1da8789-2eae-11e6-9776-fdd8fe675d7e","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[343,344,345],"tindex":"c1da878a-2eae-11e6-9776-fd004d581a6d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"c1da878b-2eae-11e6-9776-4dd9c65e5f97","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry != null) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391],"tindex":"c1dad5ac-2eae-11e6-9776-4fb0eba28494","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[285],"tindex":"c1dad5ad-2eae-11e6-9776-3b39c8c94dbb","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"c1dafcbe-2eae-11e6-9776-a1f99cc38196","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[392],"tindex":"c1dafcbf-2eae-11e6-9776-3f5e8b8fe9a8","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"c1dafcc0-2eae-11e6-9776-ab135f7858be","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[393,394,395,396,397,398,399,400,401],"tindex":"c1db22d1-2eae-11e6-9776-79669a8763d7","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"c1db22d2-2eae-11e6-9776-736be194d083","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[402],"tindex":"c1db49e3-2eae-11e6-9776-5f744dfcac25","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[403,404],"tindex":"c1db49e4-2eae-11e6-9776-57a192165d21","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"c1db70f5-2eae-11e6-9776-bd1da0f584cf","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"c1db70f6-2eae-11e6-9776-f5ac5a110a82","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c1db70f7-2eae-11e6-9776-c1a73c0b3a77","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[405],"tindex":"c1db9808-2eae-11e6-9776-a139c0b33882","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444],"tindex":"c1db9809-2eae-11e6-9776-9be7877cb768","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key == null) {\n                        return 0;\n                    } \n                    int int = key.hashCode();\n                    hash += ~(hash << 15);\n                    hash ^= hash >>> 10;\n                    hash += hash << 3;\n                    hash ^= hash >>> 6;\n                    hash += ~(hash << 11);\n                    hash ^= hash >>> 16;\n                    hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n                    return hash < 0 ? hash * (-1) : hash;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"c1dbbf1a-2eae-11e6-9776-438d34f2c8d0","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"c1dbbf1b-2eae-11e6-9776-fd3e09a40039","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[461],"tindex":"c1dbe62c-2eae-11e6-9776-6bc9051ac8c7","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c1dbe62d-2eae-11e6-9776-d95c39d062b7","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[462,445,463,464,465,466,446,447,448,449,450,467,451,452,453,454,455,468,469,456,470,471,472,473,474,475,457,476,477,478],"tindex":"c1dbe62e-2eae-11e6-9776-b1ba3af67d4b","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[479,480],"tindex":"c1dc0d3f-2eae-11e6-9776-c32b99bbefee","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[481,482,483,484],"tindex":"c1dc0d40-2eae-11e6-9776-57da605b8c49","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[485],"tindex":"c1dc3451-2eae-11e6-9776-2b6908470907","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c1dc3452-2eae-11e6-9776-cf8de559d93d","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[486,487],"tindex":"c1dc3453-2eae-11e6-9776-89f3a8cc8809","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[488],"tindex":"c1dc5b64-2eae-11e6-9776-93b3d86b2e7a","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"c1dc5b65-2eae-11e6-9776-49219f932ce5","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"c1dc5b66-2eae-11e6-9776-f582d9f1df2d","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[489],"tindex":"c1dc8277-2eae-11e6-9776-b119d40a2bba","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (list != null)) && ((list.size()) > 0)"},"failures":[490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526],"tindex":"c1dc8278-2eae-11e6-9776-93818ec3948c","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c1dc8279-2eae-11e6-9776-2f95860883c9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[527],"tindex":"c1dca98a-2eae-11e6-9776-4b42ea807a2a","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"c1dca98b-2eae-11e6-9776-ffc9cc6deeb8","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[528],"tindex":"c1dca98c-2eae-11e6-9776-8393a1e1742f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"c1dca98d-2eae-11e6-9776-adb69a651575","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c1dcd09e-2eae-11e6-9776-bbfe9b45a3c0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[529],"tindex":"c1dcd09f-2eae-11e6-9776-5fcd84e64dc9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[530,531,532,533,335,534,535,536,336,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,337,338,559,560,561,562,563,564,565,566,567,568,569,570],"tindex":"c1dcd0a0-2eae-11e6-9776-29c2a6d74ffd","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"c1dcf7b1-2eae-11e6-9776-b1e736d4b8aa","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"c1dcf7b2-2eae-11e6-9776-0be5cb530d8d","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[138],"tindex":"c1dcf7b3-2eae-11e6-9776-d3a2520ebef5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"c1dd1ec4-2eae-11e6-9776-b3b2f3ff5b1e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[508],"tindex":"c1dd1ec5-2eae-11e6-9776-b39a344a022c","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c1dd1ec6-2eae-11e6-9776-05ce6cb7c3bf","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"c1dd45d7-2eae-11e6-9776-cf0c296afd75","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c1dd45d8-2eae-11e6-9776-09da8673a554","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"c1dd45d9-2eae-11e6-9776-49450fe0eb2d","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[571],"tindex":"c1dd6cea-2eae-11e6-9776-115a8a4f0870","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (equator == null) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[572,573],"tindex":"c1dd93fb-2eae-11e6-9776-fdd20de56957","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c1dd93fc-2eae-11e6-9776-7da718a3f5a0","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"c1dd93fd-2eae-11e6-9776-6d7e0b8282f0","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[574],"tindex":"c1ddbb0e-2eae-11e6-9776-af7ed46b1d98","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"c1ddbb0f-2eae-11e6-9776-17824ddf447b","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[301],"tindex":"c1ddbb10-2eae-11e6-9776-3fd0178e3a26","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map != null) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"c1de0931-2eae-11e6-9776-b3ae5a6bf029","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c1de0932-2eae-11e6-9776-65da7d3d7809","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[7,8,47,49,50],"tindex":"c1de0933-2eae-11e6-9776-8b05df5037d0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[486],"tindex":"c1de0934-2eae-11e6-9776-efc29d43a814","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[575,576,577,578,579,489,580],"tindex":"c1de3045-2eae-11e6-9776-4197e947423d","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[581,582,583,584,585,586,587,588,589,590,591,592,593,594],"tindex":"c1de3046-2eae-11e6-9776-15db2e0b89ff","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[595,596],"tindex":"c1de3047-2eae-11e6-9776-850cabebe37b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c1de5758-2eae-11e6-9776-ef006f258351","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key == null) {\n                        return 0;\n                    } \n                    int int = key.hashCode();\n                    hash += ~(hash << 15);\n                    hash ^= hash >>> 10;\n                    hash += hash << 3;\n                    hash ^= hash >>> 6;\n                    hash += ~(hash << 11);\n                    hash ^= hash >>> 16;\n                    hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n                    return hash < 0 ? hash * (-1) : hash;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[597,598],"tindex":"c1de7e69-2eae-11e6-9776-ffb3f9607022","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[599],"tindex":"c1de7e6a-2eae-11e6-9776-496e00112125","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"c1de7e6b-2eae-11e6-9776-e7f621d699c3","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"c1dea57c-2eae-11e6-9776-4f33ca8c1da5","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[600],"tindex":"c1dea57d-2eae-11e6-9776-3b41b77e8764","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[601],"tindex":"c1dea57e-2eae-11e6-9776-5bd3b52d0dfa","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[602],"tindex":"c1dea57f-2eae-11e6-9776-c9eb0a149bfb","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[603],"tindex":"c1decc90-2eae-11e6-9776-3bf5e636d13b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c1decc91-2eae-11e6-9776-7121888acd3e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[604,605,606,607],"tindex":"c1decc92-2eae-11e6-9776-8be7eddd1f9b","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}