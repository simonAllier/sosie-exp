{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":94,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":538,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":539,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":621,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":687,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":711,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":463,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":318,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":443,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":552,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":780,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":595,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":500,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":106,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":81,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":545,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":83,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":82,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":229,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":348,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":185,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":540,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":162,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":38,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":102,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":285,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":142,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":139,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":578,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":730,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":667,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":465,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":769,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":133,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":713,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":206,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":416,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":618,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":675,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":508,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":297,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":737,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":274,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":308,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":116,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":190,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":558,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":107,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":156,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":313,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":237,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":488,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":686,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":613,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":753,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":752,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":751,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":501,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":41,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":160,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":3,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":625,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":731,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":44,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":114,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":496,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":400,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":481,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":286,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":566,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":301,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":725,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":352,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":284,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":283,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":128,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":231,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":377,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":499,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":746,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":321,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":323,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":631,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":441,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":131,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":329,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":556,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":723,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":701,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":59,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":729,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":655,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":17,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":704,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":543,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":582,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":198,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":320,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":411,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":356,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":786,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":288,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":654,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":195,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":322,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":155,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":241,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":600,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":144,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":317,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":92,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":173,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":708,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":93,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":230,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":453,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":184,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":14,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":326,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":617,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":497,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":548,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":722,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":45,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":23,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":706,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":376,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":768,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":97,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":645,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":273,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":563,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":649,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":292,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":282,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":638,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":773,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":550,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":254,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":259,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":334,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":389,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":440,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":341,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":391,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":390,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":430,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":755,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":783,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":639,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":275,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":374,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":637,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":541,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":324,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":689,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":69,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":338,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":239,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":26,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":204,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":685,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":270,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":604,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":271,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":436,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":199,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":89,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":350,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":161,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":583,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":693,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":86,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":714,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":562,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":663,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":378,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":420,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":34,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":491,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":659,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":418,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":648,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":442,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":765,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":385,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":307,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":312,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":692,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":314,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":186,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":18,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":482,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":147,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":219,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":218,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":567,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":215,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":394,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":395,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":217,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":216,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":393,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":469,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":211,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":623,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":213,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":212,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":331,"org.apache.commons.collections4.list.TreeListTest.testBug35258":632,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":524,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":159,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":415,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":522,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":754,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":523,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":760,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":175,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":417,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":756,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":36,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":315,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":569,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":279,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":167,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":262,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":447,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":741,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":353,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":177,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":505,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":668,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":592,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":371,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":50,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":49,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":584,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":749,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":518,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":517,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":10,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":232,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":236,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":624,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":662,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":461,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":750,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":448,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":196,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":690,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":379,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":380,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":302,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":330,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":346,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":293,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":727,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":277,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":71,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":164,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":154,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":421,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":758,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":679,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":187,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":627,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":594,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":110,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":742,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":674,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":220,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":478,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":191,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":728,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":489,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":747,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":202,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":58,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":335,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":642,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":119,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":587,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":113,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":748,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":715,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":710,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":767,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":784,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":452,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":507,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":80,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":622,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":78,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":559,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":269,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":365,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":414,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":636,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":328,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":347,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":387,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":386,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":634,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":486,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":716,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":384,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":123,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":610,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":121,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":252,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":444,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":688,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":603,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":571,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":462,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":776,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":607,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":364,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":615,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":256,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":709,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":225,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":193,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":529,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":99,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":300,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":515,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":560,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":683,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":74,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":599,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":303,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":744,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":554,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":200,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":70,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":669,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":43,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":484,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":25,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":665,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":596,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":757,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":382,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":362,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":774,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":553,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":423,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":120,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":351,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":369,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":248,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":457,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":111,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":766,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":32,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":510,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":511,"org.apache.commons.collections4.list.TreeListTest.testRemove":628,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":734,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":345,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":103,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":626,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":304,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":602,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":579,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":210,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":428,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":474,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":635,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":691,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":657,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":735,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":205,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":777,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":402,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":733,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":403,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":419,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":450,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":681,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":612,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":666,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":528,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":745,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":227,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":591,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":367,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":19,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":56,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":354,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":724,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":234,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":494,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":772,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":396,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":397,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":398,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":580,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":361,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":770,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":771,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":309,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":85,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":327,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":192,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":316,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":531,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":319,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":532,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":392,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":530,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":260,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":564,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":412,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":473,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":680,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":535,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":536,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":534,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":575,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":149,"org.apache.commons.collections4.map.SingletonMapTest.testClone":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":132,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":409,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":435,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":408,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":629,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":492,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":521,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":520,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":519,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":490,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":763,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":633,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":672,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":108,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":459,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":266,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":306,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":429,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":60,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":358,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":585,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":298,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":96,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":223,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":445,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":712,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":740,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":163,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":761,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":647,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":775,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":221,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":294,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":372,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":590,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":502,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":697,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":257,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":743,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":782,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":736,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":640,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":682,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":698,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":337,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":512,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":458,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":514,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":513,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":383,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":705,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":664,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":375,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":357,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":188,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":401,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":779,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":151,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":425,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":4,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":1,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":456,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":295,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":422,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":778,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":178,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":576,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":339,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":143,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":720,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":325,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":589,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":653,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":42,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":593,"org.apache.commons.collections4.set.CompositeSetTest.testContains":762,"org.apache.commons.collections4.CollectionUtilsTest.isFull":209,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":299,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":678,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":8,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":127,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":479,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":597,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":311,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":433,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":255,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":630,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":684,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":250,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":11,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":498,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":189,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":238,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":432,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":785,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":619,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":222,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":718,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":717,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":165,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":759,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":581,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":148,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":247,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":470,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":373,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":670,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":55,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":61,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":533,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":620,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":467,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":547,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":228,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":525,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":264,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":454,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":732,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":174,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":651,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":476,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":267,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":658,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":406,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":464,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":471,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":738,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":47,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":48,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":118,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":565,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":608,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":407,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":130,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":568,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":246,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":105,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":487,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":340,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":150,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":739,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":141,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":696,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":332,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":661,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":33,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":157,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":427,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":75,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":265,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":349,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":197,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":477,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":707,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":226,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":549,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":305,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":438,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":466,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":577,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":278,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":13,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":360,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":676},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fb83ac-3f2d-11e6-91c6-892e2fc40d29","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fc1fed-3f2d-11e6-91c6-09242fb9d469","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"73fc46fe-3f2d-11e6-91c6-f39a6c0c5687","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fc46ff-3f2d-11e6-91c6-a53c095d792e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry != null) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[31],"tindex":"73fc9520-3f2d-11e6-91c6-5148669b1e5a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[32],"tindex":"73fc9521-3f2d-11e6-91c6-91f7d8c3c64b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fcbc32-3f2d-11e6-91c6-915d127f0383","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fcbc33-3f2d-11e6-91c6-992d75fa3778","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fce344-3f2d-11e6-91c6-6d3cc380fcc9","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fce345-3f2d-11e6-91c6-0fb5b4d12012","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[33],"tindex":"73fce346-3f2d-11e6-91c6-77368f4d2b84","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"73fd0a57-3f2d-11e6-91c6-0954732b5f5b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fd3168-3f2d-11e6-91c6-754020304da1","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,32,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"73fd3169-3f2d-11e6-91c6-e96a052d63f3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"73fd587a-3f2d-11e6-91c6-9d3c40655e20","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[204,205],"tindex":"73fd587b-3f2d-11e6-91c6-65b0bb9c89e9","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fd7f8c-3f2d-11e6-91c6-c156440ba6d4","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[206,207,208],"tindex":"73fd7f8d-3f2d-11e6-91c6-63ce802b6c2d","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                {\n                    return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fd7f8e-3f2d-11e6-91c6-a3445ded75a8","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[23],"tindex":"73fd7f8f-3f2d-11e6-91c6-010f23353f68","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222],"tindex":"73fda6a0-3f2d-11e6-91c6-c9802f746054","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fda6a1-3f2d-11e6-91c6-4d36a884b3cb","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fda6a2-3f2d-11e6-91c6-798c477e0305","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[223,224],"tindex":"73fda6a3-3f2d-11e6-91c6-69f8d1cc4785","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[225,226,227,228,229,230,231,232,233,234],"tindex":"73fdcdb4-3f2d-11e6-91c6-03262356600e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fdcdb5-3f2d-11e6-91c6-4f687d65635f","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fdf4c6-3f2d-11e6-91c6-9f32c2ab4156","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[235,236,237,238,239,240,241,242,243],"tindex":"73fdf4c7-3f2d-11e6-91c6-69f04e88b544","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl"},"failures":[244,245,246,247,248,249,250,251,252,253,254,255,256],"tindex":"73fe1bd8-3f2d-11e6-91c6-373185c1278b","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[257,258,259,260],"tindex":"73fe1bd9-3f2d-11e6-91c6-274ed2168a63","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[261],"tindex":"73fe42ea-3f2d-11e6-91c6-5de3ae14aee4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtBinaryOperatorImpl"},"failures":[262],"tindex":"73fe42eb-3f2d-11e6-91c6-3dcef59f32ee","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fe42ec-3f2d-11e6-91c6-4324d7bf92aa","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fe42ed-3f2d-11e6-91c6-5f1d6da2fe18","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[263,264,265],"tindex":"73fe69fe-3f2d-11e6-91c6-0f52b9a0fe8f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fe69ff-3f2d-11e6-91c6-07a675012d1c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[266,267,268,269,270,271,272,273,229,274,275,276,277,278,279,280,281,282,283,284,285,286,230,287,288,289,290,291],"tindex":"73fe6a00-3f2d-11e6-91c6-7bbc8569ec2f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[292],"tindex":"73fe6a01-3f2d-11e6-91c6-73956d703856","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fe9112-3f2d-11e6-91c6-e1892e2fd5ec","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,7,8,10,12,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,167,168,169,170,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559],"tindex":"73fe9113-3f2d-11e6-91c6-331829afccfb","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[292],"tindex":"73feb824-3f2d-11e6-91c6-4336c920c813","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[560,515,525,529,533,537],"tindex":"73feb825-3f2d-11e6-91c6-7d13829548cd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[561,195],"tindex":"73feb826-3f2d-11e6-91c6-f9d69f40936b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73feb827-3f2d-11e6-91c6-0b1245713ad7","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fedf38-3f2d-11e6-91c6-b7f085de91c7","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl"},"failures":[],"tindex":"73fedf39-3f2d-11e6-91c6-1b685a0ca2f2","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fedf3a-3f2d-11e6-91c6-fbde7e272652","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[562],"tindex":"73fedf3b-3f2d-11e6-91c6-ebd32dd43f86","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fedf3c-3f2d-11e6-91c6-2f3299513cec","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[29],"tindex":"73ff064d-3f2d-11e6-91c6-458482443ad1","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[563,564],"tindex":"73ff064e-3f2d-11e6-91c6-c7c1d3e6599d","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl"},"failures":[],"tindex":"73ff064f-3f2d-11e6-91c6-dd356f69eb74","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[310,317,329,341,344,565],"tindex":"73ff0650-3f2d-11e6-91c6-71a93cab4458","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ff2d61-3f2d-11e6-91c6-b9536ae6bc88","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[566,567],"tindex":"73ff2d62-3f2d-11e6-91c6-65cf857af356","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[36,37,38,39,40,42,43,44,45,49,50,51,568,569,52,53,54,570,55,56,57,58,59,61,65,66,67,68,69,70,71,72,74,75,76,77,81,82,83,571,572,84,85,86,573],"tindex":"73ff2d63-3f2d-11e6-91c6-69dc8519d7f6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,223,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,224,617,618,619,620,621,622,623,624,625],"tindex":"73ff5474-3f2d-11e6-91c6-5fb3ee7e39ac","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[626,627],"tindex":"73ff5475-3f2d-11e6-91c6-13f6f9df66c7","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[92],"tindex":"73ff5476-3f2d-11e6-91c6-ab6f09a5e3ff","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ff5477-3f2d-11e6-91c6-250e82989635","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ff7b88-3f2d-11e6-91c6-435dfdda1590","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ff7b89-3f2d-11e6-91c6-31e97fab032d","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                {\n                    return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[628,629,630,631,632,633,634,635,636,637,638,639],"tindex":"73ff7b8a-3f2d-11e6-91c6-533a415ea403","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[301,356,8,367,371],"tindex":"73ffa29b-3f2d-11e6-91c6-05ae4a125b93","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ffa29c-3f2d-11e6-91c6-65bd348bfb3d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl"},"failures":[640],"tindex":"73ffa29d-3f2d-11e6-91c6-093a3be9e1ae","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[641,642,643,644,645,646,647,648,649,650,651,652,653,654],"tindex":"73ffa29e-3f2d-11e6-91c6-013778c955d4","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl"},"failures":[655],"tindex":"73ffa29f-3f2d-11e6-91c6-37631cb6ff89","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ffc9b0-3f2d-11e6-91c6-b952fa0d4bb1","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ffc9b1-3f2d-11e6-91c6-a1a24b6b91fb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ffc9b2-3f2d-11e6-91c6-a771e61691bd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73ffc9b3-3f2d-11e6-91c6-23a83d9ca640","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fff0c4-3f2d-11e6-91c6-6765e404e0b9","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73fff0c5-3f2d-11e6-91c6-df536f78f273","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[656,657,658,659],"tindex":"73fff0c6-3f2d-11e6-91c6-6f33159d6672","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714],"tindex":"740017d7-3f2d-11e6-91c6-3d1490f6122d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[715],"tindex":"740017d8-3f2d-11e6-91c6-4f684d1069e9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[565],"tindex":"740017d9-3f2d-11e6-91c6-7db9f4f35207","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[716,717,718],"tindex":"740017da-3f2d-11e6-91c6-cf33ab3cf629","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[94,124,125,126,135],"tindex":"74003eeb-3f2d-11e6-91c6-05b3fe742eca","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[606,614,617],"tindex":"74003eec-3f2d-11e6-91c6-5df5122d0eda","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[719],"tindex":"74003eed-3f2d-11e6-91c6-eddc1c0f90e3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743],"tindex":"740065fe-3f2d-11e6-91c6-69afc6fd42c9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl"},"failures":[88,89,90,87,96,97,98,91,92,99,93,94,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,32,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,139,142,143,144,141,148,149,150,145,146,151,147,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"740065ff-3f2d-11e6-91c6-efd19a34eeb0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[744],"tindex":"74006600-3f2d-11e6-91c6-2bc40c8a0e37","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[745,25],"tindex":"74006601-3f2d-11e6-91c6-f90b201b32fd","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl"},"failures":[87,88,89,90,96,97,98,91,92,99,93,94,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,32,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,148,149,150,145,146,151,147,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"74008d12-3f2d-11e6-91c6-f7b9bc2d324d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[746],"tindex":"74008d13-3f2d-11e6-91c6-59f1629540ba","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74008d14-3f2d-11e6-91c6-1ba7ef72d427","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74008d15-3f2d-11e6-91c6-0b420541cef5","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[747],"tindex":"7400b426-3f2d-11e6-91c6-73916af6cd3f","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl"},"failures":[563],"tindex":"7400b427-3f2d-11e6-91c6-e3c23395aa31","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[93,131],"tindex":"7400b428-3f2d-11e6-91c6-5f2deaa38b09","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtBinaryOperatorImpl"},"failures":[748,608],"tindex":"7400b429-3f2d-11e6-91c6-4b2800fc48d3","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[749,264,750,751,752,753,754,755,756,757,758,759],"tindex":"7400b42a-3f2d-11e6-91c6-c78cb0f2b61e","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[760],"tindex":"7400db3b-3f2d-11e6-91c6-2f67ec767637","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[761,762,182,763,764,765,766,767,184,768,769,770,771,772,188,190,192,193,194,195,197,198,199],"tindex":"7400db3c-3f2d-11e6-91c6-37be6e925f12","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"7400db3d-3f2d-11e6-91c6-1bf25c985bc6","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[257,258],"tindex":"7400db3e-3f2d-11e6-91c6-0d41edeb7e5c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key5"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[773,774,775,776,777,778,779,780,781,782,783,784,785,786],"tindex":"7401024f-3f2d-11e6-91c6-a51279e7f08a","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333133576/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}