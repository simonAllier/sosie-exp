{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":516,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":572,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":391,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":449,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":548,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":329,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":656,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":301,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":158,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":567,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":15,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":75,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":532,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":181,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":422,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":367,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":699,"org.apache.commons.collections4.CollectionUtilsTest.collect":213,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":495,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":147,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":661,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":194,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":177,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":206,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":8,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":496,"org.apache.commons.collections4.CollectionUtilsTest.get":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":376,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":478,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":689,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":554,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":148,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":587,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":112,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":605,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":295,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":688,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":668,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":249,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":527,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":139,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":11,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":156,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":720,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":399,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":627,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":368,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":596,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":255,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":578,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":486,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":410,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":14,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":193,"org.apache.commons.collections4.CollectionUtilsTest.transform2":151,"org.apache.commons.collections4.CollectionUtilsTest.transform1":150,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":483,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":711,"org.apache.commons.collections4.CollectionUtilsTest.select":168,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":354,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":211,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":227,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":321,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":423,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":493,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":330,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":540,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":307,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":664,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":453,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":296,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":659,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":514,"org.apache.commons.collections4.CollectionUtilsTest.intersection":192,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":138,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":551,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":13,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":662,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":418,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":459,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":67,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":591,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":159,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":564,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":250,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":565,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":48,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":200,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":566,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":528,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":146,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":396,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":706,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":547,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":480,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":317,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":135,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":269,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":507,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":235,"org.apache.commons.collections4.map.CompositeMapTest.testPut":87,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":420,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":743,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":455,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":17,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":543,"org.apache.commons.collections4.map.CompositeMapTest.testGet":86,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":282,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":653,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":708,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":733,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":382,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":710,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":222,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":537,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":654,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":198,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":444,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":520,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":197,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":452,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":597,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":650,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":652,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":31,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":324,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":61,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":404,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":406,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":164,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":709,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":746,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":403,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":460,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":305,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":294,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":402,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":741,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":525,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":526,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":679,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":524,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":96,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":388,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":133,"org.apache.commons.collections4.CollectionUtilsTest.union":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":588,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":672,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":621,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":397,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":448,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":589,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":165,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":468,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":732,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":631,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":137,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":487,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":626,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":754,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":153,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":613,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":541,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":287,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":400,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":693,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":183,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":522,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":744,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":110,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":523,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":611,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":609,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":231,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":756,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":645,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":355,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":607,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":608,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":628,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":120,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":312,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":465,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":77,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":552,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":466,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":63,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":585,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":675,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":248,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":21,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":615,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":534,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":704,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":752,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":370,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":568,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":594,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.CollectionUtilsTest.get1":188,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":172,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":180,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":179,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":22,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":383,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":351,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":201,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":721,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":740,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":230,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":366,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":450,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":727,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":629,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":373,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":673,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":707,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":729,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":739,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":234,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":670,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":427,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":0,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":10,"org.apache.commons.collections4.IteratorUtilsTest.testToList":275,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":409,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":233,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":753,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":389,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":519,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":726,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":145,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":316,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":648,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":297,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":696,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":102,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":350,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":731,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":530,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":190,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":702,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":270,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":224,"org.apache.commons.collections4.CollectionUtilsTest.exists":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":492,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":103,"org.apache.commons.collections4.CollectionUtilsTest.filter":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":665,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":27,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":90,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":109,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":154,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":89,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":510,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":314,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":490,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":386,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":616,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":50,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":424,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":464,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":143,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":751,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":414,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":252,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":175,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":695,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":280,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":549,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":392,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":660,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":687,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":393,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":348,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":247,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":730,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":443,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":539,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":734,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":360,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":379,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":304,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":433,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":279,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":415,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":658,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":218,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":12,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":641,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":434,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":694,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":52,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":274,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":571,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":638,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":489,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":745,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":152,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":553,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":494,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":155,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":326,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":199,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":473,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":91,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":474,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":475,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":352,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":637,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":703,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":390,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":157,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":546,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":259,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":384,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":260,"org.apache.commons.collections4.map.HashedMapTest.testClone":538,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":535,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":428,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":639,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":126,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":632,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":640,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":303,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":457,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":196,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":584,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":276,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":429,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":558,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":166,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":167,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":413,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":735,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":458,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":421,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":53,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":363,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":149,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":306,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":749,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":504,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":92,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":398,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":692,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":173,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":542,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":178,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":529,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":184,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":586,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":101,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":600,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":38,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":417,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":725,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":107,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":271,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":750,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":755,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":624,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":344,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":62,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":26,"org.apache.commons.collections4.set.CompositeSetTest.testContains":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":7,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":239,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":123,"org.apache.commons.collections4.CollectionUtilsTest.isFull":163,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":333,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":426,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":569,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":358,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":195,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":311,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":217,"org.apache.commons.collections4.ListUtilsTest.testSelect":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":357,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":66,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":105,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":506,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":232,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":634,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":371,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":544,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":601,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":686,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":223,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":723,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":256,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":229,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":644,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":210,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":581,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":681,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":666,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":705,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":283,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":559,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":684,"org.apache.commons.collections4.CollectionUtilsTest.reverse":216,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":685,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":643,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":365,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":619,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":555,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":125,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":717,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":691,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":6,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":290,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":325,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":447,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":479,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":446,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":515,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":499,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":108,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":411,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":669,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":491,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":737,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":342,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":341,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":285,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":509,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":508,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":238,"org.apache.commons.collections4.CollectionUtilsTest.find":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":244,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":419,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":228,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":617,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":323,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":124,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":442,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":471,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":472,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":240,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":470,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":623,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":189,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":372,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":60,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":100,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":169,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":463,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":488,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":1,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":570,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":385,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":716,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":162,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":561,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":375,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":579,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":481,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":690,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":697,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":121,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":362,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":636,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":454,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":556,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":425,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":536,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":412,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":747,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":451,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":757,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":461,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":277,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":291,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":719,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":298,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":78,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":381,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":718,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":308,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":144,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":625,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":722,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":724,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":174,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":502,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":736,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":563,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":315,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":593,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":299,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":441,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":302,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":485,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":674,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":680,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":141,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":620,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":113},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"a138159e-2ebe-11e6-b30d-2145c2ffdc15","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a138d8ef-2ebe-11e6-b30d-b1f39530668f","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"tindex":"a1390000-2ebe-11e6-b30d-1f95f50328d4","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[181],"tindex":"a13a1171-2ebe-11e6-b30d-5b3984fed0ea","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                {\n                    if ((collection == null) || ((collection.size()) != 1)) {\n                        throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n                    } \n                    return collection.iterator().next();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,45,263,264,265,266,267,268],"tindex":"a13a3882-2ebe-11e6-b30d-4f554e8e0c47","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"a13a5f93-2ebe-11e6-b30d-91bde405deb1","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[217],"tindex":"a13a5f94-2ebe-11e6-b30d-ebae6df3ef9b","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[269,270],"tindex":"a13a86a5-2ebe-11e6-b30d-fd8b231e1d9c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[271,272,273],"tindex":"a13a86a6-2ebe-11e6-b30d-3f7c4a0b4a3a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[274,275,276,277,278,202],"tindex":"a13aadb7-2ebe-11e6-b30d-e9c22456467f","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if ((iterator.hasNext()) == false) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[279,280,281,282],"tindex":"a13ad4c8-2ebe-11e6-b30d-232118da9926","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[283],"tindex":"a13ad4c9-2ebe-11e6-b30d-ed296595c7db","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[284,285,286,287,288],"tindex":"a13afbda-2ebe-11e6-b30d-f30f686f7b1b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[289,290],"tindex":"a13afbdb-2ebe-11e6-b30d-4bba14cfb7e5","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[291],"tindex":"a13b22ec-2ebe-11e6-b30d-df4c127f3a72","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"a13b49fd-2ebe-11e6-b30d-8d88635d5b16","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"tindex":"a13b710e-2ebe-11e6-b30d-1166e293a6f0","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[183],"tindex":"a13b981f-2ebe-11e6-b30d-911dbb9171c9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"a13b9820-2ebe-11e6-b30d-9f702606e69f","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a13bbf31-2ebe-11e6-b30d-a3c9ddf79716","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"a13bbf32-2ebe-11e6-b30d-bd552a84e515","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                {\n                    if ((collection == null) || ((collection.size()) != 1)) {\n                        throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n                    } \n                    return collection.iterator().next();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a13be643-2ebe-11e6-b30d-9dee713d7bf3","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[338,339],"tindex":"a13c0d54-2ebe-11e6-b30d-35ef76619847","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a13c0d55-2ebe-11e6-b30d-f7b22d0ce7a4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[210],"tindex":"a13c0d56-2ebe-11e6-b30d-95930a208012","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[47,48,49,50,51,52,53,340,341,342,343,344,345],"tindex":"a13c3467-2ebe-11e6-b30d-91438b9c5ab1","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"a13c3468-2ebe-11e6-b30d-adfba82a544b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"a13c3469-2ebe-11e6-b30d-f7b2360e7bd9","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[346,347,348,349],"tindex":"a13c5b7a-2ebe-11e6-b30d-e9278636aa62","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"a13c5b7b-2ebe-11e6-b30d-8d00482f838f","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[350,351,352,292,353,354,355,356,357,358,359,360,361,293,294,362,295,296,363,297,364,365,298,366,367,368,369,370,371,372,373,374,375,376,377,303,378,379,380,381,382,383,384,304,305,385,306,307,386,308,387,388,309,389,390,391,392,393],"tindex":"a13c5b7c-2ebe-11e6-b30d-a5b96f6b9554","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"a13c828d-2ebe-11e6-b30d-61c060da6b89","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"a13c828e-2ebe-11e6-b30d-ad976a6f973d","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[394],"tindex":"a13ca99f-2ebe-11e6-b30d-affa5b3a468d","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[395,396],"tindex":"a13ca9a0-2ebe-11e6-b30d-657076680f9a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a13cd0b1-2ebe-11e6-b30d-03a622d4fc4a","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[397,398],"tindex":"a13d45e2-2ebe-11e6-b30d-03ae5edb40a3","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"a13d45e3-2ebe-11e6-b30d-af111907d74d","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[399,400,401,402],"tindex":"a13d45e4-2ebe-11e6-b30d-1b7dff6ef670","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"a13d6cf5-2ebe-11e6-b30d-8b27de326ed6","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[403,404],"tindex":"a13d6cf6-2ebe-11e6-b30d-f3bd788eea8c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"a13d9407-2ebe-11e6-b30d-b513b34b7fb8","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a13d9408-2ebe-11e6-b30d-b738b4f1216d","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[284,285,286,1,287,405,288,406,407,408],"tindex":"a13d9409-2ebe-11e6-b30d-41343dfc8577","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a13dbb1a-2ebe-11e6-b30d-4513d6c6cde7","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[409],"tindex":"a13dbb1b-2ebe-11e6-b30d-47bf14c703ad","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"a13dbb1c-2ebe-11e6-b30d-13fdcf939ebe","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[410],"tindex":"a13de22d-2ebe-11e6-b30d-eb3f9dcfac2e","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"a13de22e-2ebe-11e6-b30d-05c073c73b59","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[411],"tindex":"a13de22f-2ebe-11e6-b30d-75d6c2f11ee3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[412,413,355,414,415,416,417,418,419,420,421,422,423,380],"tindex":"a13e0940-2ebe-11e6-b30d-1d7ce9fcc71f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a13e0941-2ebe-11e6-b30d-65a90d9a434c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[424,425,426,427],"tindex":"a13e3052-2ebe-11e6-b30d-e345b0f9737b","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,271,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,40,479,480,481,482,483,272,273,484,240,241,395,242,243,244,245,485,246,247,486,248,249,250,251,487,252,488,253,489,490,254,255,491,492,493,256,257,258,259,260,261,262,494,495,45,263,496,497,264,265,266,267,268,396,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,46,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,81,570,571,572,573,574,575,576,577,578,579,346,347,348,349,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,85,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,127,659,660,661,662,663,664,665,666,667],"tindex":"a13e3053-2ebe-11e6-b30d-85271c85496d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[668,669,670,671,672,673,674,675,676,677,678,679,680],"tindex":"a13e5764-2ebe-11e6-b30d-91c54a5481bf","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[681,205],"tindex":"a13e5765-2ebe-11e6-b30d-c9fe00d95013","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a13e7e76-2ebe-11e6-b30d-9d7b0e4a16dd","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"a13e7e77-2ebe-11e6-b30d-f36b2d6c11de","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[682],"tindex":"a13e7e78-2ebe-11e6-b30d-716cc1d6a1a0","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"a13ea589-2ebe-11e6-b30d-65e174ffb931","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a13ea58a-2ebe-11e6-b30d-4772d8af901a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"a13ecc9b-2ebe-11e6-b30d-d9e98e1209f0","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[683],"tindex":"a13ecc9c-2ebe-11e6-b30d-89e60dabc5e5","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a13ecc9d-2ebe-11e6-b30d-a793c115b520","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a13ecc9e-2ebe-11e6-b30d-1b810f744484","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[684,685,686,687],"tindex":"a13ef3af-2ebe-11e6-b30d-4bff1bcebcec","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[403],"tindex":"a13f1ac0-2ebe-11e6-b30d-992134045de2","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[688],"tindex":"a13f1ac1-2ebe-11e6-b30d-a7dbe0c124c3","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"a13f1ac2-2ebe-11e6-b30d-b53d34740bd8","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a13f41d3-2ebe-11e6-b30d-03dc5cdb52aa","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a13f41d4-2ebe-11e6-b30d-4f5de195d49e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[689,690,691],"tindex":"a13f41d5-2ebe-11e6-b30d-59903fe56a7e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"a13f41d6-2ebe-11e6-b30d-8540b3d01bd5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"a13f68e7-2ebe-11e6-b30d-af30e8506d3e","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[692],"tindex":"a13f68e8-2ebe-11e6-b30d-070dce275876","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,201,202],"tindex":"a13f68e9-2ebe-11e6-b30d-b74275affd3c","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[28,29,30,31,32,33,86,87,88,89,90,91,92,93,155,166,174,191,192,214,229],"tindex":"a13f8ffa-2ebe-11e6-b30d-4353be97dcfc","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 3) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[711],"tindex":"a13f8ffb-2ebe-11e6-b30d-23c90bfb0ebb","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"a13f8ffc-2ebe-11e6-b30d-cd7543d27746","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[712,713,714,715,716,717],"tindex":"a13fb70d-2ebe-11e6-b30d-29dcbb90948c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[718,719],"tindex":"a13fb70e-2ebe-11e6-b30d-4bf5d6e92dad","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((b == null) || (a == null)) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a13fb70f-2ebe-11e6-b30d-e55eaa18b80a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a13fb710-2ebe-11e6-b30d-2397e9df02ef","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"a13fb711-2ebe-11e6-b30d-0f6b0fd60673","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a13fde22-2ebe-11e6-b30d-71b36df2efd5","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"a13fde23-2ebe-11e6-b30d-afb94178b962","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"a13fde24-2ebe-11e6-b30d-cd816bab5c63","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[720,721,722,723,1,405,406,407,408],"tindex":"a13fde25-2ebe-11e6-b30d-6bf8e1b75cba","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[724],"tindex":"a1400536-2ebe-11e6-b30d-8dade1dadf13","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[667,725],"tindex":"a1400537-2ebe-11e6-b30d-ffa75632e911","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"a1400538-2ebe-11e6-b30d-bf81186c9736","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"a1402c49-2ebe-11e6-b30d-a3b6c0fea96e","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[726],"tindex":"a1402c4a-2ebe-11e6-b30d-cd56025f5b1e","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[727],"tindex":"a1402c4b-2ebe-11e6-b30d-1d25fae4e368","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"a1402c4c-2ebe-11e6-b30d-65c303c48305","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"a1402c4d-2ebe-11e6-b30d-71b882535947","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[728],"tindex":"a140535e-2ebe-11e6-b30d-4f6f9b353693","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746],"tindex":"a140535f-2ebe-11e6-b30d-179188855994","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[747],"tindex":"a1405360-2ebe-11e6-b30d-6b67e0b282ef","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[748,749,750,751,752,753,754,755,756,757],"tindex":"a1405361-2ebe-11e6-b30d-579234e477c1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}