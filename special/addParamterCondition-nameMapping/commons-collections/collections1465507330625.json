{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":124,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":125,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":16,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":76,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":75,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":79,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":41,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":37,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":154,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":159,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":152,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":180,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":110,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":138,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":46,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":54,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":181,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":193,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":174,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":29,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":70,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":182,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":58,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":63,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":28,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":162,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":36,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":74,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":113,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":179,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":105,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":106,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":163,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":27,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":15,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":38,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":141,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":175,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":151,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":89,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":71,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":160,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":156,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":83,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":18,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":60,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":140,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":184,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":164,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":62,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":144,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":114,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":93,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":155,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":189,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":169,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":31,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":149,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":82,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":115,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":103,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":1,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":97,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":5,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":104,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":148,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":176,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":95,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":84,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":85,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":147,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":72,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":183,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":49,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":146,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":143,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":6,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":108,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":122,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":157,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":23,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":165,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":130,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":173,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":65,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":118,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":10,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":26,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":48,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":117,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":172,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":101},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"3a19d508-2e88-11e6-92d7-e58001b0a276","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[0,1,2,3,4,5],"tindex":"3a1abf69-2e88-11e6-92d7-eb1238de6f86","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[6,7,8,9,10],"tindex":"3a1abf6a-2e88-11e6-92d7-6387e51e513c","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[11,12,13,14],"tindex":"3a1ae67b-2e88-11e6-92d7-21f22592226d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[15],"tindex":"3a1b0d8c-2e88-11e6-92d7-c5a6d7015a33","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[16,17,18,19],"tindex":"3a1b349d-2e88-11e6-92d7-9d10b26e1396","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[20],"tindex":"3a1b349e-2e88-11e6-92d7-531d525d6862","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:106","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().subList(fromIndex, toIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"toIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[21,22,23,24],"tindex":"3a1b5baf-2e88-11e6-92d7-059bf90fa2ea","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"3a1b5bb0-2e88-11e6-92d7-210f40a85595","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"3a1b82c1-2e88-11e6-92d7-99d61af945fe","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"3a1ba9d2-2e88-11e6-92d7-bb3838ed4d24","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[25,26,27],"tindex":"3a1bd0e3-2e88-11e6-92d7-016a968d41b6","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[28],"tindex":"3a1bd0e4-2e88-11e6-92d7-9f8417da1522","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[29,30,31,32,33,34,35,36,37,38],"tindex":"3a1bf7f5-2e88-11e6-92d7-933045301298","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"3a1bf7f6-2e88-11e6-92d7-efc71e1eee1c","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap != null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"reverseMap"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"3a1c1f07-2e88-11e6-92d7-b5f423557ee0","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"3a1c1f08-2e88-11e6-92d7-3be127fb0b74","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"3a1c4619-2e88-11e6-92d7-13e5db0f2237","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(indent)) {\n        {\n            for (int int = 0 ; i < indent ; i++) {\n                out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"indent"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"3a1c461a-2e88-11e6-92d7-df437ecc6bbc","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.LazyList:113","type":"CtBinaryOperatorImpl","sourcecode":"index < size"},"failures":[],"tindex":"3a1c6d2b-2e88-11e6-92d7-65be0c9b17e7","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (bitIndex < bitIndex) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bitIndex","index":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[53,54,2,55,3,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,4,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"3a1c6d2c-2e88-11e6-92d7-d5b4cea693cf","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key","b":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[120,121,122,123,124,125,126,127,128,129],"tindex":"3a1c943d-2e88-11e6-92d7-89c10df1e6ee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"3a1c943e-2e88-11e6-92d7-e33c881a3d94","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:113","type":"CtMethodImpl","sourcecode":"protected void setMaximumCacheSize(final int maximumCacheSize) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(maximumCacheSize)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.list.NodeCachingLinkedList.this.int = maximumCacheSize;\n            shrinkCacheToMaximumSize();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"maximumCacheSize"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[130],"tindex":"3a1c943f-2e88-11e6-92d7-a1fa524bcf54","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"3a1cba50-2e88-11e6-92d7-4160bfd8f23f","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl","sourcecode":"(other.size()) != 1"},"failures":[172,173],"tindex":"3a1cba51-2e88-11e6-92d7-3942bc24630f","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"3a1d0872-2e88-11e6-92d7-4b763ca633c2","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"3a1d0873-2e88-11e6-92d7-5fe72ed11493","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtBinaryOperatorImpl","sourcecode":"lineageIndex == (-1)"},"failures":[],"tindex":"3a1d2f84-2e88-11e6-92d7-4d46b52d529c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineageIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[129,174,175,176,177,178,179,180,181],"tindex":"3a1d5695-2e88-11e6-92d7-3f2303231051","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"3a1d7da6-2e88-11e6-92d7-ff02ce5a6199","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:733","type":"CtMethodImpl","sourcecode":"protected void setNextNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> next) {\n    if (next == next) {\n        {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = next;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"next","header":"next"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[182,183,184],"tindex":"3a1da4b7-2e88-11e6-92d7-99c50d427cc2","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[185],"tindex":"3a1da4b8-2e88-11e6-92d7-27a8579b08c2","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[186],"tindex":"3a1df2d9-2e88-11e6-92d7-19607b4f44ba","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (remove != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"remove"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[187],"tindex":"3a1df2da-2e88-11e6-92d7-536002370406","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[188,189,190,191,192],"tindex":"3a1e19eb-2e88-11e6-92d7-478ed59ae08a","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1018","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"3a1e19ec-2e88-11e6-92d7-1d2c8b5d9096","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"3a1e19ed-2e88-11e6-92d7-77d1f6aa872f","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value != null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"3a1e40fe-2e88-11e6-92d7-ebdfc12ba1eb","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(size)) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"size"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[193],"tindex":"3a1e40ff-2e88-11e6-92d7-a3b5fa826156","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":40,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}