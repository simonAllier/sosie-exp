{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":507,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":270,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":23,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":238,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":614,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":153,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":615,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":544,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":488,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":451,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":266,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":415,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":490,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":16,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":108,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":109,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":348,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":400,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":442,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":135,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":291,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":401,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":515,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":182,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":2,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":529,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":127,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":215,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":562,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":199,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":276,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":271,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":521,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":277,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":522,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":138,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":76,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":97,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":572,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":186,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":25,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":275,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":558,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":580,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":511,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":552,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":128,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":414,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":301,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":549,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":118,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":165,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":204,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":396,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":98,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":461,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":303,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":559,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":543,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":190,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":251,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":161,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":26,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":229,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":285,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":383,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":93,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":242,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":532,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":533,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":259,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":355,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":531,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":103,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":261,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":302,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":107,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":525,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":605,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":71,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":149,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":566,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":494,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":157,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":244,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":260,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":155,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":4,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":0,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":391,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":508,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":85,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":206,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":196,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":505,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":570,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":14,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":357,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":594,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":351,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":427,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":51,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":335,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":54,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":95,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":310,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":148,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":523,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":203,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":446,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":601,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":207,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":439,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":30,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":440,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":470,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":19,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":406,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":376,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":616,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":136,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":255,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":343,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":403,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":590,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":280,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":327,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":530,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":38,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":520,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":33,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":292,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":456,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":8,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":219,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":526,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":220,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":354,"org.apache.commons.collections4.list.TreeListTest.testRemove":454,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":541,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":147,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":486,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":169,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":257,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":512,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":373,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":211,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":463,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":284,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":144,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":119,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":290,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":464,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":11,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":75,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":381,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":431,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":524,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":483,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":349,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":534,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":279,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":245,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":122,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":208,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":67,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":445,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":90,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":226,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":405,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":225,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":55,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":434,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":286,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":482,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":237,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":428,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":240,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":375,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":39,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":243,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":224,"org.apache.commons.collections4.list.TreeListTest.testListEquals":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":6,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":40,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":554,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":518,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":304,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":408,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":156,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":120,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":492,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":398,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":60,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":295,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":281,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":293,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":318,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":80,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":504,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":143,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":583,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":236,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":324,"org.apache.commons.collections4.IteratorUtilsTest.testToList":611,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":47,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":213,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":581,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":513,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":545,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":114,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":506,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":18,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":175,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":556,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":83,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":393,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":542,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":160,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":176,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":311,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":194,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":425,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":501,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":404,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":489,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":72,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":323,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":197,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":394,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":325,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":422,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":458,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":517,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":484,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":475,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":202,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":437,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":77,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":378,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":87,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":313,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":56,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":171,"org.apache.commons.collections4.ListUtilsTest.testPartition":420,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":125,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":217,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":500,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":364,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":139,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":94,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":334,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":433,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":477,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":248,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":386,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":430,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":73,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":174,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":209,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":610,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":297,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":314,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":476,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":43,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":299,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":130,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":1,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":78,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":88,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":20,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":272,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":423,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":24,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":22,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":287,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":498,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":397,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":547,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":571,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":74,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":79,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":382,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":568,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":61,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":452,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":308,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":358,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":228,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":597,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":613,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":232,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":253,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":550,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":68,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":106,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":473,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":195,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":560,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":481,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":465,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":606,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":170,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":35,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":421,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":510,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":596,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":158,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":191,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":116,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":561,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":553,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":487,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":370,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":417,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":129,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":166,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":469,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":133,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":250,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":377,"org.apache.commons.collections4.list.TreeListTest.testBug35258":457,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":569,"org.apache.commons.collections4.ListUtilsTest.testSelect":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":453,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":480,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":101,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":137,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":274,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":363,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":13,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":233,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":50,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":52,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":333,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":455,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":416,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":499,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":31,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":585,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":162,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":49,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":216,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":45,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":563,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":582,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":185,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":575,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":368,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":380,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":121,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":555,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":44,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":265,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":309,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":326,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":576,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":258,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":163,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":410,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":294,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":424,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":198,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":361,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":371,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":584,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":239,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":337,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":602,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":527,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":387,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.CollectionUtilsTest.find":495,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":267,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":12,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":111,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":32,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":189,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":345,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":177,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":609,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":384,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":62,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":205,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":438,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":151,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":528,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":9,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":252,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":540,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":179,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":241,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":289,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":59,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":15,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":514,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":409,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":36,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":27,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":557,"org.apache.commons.collections4.map.LRUMapTest.testLRU":592,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":10,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":551,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":362,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":449,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":92,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":264,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":436,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":66,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":413,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":432,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":612,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":296,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":593,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":193,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":567,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":110,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":305,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":418,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":509,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":497,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":564,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":471,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":102,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":367,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":212,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":117,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":134,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":172,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":429,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":5},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"2574af71-3e62-11e6-85f5-5d3647cd81c9","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"2574fd92-3e62-11e6-85f5-771a1c67a7c0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"2574fd93-3e62-11e6-85f5-7b22efc39190","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"257524a4-3e62-11e6-85f5-91328973e9e6","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"257524a5-3e62-11e6-85f5-a5bd25f53faa","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1],"tindex":"257524a6-3e62-11e6-85f5-511701d39571","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"257524a7-3e62-11e6-85f5-ad7acd3e5650","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[19,20,21],"tindex":"25754bb8-3e62-11e6-85f5-43c4f776518f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"25754bb9-3e62-11e6-85f5-4b722c0f25a3","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[22,23],"tindex":"25754bba-3e62-11e6-85f5-03348426ce18","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[24,25],"tindex":"257572cb-3e62-11e6-85f5-a3260111c95c","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[26,27,28,29],"tindex":"257572cc-3e62-11e6-85f5-dd4f52860e71","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[30,31,32,33,34,35,36,37],"tindex":"257599dd-3e62-11e6-85f5-7351c2553d89","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[38],"tindex":"257599de-3e62-11e6-85f5-a1a497a84120","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"257599df-3e62-11e6-85f5-17b144ae9b9d","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"257599e0-3e62-11e6-85f5-49728b94b064","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[39,40,38],"tindex":"2575c0f1-3e62-11e6-85f5-7390e77af045","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (c == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[41],"tindex":"2575c0f2-3e62-11e6-85f5-f777581a48fc","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((closures.size()) == 0) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[42,43],"tindex":"2575c0f3-3e62-11e6-85f5-2beb997b12e7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[44],"tindex":"2575c0f4-3e62-11e6-85f5-691aa7a49870","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"2575c0f5-3e62-11e6-85f5-b570dc300bfb","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[45],"tindex":"2575c0f6-3e62-11e6-85f5-51953931fbb9","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[46],"tindex":"2575e807-3e62-11e6-85f5-2d05d51e0ec7","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[47],"tindex":"2575e808-3e62-11e6-85f5-d5659e236518","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[48],"tindex":"2575e809-3e62-11e6-85f5-9b42fcc8567b","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[49,50],"tindex":"2575e80a-3e62-11e6-85f5-05d579ce1c91","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"25760f1b-3e62-11e6-85f5-3159f7d4baa9","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[51],"tindex":"2576362c-3e62-11e6-85f5-a9eda4afdba3","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2576362d-3e62-11e6-85f5-0fd0ff719c89","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = size();\n                    if (listSize < 0) {\n                        throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n                    } \n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n                    } \n                    if (index >= listSize) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n                    } \n                    final int int = index * (int);\n                    final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n                    return java.util.List<T>.subList(start, end);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[52],"tindex":"25765d3e-3e62-11e6-85f5-ffd2900e4ab0","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[53,54,55,56,57,58,49,59,60,61],"tindex":"25765d3f-3e62-11e6-85f5-f7e86c40451b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[62],"tindex":"25765d40-3e62-11e6-85f5-49437bb4d7e8","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"25765d41-3e62-11e6-85f5-dfe46a1a9327","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((closures.size()) == 0) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[63,64,65,66,67],"tindex":"25768452-3e62-11e6-85f5-0dfeed3e3066","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[68,69],"tindex":"2576ab63-3e62-11e6-85f5-9784d1eca753","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"2576ab64-3e62-11e6-85f5-9147ca423f81","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"2576ab65-3e62-11e6-85f5-e72069ca9ce1","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"2576d276-3e62-11e6-85f5-e1d463aac02a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[107,108,109,110,111],"tindex":"2576d277-3e62-11e6-85f5-7fc4e1a2bbaa","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[112,113],"tindex":"2576d278-3e62-11e6-85f5-0fa28874006e","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"2576d279-3e62-11e6-85f5-1d6ad3f9f71a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[169,170,171,172],"tindex":"2576f98a-3e62-11e6-85f5-8f772bf17ab1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"2576f98b-3e62-11e6-85f5-f11905e34a49","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[173,174,175,176,177,178,179,180,49,181,182,183,184,185],"tindex":"2576f98c-3e62-11e6-85f5-f54899aa83f9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[186,187],"tindex":"2577209d-3e62-11e6-85f5-5b3ddf3bf056","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"2577209e-3e62-11e6-85f5-65197ed17bca","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"2577209f-3e62-11e6-85f5-c9952fe087f4","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314],"tindex":"257720a0-3e62-11e6-85f5-e32aefb5d2f5","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[315],"tindex":"257720a1-3e62-11e6-85f5-bd2559a641f2","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"257747b2-3e62-11e6-85f5-ab30b90a7fea","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[316],"tindex":"257747b3-3e62-11e6-85f5-67117f8164d1","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[317,318,319,320,321,322],"tindex":"257747b4-3e62-11e6-85f5-d7a17202ed3f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"257747b5-3e62-11e6-85f5-979b3728c8b8","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"257747b6-3e62-11e6-85f5-19186ffcc57a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"25776ec7-3e62-11e6-85f5-13a625bc7662","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[323,324],"tindex":"25776ec8-3e62-11e6-85f5-6bff82f97249","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[325],"tindex":"25776ec9-3e62-11e6-85f5-53c02996c0f5","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[326],"tindex":"25776eca-3e62-11e6-85f5-e339dbd6fb8b","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,222,230,231,234,235,245,249,250,273,281,282,285,286,296,300,302,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"257795db-3e62-11e6-85f5-a9e01cd32df1","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().containsKey(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"257795dc-3e62-11e6-85f5-19daaacca04a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"257795dd-3e62-11e6-85f5-9b11104f7e0f","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[400],"tindex":"257795de-3e62-11e6-85f5-494602caf1ee","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416],"tindex":"257795df-3e62-11e6-85f5-8140b7b4a1f4","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[417,418],"tindex":"2577bcf0-3e62-11e6-85f5-bf4886f0f31c","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"2577bcf1-3e62-11e6-85f5-23fb28a8c238","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[419],"tindex":"2577bcf2-3e62-11e6-85f5-87cb4a07c473","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[420],"tindex":"2577bcf3-3e62-11e6-85f5-55b6cf36658c","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[325,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449],"tindex":"2577e404-3e62-11e6-85f5-c1c31855e4b9","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[450],"tindex":"2577e405-3e62-11e6-85f5-131378662091","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[451,452],"tindex":"2577e406-3e62-11e6-85f5-5971f75d3b5a","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[20],"tindex":"2577e407-3e62-11e6-85f5-2f33ab33b27f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[38],"tindex":"25780b18-3e62-11e6-85f5-5ddf39543586","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"25780b19-3e62-11e6-85f5-4fe9223f8fd4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"25780b1a-3e62-11e6-85f5-a33d2667aaf0","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"25780b1b-3e62-11e6-85f5-0d3b9cc67bdb","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = size();\n                    if (listSize < 0) {\n                        throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n                    } \n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n                    } \n                    if (index >= listSize) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n                    } \n                    final int int = index * (int);\n                    final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n                    return java.util.List<T>.subList(start, end);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[453],"tindex":"25780b1c-3e62-11e6-85f5-93b15f18e997","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"25780b1d-3e62-11e6-85f5-e71f026b03f3","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"2578322e-3e62-11e6-85f5-3f4522685bdb","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"2578322f-3e62-11e6-85f5-933c2ad886fe","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[488,489,490,491,492,493,494,396],"tindex":"25783230-3e62-11e6-85f5-97a390c1d5d4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"25783231-3e62-11e6-85f5-6bb5dc616aaf","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[495],"tindex":"25785942-3e62-11e6-85f5-87917f8a55fd","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[],"tindex":"25785943-3e62-11e6-85f5-1705381a0365","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"25785944-3e62-11e6-85f5-8539bb8aa91c","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().containsKey(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"25785945-3e62-11e6-85f5-232c084d22b3","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"25785946-3e62-11e6-85f5-311fc43b405a","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[230,245],"tindex":"25785947-3e62-11e6-85f5-9f2da1bbca0d","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591],"tindex":"25788058-3e62-11e6-85f5-afc5eb1aa7b3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[592,593,594,595,596,597,598,599,600],"tindex":"25788059-3e62-11e6-85f5-5f1843c098b7","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[601,602,603],"tindex":"2578a76a-3e62-11e6-85f5-e57710e5553e","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[604,605,606,607,608,609],"tindex":"2578a76b-3e62-11e6-85f5-7913f6a9fd2f","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"2578a76c-3e62-11e6-85f5-4591a0f2e4f7","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[610,38,611,612,613,148],"tindex":"2578a76d-3e62-11e6-85f5-196a54acd2ce","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[614,615,111],"tindex":"2578a76e-3e62-11e6-85f5-136a8ecc7343","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[616],"tindex":"2578ce7f-3e62-11e6-85f5-5d28680909bc","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"2578ce80-3e62-11e6-85f5-15c46c68d821","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end == start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"2578ce81-3e62-11e6-85f5-875b87b62566","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index > 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"2578ce82-3e62-11e6-85f5-f18fd2c7dc5c","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[88],"tindex":"2578ce83-3e62-11e6-85f5-5d0a53ac253a","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"2578ce84-3e62-11e6-85f5-b18de7840096","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467247183253/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}