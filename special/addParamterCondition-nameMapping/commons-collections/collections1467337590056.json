{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":11,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":107,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":350,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":494,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":190,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":342,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":444,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":466,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":440,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":386,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":496,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":96,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":462,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":549,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":299,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":328,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":407,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":620,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":145,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":599,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":603,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":586,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":602,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":604,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":475,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":33,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":166,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":66,"org.apache.commons.collections4.CollectionUtilsTest.get":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":26,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":62,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":56,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":250,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":53,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":128,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":157,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":202,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":601,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":330,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":615,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":600,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":455,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":256,"org.apache.commons.collections4.CollectionUtilsTest.select":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":640,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":580,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":470,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":621,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":608,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":198,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":624,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":357,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":146,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":385,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":562,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":252,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":315,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":37,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":35,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":212,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":29,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":368,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":473,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":296,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":625,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":20,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":152,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":187,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":306,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":307,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":305,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":460,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":192,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":74,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":248,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":331,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":471,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":259,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":292,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":27,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":179,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":565,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":130,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":503,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":614,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":593,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":6,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":280,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":507,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":325,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":536,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":219,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":175,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":547,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":637,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":513,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":636,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":405,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":42,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":564,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":631,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":24,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":185,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":422,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":226,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":530,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":182,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":477,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":272,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":362,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":424,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":587,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":353,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":254,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":329,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":370,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":414,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":333,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":40,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":263,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":419,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":348,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":449,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":161,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":191,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":609,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":570,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":293,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":436,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":595,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":113,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":129,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":389,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":487,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":654,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":505,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":584,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":492,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":626,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":22,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":544,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":644,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":132,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":221,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":231,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":264,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":632,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":559,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":102,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":85,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":215,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":112,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":645,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":178,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":612,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":398,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":611,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":10,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":504,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":540,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":610,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":518,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":134,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":242,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":99,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":241,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":384,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":635,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":46,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":197,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":322,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":282,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":311,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":217,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":5,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":396,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":495,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":641,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":453,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":237,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":532,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":21,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":420,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":308,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":133,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":501,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":561,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":395,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":554,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":151,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":390,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":411,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":522,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":630,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":474,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":164,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":409,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":4,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":490,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":360,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":506,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":359,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":500,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":591,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":643,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":300,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":354,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":77,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":269,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":480,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":207,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":367,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":403,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":448,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":266,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":319,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":169,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":461,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":592,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":139,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":358,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":521,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":516,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":140,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":105,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":232,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":553,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":616,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":229,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":278,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":627,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":75,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":380,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":162,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":336,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":394,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":497,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":388,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":456,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":552,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":54,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":573,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":233,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":481,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":539,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":589,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":590,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":533,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":508,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":566,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":302,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":101,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":298,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":312,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":374,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":373,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":535,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":560,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":195,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":295,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":438,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":617,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":155,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":65,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":433,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":432,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":650,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":320,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":429,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":546,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":428,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":431,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":168,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":430,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":203,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":425,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":486,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":318,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":439,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":427,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":372,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":426,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":279,"org.apache.commons.collections4.CollectionUtilsTest.isFull":423,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":351,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":73,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":218,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":639,"org.apache.commons.collections4.ListUtilsTest.testSelect":104,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":647,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":534,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":446,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":115,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":176,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":379,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":646,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":346,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":119,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":110,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":528,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":289,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":213,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":199,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":450,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":117,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":276,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":531,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":607,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":479,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":59,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":371,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":416,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":418,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":417,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":387,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":458,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":258,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":200,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":583,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":588,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":347,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":397,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":109,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":321,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":421,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":206,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":88,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":240,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":498,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":484,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":568,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":31,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":459,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":582,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":489,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":144,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":224,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":576,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":286,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":338,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":253,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":284,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":285,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":188,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":32,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":572,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":628,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":97,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":399,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":18,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":491,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":527,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":575,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":61,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":339,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":267,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":464,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":378,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":579,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":352,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":392,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":437,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":649,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":543,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":511,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":469,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":594,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":557,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":563,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":216,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":629,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":441,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":68,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":633,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":156,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":262,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":173,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":304,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":447,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":551},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"a1ba5423-3f2d-11e6-9c33-a7e190a5f835","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[96,97,98,99,100,101,102],"tindex":"a1bac954-3f2d-11e6-9c33-3508532d881c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (null == object) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[103,104],"tindex":"a1baf065-3f2d-11e6-9c33-f9368baff1e1","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[105,106],"tindex":"a1baf066-3f2d-11e6-9c33-879d3d8f75ab","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1baf067-3f2d-11e6-9c33-732ae711c94b","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"a1bb1778-3f2d-11e6-9c33-c5f6b28ac44a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl"},"failures":[126,127],"tindex":"a1bb3e89-3f2d-11e6-9c33-37ecc851c9f7","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[128,129,130],"tindex":"a1bb3e8a-3f2d-11e6-9c33-dbdde1945e52","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bb659b-3f2d-11e6-9c33-d1bc94391cf9","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return java.util.Collections.synchronizedSortedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bb659c-3f2d-11e6-9c33-9dc1cfcb8e42","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[131,132,133,134,135],"tindex":"a1bb659d-3f2d-11e6-9c33-97c918a198bf","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[136,137],"tindex":"a1bb8cae-3f2d-11e6-9c33-bbedf6bb3944","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[138],"tindex":"a1bb8caf-3f2d-11e6-9c33-2fe4ab3646d8","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[139,140,141,142],"tindex":"a1bbb3c0-3f2d-11e6-9c33-1b13b355e710","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[143,144,145,146,147,148],"tindex":"a1bbb3c1-3f2d-11e6-9c33-fd7369f7253c","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtBinaryOperatorImpl"},"failures":[149,150],"tindex":"a1bbdad2-3f2d-11e6-9c33-c363f24641bd","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bbdad3-3f2d-11e6-9c33-03076d288574","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[151,152],"tindex":"a1bc01e4-3f2d-11e6-9c33-5b9d971db7dc","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl"},"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,149,177,178,179,180,181,182,183,184,185,186,187,150,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"a1bc01e5-3f2d-11e6-9c33-4123bfbdbc56","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size <= 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bc01e6-3f2d-11e6-9c33-4106cf15ba46","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"tindex":"a1bc01e7-3f2d-11e6-9c33-db0d6d3e3d35","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"a1bc28f8-3f2d-11e6-9c33-4586b76b74f6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bc28f9-3f2d-11e6-9c33-5721e427452a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bc500a-3f2d-11e6-9c33-f58294cc5916","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[301,302,303,304],"tindex":"a1bc500b-3f2d-11e6-9c33-ab09bc229e62","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bc500c-3f2d-11e6-9c33-157f52251704","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[305,306,307,308,309,310],"tindex":"a1bc771d-3f2d-11e6-9c33-e991dd43418b","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[311,312,313],"tindex":"a1bc771e-3f2d-11e6-9c33-61a54a5b66c6","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((b.size()) != (a.size())) {\n                {\n                    final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n                    for (final java.lang.Object java.lang.Object : a) {\n                        if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bc771f-3f2d-11e6-9c33-51749c4d216b","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bc9e30-3f2d-11e6-9c33-31be325709f7","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return java.util.Collections.synchronizedSortedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[133],"tindex":"a1bc9e31-3f2d-11e6-9c33-474f3e0cffe1","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bc9e32-3f2d-11e6-9c33-75c5a6141333","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[115],"tindex":"a1bc9e33-3f2d-11e6-9c33-cd52dbdf2513","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[314,315],"tindex":"a1bcc544-3f2d-11e6-9c33-e9664b173da1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bcc545-3f2d-11e6-9c33-113a023448c6","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[316],"tindex":"a1bcc546-3f2d-11e6-9c33-5951cc6841fd","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a1bcec57-3f2d-11e6-9c33-059dcc0bb2aa","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl"},"failures":[317],"tindex":"a1bcec58-3f2d-11e6-9c33-6ff14b292d59","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bcec59-3f2d-11e6-9c33-893d94d5c723","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[318],"tindex":"a1bd136a-3f2d-11e6-9c33-33731d1324f1","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl"},"failures":[31,41,44,45,48,49,50,51,52],"tindex":"a1bd136b-3f2d-11e6-9c33-99b902663548","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bd136c-3f2d-11e6-9c33-85245131f601","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bd136d-3f2d-11e6-9c33-6585c0516f69","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[319],"tindex":"a1bd3a7e-3f2d-11e6-9c33-e9b00c62d34c","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"a1bd3a7f-3f2d-11e6-9c33-0ba64cf4c966","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[344],"tindex":"a1bd3a80-3f2d-11e6-9c33-57d74eba75a3","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl"},"failures":[345],"tindex":"a1bd3a81-3f2d-11e6-9c33-ad7ba1559060","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end == end) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[157],"tindex":"a1bd6192-3f2d-11e6-9c33-b9dd68137a5e","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[346,347,348,349,350,351,352,353,354],"tindex":"a1bd6193-3f2d-11e6-9c33-3986fa0e90b0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bd6194-3f2d-11e6-9c33-b33fde34ae98","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bd88a5-3f2d-11e6-9c33-91ae379d68fe","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bd88a6-3f2d-11e6-9c33-fd504b2d8d04","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[355,356],"tindex":"a1bd88a7-3f2d-11e6-9c33-b75759a5e3be","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[357,358,359,360,361,362,363],"tindex":"a1bdafb8-3f2d-11e6-9c33-d7ad81297231","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[364],"tindex":"a1bdafb9-3f2d-11e6-9c33-2fc96ce40207","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[365,366],"tindex":"a1bdafba-3f2d-11e6-9c33-091495d1edec","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((b.size()) != (a.size())) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:235","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bdd6cb-3f2d-11e6-9c33-1587ba93cd76","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"a1bdd6cc-3f2d-11e6-9c33-29db5963e86f","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[401],"tindex":"a1bdd6cd-3f2d-11e6-9c33-73d6d8ebfda9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bdd6ce-3f2d-11e6-9c33-5db33eab2f23","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bdfddf-3f2d-11e6-9c33-c12fc5e09c91","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bdfde0-3f2d-11e6-9c33-49d33918809d","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((b.size()) != (a.size())) {\n                {\n                    final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n                    for (final java.lang.Object java.lang.Object : a) {\n                        if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bdfde1-3f2d-11e6-9c33-ff751e464a59","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bdfde2-3f2d-11e6-9c33-5bba6db19842","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1be24f3-3f2d-11e6-9c33-338562c9d1dc","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl"},"failures":[129],"tindex":"a1be24f4-3f2d-11e6-9c33-4148c6d091ba","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1be24f5-3f2d-11e6-9c33-f9586313ac27","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[63,80],"tindex":"a1be4c06-3f2d-11e6-9c33-65a78e68ac63","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl"},"failures":[402],"tindex":"a1be4c07-3f2d-11e6-9c33-e74a9f38b685","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[403,404,405,406,407,408,409,410,411,412],"tindex":"a1be4c08-3f2d-11e6-9c33-c1a44d0aa45b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[413,414,415,416,417,418,419],"tindex":"a1be4c09-3f2d-11e6-9c33-8bf98ca7692e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                        if (set.contains(obj)) {\n                            return set.remove(obj);\n                        } \n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1be4c0a-3f2d-11e6-9c33-619fc1ee604f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[420,421],"tindex":"a1be731b-3f2d-11e6-9c33-37dc43e92df6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[229,422],"tindex":"a1be731c-3f2d-11e6-9c33-ed52562974a5","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453],"tindex":"a1be731d-3f2d-11e6-9c33-c7a01e5f2e79","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index > 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1be731e-3f2d-11e6-9c33-119c0f0935d1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                        if (set.contains(obj)) {\n                            return set.remove(obj);\n                        } \n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1be731f-3f2d-11e6-9c33-e9f51e0fb668","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[454],"tindex":"a1be9a30-3f2d-11e6-9c33-4799466cefc9","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[455,456,457,458,459,460,461,462,463,464,465,466,467],"tindex":"a1be9a31-3f2d-11e6-9c33-37cec1be95e6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[0,2,3,1,12,468,4,5,6,7,8,9,10,11,15,13,14,16,17,18,19,20,21,22,23,24,25,26,27,30,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,56,65,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,79,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"a1bec142-3f2d-11e6-9c33-1bc6cf1f5da3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bec143-3f2d-11e6-9c33-afa7a22a2f1d","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bec144-3f2d-11e6-9c33-7f8928fe4fa8","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl"},"failures":[469,470,471,422,472,473,132,474],"tindex":"a1bec145-3f2d-11e6-9c33-b9c697f15dfb","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl"},"failures":[],"tindex":"a1bee856-3f2d-11e6-9c33-e1e8124c7bad","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[475,476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"a1bee857-3f2d-11e6-9c33-6ddadb6c3a95","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[488],"tindex":"a1bee858-3f2d-11e6-9c33-bb8372f85c1f","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[489,490,491,492,493,494,495,496,497,498,360,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,363,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545],"tindex":"a1bee859-3f2d-11e6-9c33-bfbad49cf8fb","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bf0f6a-3f2d-11e6-9c33-7f2548c71e02","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[546,547,548],"tindex":"a1bf0f6b-3f2d-11e6-9c33-bbb74e284280","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[549,334,550,343,551],"tindex":"a1bf0f6c-3f2d-11e6-9c33-a3ce3b822777","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[552],"tindex":"a1bf367d-3f2d-11e6-9c33-0b6b4160d904","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bf367e-3f2d-11e6-9c33-853176dee169","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl"},"failures":[553,554],"tindex":"a1bf367f-3f2d-11e6-9c33-ed3ad1cdd4ec","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a1bf3680-3f2d-11e6-9c33-abaebe0009fc","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581],"tindex":"a1bf5d91-3f2d-11e6-9c33-359bcdee07fe","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl"},"failures":[271,272,274,275,276,279,280,281,282,284,285,287,288,289,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605],"tindex":"a1bf5d92-3f2d-11e6-9c33-85ddeadd955d","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654],"tindex":"a1bf5d93-3f2d-11e6-9c33-af8f9b65e9b9","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl"},"failures":[655],"tindex":"a1bf5d94-3f2d-11e6-9c33-11cd41c3e266","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl"},"failures":[317],"tindex":"a1bf5d95-3f2d-11e6-9c33-b9d65d5702fe","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[656],"tindex":"a1bf84a6-3f2d-11e6-9c33-b326d609ce90","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333135557/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}