{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":186,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":384,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":240,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":522,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":60,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":620,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":931,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":38,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsSelfHashCode":293,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":253,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":923,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":694,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":379,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":887,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":194,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":418,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":422,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":557,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":990,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":424,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":423,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":39,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":695,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":844,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":487,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":760,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":894,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":6,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":363,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":15,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":841,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":155,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":983,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":450,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":574,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":608,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":141,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":190,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":851,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":133,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":944,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":594,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":1010,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":898,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":752,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":890,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":1003,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":222,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":62,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":1022,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":702,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":34,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":919,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":778,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":725,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":761,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":324,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":27,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":1009,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":776,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":204,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":677,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":829,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":536,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":980,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":101,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":195,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":271,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":149,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":864,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":1011,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":314,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":313,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":312,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":650,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":796,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":656,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":187,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":453,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":348,"org.apache.commons.collections4.map.CompositeMapTest.testPut":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":153,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":842,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":492,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":941,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":852,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":456,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":809,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":704,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":633,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":836,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":1018,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":611,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":394,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":583,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":728,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":999,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":398,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":973,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":111,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":753,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":173,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":1007,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":217,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":762,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":299,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":591,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":885,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":632,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":278,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":1014,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":248,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":562,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":102,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":262,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":998,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":596,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":220,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":855,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":992,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":830,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":784,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":264,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":964,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":831,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":1002,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":435,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":669,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":473,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":857,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":274,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":969,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":927,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":169,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":1013,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":203,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":673,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":515,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":640,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":37,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":794,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":749,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":291,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":934,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":357,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":671,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":468,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":546,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":666,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":587,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":644,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":846,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":863,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":542,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":860,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":382,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":1026,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":699,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":137,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":1021,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":347,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":769,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":619,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":908,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":20,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":1005,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":237,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":952,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":183,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":961,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":166,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":617,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":696,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":57,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":185,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":272,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":496,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":874,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":341,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":866,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":447,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":516,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":665,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":822,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":968,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":21,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":850,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":1012,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":787,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":287,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":573,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":848,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":779,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":963,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":457,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":793,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":828,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":55,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":840,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":517,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":979,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":180,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":232,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":905,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":726,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":910,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":734,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":791,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":759,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":89,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":719,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":954,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":533,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":340,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":541,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":513,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":73,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":792,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":804,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":806,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":316,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":805,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":397,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":936,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":877,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":571,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":11,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":597,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":296,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":825,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":410,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":599,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":17,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":390,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":1015,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":811,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":738,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":838,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":177,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":1001,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":154,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":690,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":151,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":279,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":808,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":429,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":758,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":821,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":393,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":387,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":652,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":50,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":505,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":507,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":443,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":600,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":607,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":36,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":909,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":612,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":509,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":634,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":189,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":770,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":717,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":369,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":879,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":845,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":144,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":680,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":757,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":660,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":641,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":755,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":995,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":152,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":499,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":951,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":32,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":949,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":315,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":993,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":994,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":929,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":832,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":482,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":178,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":876,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":362,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":922,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":780,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":168,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":333,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":917,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":692,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":376,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":932,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":172,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":933,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":971,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":722,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":493,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":521,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":490,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":896,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":960,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":345,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":24,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":254,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":723,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":939,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":294,"org.apache.commons.collections4.CollectionUtilsTest.find":472,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":575,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":582,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":924,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":241,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":875,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":265,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":329,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":610,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":978,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":463,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":820,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":461,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":957,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":478,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":668,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":1008,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":672,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":606,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":87,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":269,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":768,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":706,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":414,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":912,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":339,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":605,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":361,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":889,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":327,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":609,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":691,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":675,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":311,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":688,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":255,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":544,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":613,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":847,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":97,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":282,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":833,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":834,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":835,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":488,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":682,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":818,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":511,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":985,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":937,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":258,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":950,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":402,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":816,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":188,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":412,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":304,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":176,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":655,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":147,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":930,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":986,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":918,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":319,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":781,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":71,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":592,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":1004,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":520,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":129,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":826,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":198,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":925,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":67,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":386,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":730,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":729,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":537,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":268,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":819,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":266,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":549,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":476,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":434,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":676,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":902,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":881,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":802,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":731,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":568,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":997,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":967,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":371,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":799,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":375,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":965,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":745,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":639,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":1020,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":514,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":785,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":849,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":104,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":421,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":735,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":824,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":419,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":420,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":774,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":988,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":1019,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":359,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":614,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":653,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":940,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":125,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":810,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":736,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":630,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":372,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":775,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":869,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":210,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":35,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":95,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":1017,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":742,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":661,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":763,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":425,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":121,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":9,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":500,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":716,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":707,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":529,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":624,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":743,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":539,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":1027,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":981,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":184,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":700,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":126,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":540,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":953,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":415,"org.apache.commons.collections4.map.CompositeMapTest.testGet":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":708,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":524,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":346,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":972,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":748,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":576,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":621,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":635,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":942,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":718,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":45,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":772,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":411,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":713,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":484,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":1024,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":356,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":225,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":647,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":471,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":455,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":370,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":238,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":984,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":697,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":404,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":872,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":865,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":823,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":209,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":714,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":199,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":512,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":233,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":485,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":814,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":205,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":888,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":862,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":364,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":664,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":897,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":252,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":904,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":686,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":645,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":117,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":360,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":1025,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":213,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":326,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":569,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":801,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":765,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":789,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":604,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":977,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":991,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":975,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":280,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":976,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":413,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":856,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":858,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":786,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":996,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":396,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":295,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":432,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":926,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":966,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":756,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":353,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":527,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":899,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":378,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":525,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":839,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":526,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":122,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":428,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":538,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":797,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":914,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":871,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":915,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":601,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":913,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":580,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":798,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":19,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":302,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":893,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":131,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":7,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":406,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":567,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":764,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":105,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":552,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":815,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":928,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":374,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":813,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":351,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":554,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":974,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":800,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":444,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":892,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":221,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":559,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":558,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":637,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":401,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":689,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":321,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":962,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":911,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":643,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":859,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":441,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":843,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":987,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":10,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":767,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":803,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":336,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":504,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":78,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":853,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":629,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":16,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":322,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":263,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":436,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":945,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":352,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":1016,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":389,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":391,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":732,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":61,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":256,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":790,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalFullCollectionExists":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":156,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":710,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":907,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":751,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":658,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":44,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":349,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":550,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":783,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":308,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":771,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":878,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":886,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":64,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":491,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":837,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":560,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":777,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":407,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":501,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":870,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":128,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":705,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":651,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":883,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":79,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":895,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":226,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":12,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":18,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":338,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":766,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":868,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalEmptyCollectionExists":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":636,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":303,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":946,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":948,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":947,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":626,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":687,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":982,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":132,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":51,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":891,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":438,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":439,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":440,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":250,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":535,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":399,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":229,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":788,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":82,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":698,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":747,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":628,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":553,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":873,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":171,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":581,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":136,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":277,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":958,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":854,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":297,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":454,"org.apache.commons.collections4.set.CompositeSetTest.testContains":712,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":642,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":989,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":70,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":306,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":368,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":260,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":861,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":506,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":285,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":867,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":300,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":882,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":683,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":565,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":703,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":616,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":281,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":146,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":649,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":330,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":906,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":622,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":283,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":530,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":532,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":531,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":921,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":431,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":437,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":920,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":916,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":750,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":246,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":475,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":1000,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":310,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":167,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":935,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":807,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":388,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":206,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":466,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":654,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":663,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":959,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":724,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":458,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":460,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":486,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":551,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":207,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":477,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":938,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":112,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":817,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":464,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":884,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":381,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":134,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":956,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":113,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":782,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":48,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":337,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":943,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":26,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":1006,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":659,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":901,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":739,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":377,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":528,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":502,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":795,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":150,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":323,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":403,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":880,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":124,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":585,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":625,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":631,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":684,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":119,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":416,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":578,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":1023,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":545,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":236,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":103,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":737,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":955,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":812,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":693,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":740,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":33,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":270,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":68,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":275,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":970},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"9d7bde43-2e9e-11e6-bb55-75c32f5ec5d2","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[0],"tindex":"9d7ca194-2e9e-11e6-bb55-a7a0d6caf368","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9d7ca195-2e9e-11e6-bb55-d92972742015","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1,2],"tindex":"9d7cc8a6-2e9e-11e6-bb55-231c87bef7cf","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[3,4],"tindex":"9d7cc8a7-2e9e-11e6-bb55-cdb376a0d599","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[5],"tindex":"9d7cefb8-2e9e-11e6-bb55-9d1f15a9aa41","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9d7cefb9-2e9e-11e6-bb55-b17ba19b84be","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[6],"tindex":"9d7d16ca-2e9e-11e6-bb55-53a4b35f6057","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"9d7d3ddb-2e9e-11e6-bb55-e97460054b47","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[37,38],"tindex":"9d7d64ec-2e9e-11e6-bb55-15b8d4e8ca0c","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[39],"tindex":"9d7d64ed-2e9e-11e6-bb55-3bbd63c10114","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[40],"tindex":"9d7d8bfe-2e9e-11e6-bb55-31d798c4e3a2","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"9d7db30f-2e9e-11e6-bb55-e3b4d298a3ce","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9d7dda20-2e9e-11e6-bb55-19b4116aaf1b","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9d7dda21-2e9e-11e6-bb55-cb9c6f360408","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[119],"tindex":"9d7e0132-2e9e-11e6-bb55-8fa1a2fea2a4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[120,121,122,123,124,125,126,127],"tindex":"9d7e2843-2e9e-11e6-bb55-0160abec0b7a","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[128,129,130,131,119],"tindex":"9d7e2844-2e9e-11e6-bb55-758d962a034a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"9d7e4f55-2e9e-11e6-bb55-9df68c97fba1","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[128],"tindex":"9d7e4f56-2e9e-11e6-bb55-d1b169b7f784","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"9d7e9d77-2e9e-11e6-bb55-3711f1f25031","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227],"tindex":"9d7e9d78-2e9e-11e6-bb55-e3443d85a065","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            if ((node.getRight(dataElement)) != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[228,229,230,231,232,233],"tindex":"9d7ec489-2e9e-11e6-bb55-f3011ac75a52","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return java.util.List<E>.get(index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[234,235,236,237,238,126],"tindex":"9d7eeb9a-2e9e-11e6-bb55-67ba66c8f26d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[239,240,241],"tindex":"9d7eeb9b-2e9e-11e6-bb55-8bc89b6fc756","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"9d7f12ac-2e9e-11e6-bb55-ff3885adabd3","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[242],"tindex":"9d7f12ad-2e9e-11e6-bb55-0dc61e69b1e8","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9d7f12ae-2e9e-11e6-bb55-1b5b91c5ac91","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[13],"tindex":"9d7f39bf-2e9e-11e6-bb55-5b27ffcbc914","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,1,267,268,269,2,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"9d7f60d0-2e9e-11e6-bb55-a1b78ec7de60","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[129],"tindex":"9d7f60d1-2e9e-11e6-bb55-8162aaa90d5a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[294,295,296,297],"tindex":"9d7f87e2-2e9e-11e6-bb55-5fefe6337a42","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9d7f87e3-2e9e-11e6-bb55-35890ace6612","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[298,299,300],"tindex":"9d7faef4-2e9e-11e6-bb55-fb256b89eef7","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"9d7faef5-2e9e-11e6-bb55-411b982d1e31","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[301,302,303,304,305,306],"tindex":"9d7faef6-2e9e-11e6-bb55-957967d7522c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[307,308],"tindex":"9d7fd607-2e9e-11e6-bb55-b708363b8954","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[309,310,311,312,313,314,315,316,317,318,319,320],"tindex":"9d7fd608-2e9e-11e6-bb55-378214d57ee5","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    removeIfExpired(key, now());\n                    return super.containsKey(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"9d7fd609-2e9e-11e6-bb55-9fc0a5a040c3","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[128,129,130,131],"tindex":"9d7ffd1a-2e9e-11e6-bb55-135dfbeef97b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[234,340,122,123,341,342,235,343,344,236,345,346,237,347,238,348,126,127,349,350],"tindex":"9d7ffd1b-2e9e-11e6-bb55-cd04ae8feb1f","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407],"tindex":"9d7ffd1c-2e9e-11e6-bb55-3b9df7e0fb4d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"9d80242d-2e9e-11e6-bb55-0b099e134404","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"9d80242e-2e9e-11e6-bb55-9b12e3f2d3f4","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"9d804b3f-2e9e-11e6-bb55-eb35fcb9e304","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"9d804b40-2e9e-11e6-bb55-494d01b8ff84","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        {\n            if (comparator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.set(index, comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(index);\n                    } else {\n                        java.util.BitSet.clear(index);\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[185,186],"tindex":"9d804b41-2e9e-11e6-bb55-8ffed72e84ce","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[470,471],"tindex":"9d807252-2e9e-11e6-bb55-556c84aca131","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[472],"tindex":"9d807253-2e9e-11e6-bb55-b1b75bfcf629","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[473],"tindex":"9d809964-2e9e-11e6-bb55-990c63dd8a5b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9d80c075-2e9e-11e6-bb55-55bb9d12a7af","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"9d80c076-2e9e-11e6-bb55-db28f7a27c5e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[266],"tindex":"9d80e787-2e9e-11e6-bb55-193aebf8e8a4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,474,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227],"tindex":"9d810e98-2e9e-11e6-bb55-7924ae441287","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554],"tindex":"9d815cb9-2e9e-11e6-bb55-9fbb70153960","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"9d815cba-2e9e-11e6-bb55-1b17f1500ad5","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[555,556,557,558,559,560,561,562,522,523,524,525,526,527,528,563,564,529,530,531,532,565,566,533,534,567,568,569,535,570,571,536,572,573,537,574,538,539,540,541,575,542,543,544,545,546,547,576,577,548,578,579,580,581,549,550,551],"tindex":"9d8183cb-2e9e-11e6-bb55-e14277b356cf","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9d81d1ec-2e9e-11e6-bb55-ffde7c176061","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    removeIfExpired(key, now());\n                    return super.containsKey(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9d81d1ed-2e9e-11e6-bb55-5d63569b8688","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[582],"tindex":"9d81f8fe-2e9e-11e6-bb55-438776edc48c","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9d82200f-2e9e-11e6-bb55-3ba3e03f2aea","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642],"tindex":"9d824720-2e9e-11e6-bb55-c97908584bb2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[643,644,645,646],"tindex":"9d824721-2e9e-11e6-bb55-73091ef1031c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[647,648],"tindex":"9d826e32-2e9e-11e6-bb55-5f52e8f74c8c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[],"tindex":"9d829543-2e9e-11e6-bb55-6ffefc854396","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            if ((node.getRight(dataElement)) != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"9d829544-2e9e-11e6-bb55-6db86e3b11e8","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"9d82bc55-2e9e-11e6-bb55-f9e522bac1f7","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"9d82bc56-2e9e-11e6-bb55-2f4535e9a7b0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[649,650,651,652],"tindex":"9d82e367-2e9e-11e6-bb55-1ba819d9a7b2","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[151,653,197,654],"tindex":"9d830a78-2e9e-11e6-bb55-238bc06fb000","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[655,656,657,658,659,660,661,662,663,664,665,666,667,668,669],"tindex":"9d830a79-2e9e-11e6-bb55-5f9a82812eba","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"9d83318a-2e9e-11e6-bb55-7593b85fb94b","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9d83318b-2e9e-11e6-bb55-05aea1b3c584","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"9d83318c-2e9e-11e6-bb55-7b2646fb6d9f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[670,671,672,673,674,675],"tindex":"9d83318d-2e9e-11e6-bb55-592c00e246a9","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[676,677,678],"tindex":"9d83589e-2e9e-11e6-bb55-a3d0394b142a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"9d83589f-2e9e-11e6-bb55-851a26bccad1","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"9d8358a0-2e9e-11e6-bb55-91ab29676161","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"9d8358a1-2e9e-11e6-bb55-2f6d20ffa002","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9d837fb2-2e9e-11e6-bb55-356187ea565e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[679],"tindex":"9d837fb3-2e9e-11e6-bb55-574078819c45","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9d837fb4-2e9e-11e6-bb55-bffc89f1f992","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"9d83a6c5-2e9e-11e6-bb55-fb29d1114a25","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9d83a6c6-2e9e-11e6-bb55-6fe9f01a6e65","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return java.util.List<E>.get(index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9d83a6c7-2e9e-11e6-bb55-69212007f34a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[680,681,682,683,684,685,351,352,353,354,356,357,358,686,359,687,360,361,362,363,364,365,366,367,368,688,689,690,370,691,371,372,373,374,375,376,377,378,692,693,379,694,695,696,697,698,699,700,381,382,383,384,386,387,388,701,389,702,390,391,392,393,394,395,396,703,704,705,398,706,399,400,401,402,403,404,405,406,707,708,407,709],"tindex":"9d83a6c8-2e9e-11e6-bb55-d15e8750fe49","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[710,711,712,713,501,714,502,503,504,505,715,506,507,508,509,510,511,512,513,514,515,516,517,518,519,716,717,718,719,520,521,522,523,524,525,526,527,528,563,564,529,530,531,532,565,566,533,534,567,568,569,535,570,536,572,537,538,539,540,541,575,542,543,544,545,546,547,576,577,548,549,550,551],"tindex":"9d83cdd9-2e9e-11e6-bb55-a10fcf3a1c97","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[720],"tindex":"9d83cdda-2e9e-11e6-bb55-b7be67f60a01","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[50,721,722,723,724,75,78,725,726,84,87,727,728,93,96,729,730,102,105,731,732,109,113,116,733,734],"tindex":"9d83f4eb-2e9e-11e6-bb55-db63875167b7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[735],"tindex":"9d841bfc-2e9e-11e6-bb55-0faac89c8373","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[736],"tindex":"9d841bfd-2e9e-11e6-bb55-7db3a6a08bd0","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[41,42,737,738,739,740,43,741,742,44,45,743,744,745,746,46,747,748,47,48,49,50,51,52,721,749,53,750,751,752,753,754,755,54,55,56,57,58,59,60,61,62,756,757,758,759,760,761,63,64,65,66,67,68,69,70,71,762,763,764,765,766,767,90,91,92,93,94,95,96,97,98,768,769,770,771,772,773,774,108,109,110,111,112,113,114,115,116,117,118,775,776,777,778,779,780],"tindex":"9d84430e-2e9e-11e6-bb55-03b982575aeb","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9d84430f-2e9e-11e6-bb55-2b30e2852c14","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        {\n            if (comparator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.set(index, comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(index);\n                    } else {\n                        java.util.BitSet.clear(index);\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[508,533],"tindex":"9d844310-2e9e-11e6-bb55-29ef62a2fcf1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[372,781,400],"tindex":"9d846a21-2e9e-11e6-bb55-3f6a816e748b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[782,783],"tindex":"9d846a22-2e9e-11e6-bb55-3daa0323619d","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[134,135,136,137,143,144,146,147,148,149,150,151,152,153,154,784,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,597,598,599,785,786,787,788,789,790,791,792,793,794,600,795,796,797,798,799,800,801,802,803,804,805,806,601,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,602,824,825,826,827,828,829,830,831,832,833,834,835,603,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,242,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,321,981,4,982,983,984,322,985,324,986,987,326,327,988,328,989,990,329,330,991,331,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021],"tindex":"9d846a23-2e9e-11e6-bb55-b3c1cb2b340a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1022,832],"tindex":"9d849134-2e9e-11e6-bb55-17f0fab77256","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1023],"tindex":"9d849135-2e9e-11e6-bb55-6be9fab3cf2e","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[1024,1025,1026,1027],"tindex":"9d849136-2e9e-11e6-bb55-1d1c9dec35cb","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}