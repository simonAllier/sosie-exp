{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":346,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":1153,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":26,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":436,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":833,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":324,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":7,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":532,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":636,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":1081,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":145,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":619,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":676,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":81,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":321,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":974,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":1167,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":885,"org.apache.commons.collections4.CollectionUtilsTest.collect":578,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":300,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":564,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":549,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":773,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":70,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":911,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":1173,"org.apache.commons.collections4.CollectionUtilsTest.get":226,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":1026,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":914,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":1123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":942,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":908,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":172,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":627,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":1293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":922,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":813,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":903,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":134,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":709,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":1206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":901,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":96,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":649,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":663,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":1188,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":1255,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":563,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":200,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":251,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.CollectionUtilsTest.select":541,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":576,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":1257,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":591,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":397,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":470,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":899,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":63,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":848,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":362,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":1111,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":365,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":449,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":781,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":1036,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":71,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":954,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":660,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":715,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":987,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":1190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":981,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":1038,"org.apache.commons.collections4.CollectionUtilsTest.intersection":289,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":459,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":695,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":1159,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":889,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":471,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":657,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":733,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":206,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":744,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":980,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":1070,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":1097,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":1203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":1013,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":642,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":83,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":458,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":871,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":650,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":752,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":755,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":791,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":1263,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":883,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":1089,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":945,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":1169,"org.apache.commons.collections4.map.CompositeMapTest.testPut":299,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":1043,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":747,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":391,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":761,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":164,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":726,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":1016,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":1210,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":952,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":1151,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":350,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":586,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":0,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":262,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":5,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":1141,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":812,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":177,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":227,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":178,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":697,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":855,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":938,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":1142,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":655,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":1003,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":128,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":859,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":1193,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":1166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":1184,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":1195,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":1209,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":1251,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":1194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":741,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":648,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":308,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":861,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":802,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":896,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":1291,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":290,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":811,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":539,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":569,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":445,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":652,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":1086,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":1094,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":91,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":1066,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":266,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":256,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":645,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":356,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":1270,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":704,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":763,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":555,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":280,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":1115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":131,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":58,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":775,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":1102,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":834,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":1128,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":1215,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":674,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":927,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":1172,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":860,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":888,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":1082,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":570,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":1006,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":1137,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":1259,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":18,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":1240,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":361,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":1294,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":819,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":678,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":152,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":192,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":760,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":517,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":816,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":1250,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":221,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":778,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":972,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":502,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":625,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":327,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":1200,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":276,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":86,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":863,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":1009,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":1277,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.CollectionUtilsTest.get1":559,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":1090,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":626,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":1162,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":441,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":912,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":1150,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":80,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":904,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":600,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":1078,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":1074,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":593,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":211,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":799,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":647,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":1077,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":344,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":114,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":1039,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":965,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":1134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":434,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":923,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":1032,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":731,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":784,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":520,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":828,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":139,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":336,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":941,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":53,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":1120,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":194,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":798,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":1268,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":797,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":796,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":1056,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":1192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":937,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":561,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":468,"org.apache.commons.collections4.map.LRUMapTest.testReset":758,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":123,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":1183,"org.apache.commons.collections4.CollectionUtilsTest.exists":534,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":1109,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":1223,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":690,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":631,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":118,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":953,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":825,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":932,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":1290,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":1256,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":208,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":857,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":879,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":821,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":643,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":214,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":444,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":768,"org.apache.commons.collections4.map.LinkedMapTest.testReset":810,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":1267,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":69,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":782,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":1051,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":278,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":267,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":281,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":1224,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":749,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":1234,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":272,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":333,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":489,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":516,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":1096,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":1127,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":387,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":1018,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":801,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":158,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":415,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":1283,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":171,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":1152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":996,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":79,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":1119,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":319,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":45,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":446,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":1285,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":936,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":985,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":89,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":846,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":163,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":616,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":1106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":990,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":132,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":872,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":1136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":1146,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":1221,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":705,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":1239,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":379,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":531,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":1138,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":684,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":1053,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":851,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":603,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":1104,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":725,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":946,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":204,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":1176,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":748,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":983,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":746,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":667,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":864,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":332,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":68,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":329,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":757,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":869,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":548,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":51,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":426,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":933,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":182,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":212,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":498,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":524,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":870,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":275,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":841,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":1037,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":840,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":304,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":842,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":546,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":348,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":993,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":820,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":1033,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":556,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":1069,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":823,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":1072,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":409,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":136,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":363,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":910,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":951,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":283,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":727,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":261,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":698,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":630,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":849,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":1121,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":494,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":604,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":815,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":913,"org.apache.commons.collections4.ListUtilsTest.testSelect":610,"org.apache.commons.collections4.map.LinkedMapTest.testClone":814,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":244,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":274,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":702,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":198,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":403,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":595,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":284,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":1099,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":8,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":1158,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":454,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":587,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":877,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":575,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":1071,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":36,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":774,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":963,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":1133,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":162,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":607,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":866,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":926,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":1253,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":414,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":769,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":193,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":765,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":1242,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":629,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":421,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":1243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":939,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":740,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":1073,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":1052,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":126,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":918,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":969,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":967,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":832,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":852,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":921,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":920,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":919,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":1248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":948,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":1007,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":1117,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":223,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":639,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":720,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":479,"org.apache.commons.collections4.CollectionUtilsTest.find":558,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":1160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":1196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":943,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":928,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":770,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":856,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":1279,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":665,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":33,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":656,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":1276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":962,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":961,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":960,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":1179,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":109,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":560,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":542,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":469,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":1219,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":1020,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":56,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":439,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":501,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":822,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":337,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":536,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":662,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":509,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":151,"org.apache.commons.collections4.map.LRUMapTest.testLRU":764,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":1178,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":599,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":1044,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":1060,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":130,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":1249,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":634,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":1237,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":24,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":14,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":195,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":30,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":330,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":1005,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":1118,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":1168,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":792,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":222,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":11,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":977,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":1132,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":1156,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":485,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":679,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":1185,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":1265,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":102,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":1140,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":1266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":347,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":982,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":1015,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":790,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":876,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":52,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":1207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":916,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":743,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":675,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":711,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":1004,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":671,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":390,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":1228,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":789,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":148,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":1161,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":635,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":154,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":486,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":1155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":515,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":800,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":886,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":673,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":180,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":59,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":133,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":692,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":584,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":931,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":159,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":553,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":867,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":231,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":522,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":1131,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":463,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":622,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":891,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":572,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":271,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":413,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":484,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":612,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":1235,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":1129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":737,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":826,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":887,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":829,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":523,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":573,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":122,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":831,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":120,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":654,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":168,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":530,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":615,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":1062,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":1181,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":1254,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":496,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":976,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":1175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":1079,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":1108,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":372,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":42,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":1261,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":868,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":249,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":618,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":1112,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":1189,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":1170,"org.apache.commons.collections4.CollectionUtilsTest.transform2":526,"org.apache.commons.collections4.CollectionUtilsTest.transform1":525,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":1229,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":461,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":1022,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":909,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":247,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":583,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":680,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":378,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":1092,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":1001,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":1271,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":427,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":77,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":854,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":440,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":894,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":1021,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":895,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":893,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":623,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":1029,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":1289,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":804,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":342,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":653,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":617,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":93,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":805,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":964,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":1182,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":72,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":173,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":1010,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":197,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":533,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":412,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":685,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":1260,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":521,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":442,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":331,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":243,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":29,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":658,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":1199,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":729,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":216,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":1041,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":1114,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":750,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":1258,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":621,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":722,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":1002,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.map.CompositeMapTest.testGet":298,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":1058,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":1244,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":1272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":881,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":971,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":1232,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":830,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":930,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":1045,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":1008,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":84,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":219,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":236,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":228,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":94,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":240,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":295,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":771,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":838,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":1211,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":1126,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":491,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":723,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":880,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":1252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":359,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":538,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":956,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":949,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":1288,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":464,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":1042,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":1286,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":453,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":683,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":433,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":1091,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":393,"org.apache.commons.collections4.CollectionUtilsTest.union":562,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":279,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":1233,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":1100,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":341,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":1054,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":388,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":62,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":460,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":892,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":1180,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":1269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":968,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":736,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":487,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":511,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":416,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":730,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":418,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":170,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":492,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":16,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":1165,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":481,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":998,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":455,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":273,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":884,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":986,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":1101,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":1246,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":207,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":988,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":1011,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":940,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":225,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":835,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":1061,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":594,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":254,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":1236,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":54,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":712,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":1014,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":1031,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":1067,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":277,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":1049,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":73,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":510,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":694,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":817,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":875,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":353,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":352,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":215,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":3,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":661,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":1186,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":185,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":807,"org.apache.commons.collections4.map.LRUMapTest.testClone":759,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":1278,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":366,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":38,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":425,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":839,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":424,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":699,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":997,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":423,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":135,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":513,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":772,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":1225,"org.apache.commons.collections4.ListUtilsTest.testSubtract":1292,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":641,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":1130,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":1274,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":435,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":1264,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":438,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":644,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":1197,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":121,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":552,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":551,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":66,"org.apache.commons.collections4.list.TreeListTest.testListEquals":252,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":568,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":201,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":950,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":1216,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":735,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":1068,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":401,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":1231,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":1085,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":1204,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":1040,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":1110,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":1075,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":1065,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":1084,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":597,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":1284,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":410,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":258,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":1143,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":34,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":87,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":389,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":865,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":596,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":579,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":507,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":343,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":402,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":358,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":22,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":129,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":574,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":689,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":1098,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":934,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":1105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":1191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":906,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":1064,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":588,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":973,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":392,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":898,"org.apache.commons.collections4.CollectionUtilsTest.filter":535,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":302,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":405,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":301,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":116,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":847,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":334,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":714,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":518,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":1157,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":1124,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":809,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":779,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":176,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":547,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":1208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":734,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":1187,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":1245,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":175,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":293,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":874,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":320,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":153,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":659,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":497,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":1035,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":328,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":577,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":97,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":1205,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":472,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":473,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":999,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":878,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":1241,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":624,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":845,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":31,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":837,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":844,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":843,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":637,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":836,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":975,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":915,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":582,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":292,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":210,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":508,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":995,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":248,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":306,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":978,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":1063,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":1281,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":527,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":169,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":286,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":777,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":229,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":241,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":296,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":1047,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":1048,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":514,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":373,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":756,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":613,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":721,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":1262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":360,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":384,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":318,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":713,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":482,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":751,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":786,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":1055,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":808,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":141,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":1019,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":1023,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":1113,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":326,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":700,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":566,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":1201,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":1144,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":1025,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":100,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":117,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":540,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":430,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":451,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":824,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":803,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":1164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":900,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":1095,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":232,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":1139,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":1287,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":1275,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":146,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":585,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":1202,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":265,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":739,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":255,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":150,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":571,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":1148,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":12,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":1213,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":550,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":1212,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":19,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":50,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":979,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":313,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":1076,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":312,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":376,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":991,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":688,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":374,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":1093,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":929,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":1027,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":1024,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":1147,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":738,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":407,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":554,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":1103,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":110,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":1247,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":544,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":1107,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":224,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":311,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":947,"org.apache.commons.collections4.set.CompositeSetTest.testContains":294,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":602,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":85,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":853,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":28,"org.apache.commons.collections4.CollectionUtilsTest.isFull":537,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":664,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":257,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":788,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":1000,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":1217,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":245,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":708,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":818,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":354,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":581,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":404,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":989,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":862,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":1017,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":984,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":431,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":557,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":1046,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":186,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":620,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":1220,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":1214,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":1145,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":633,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":1083,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":291,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":1050,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":78,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":282,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":718,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":1030,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":710,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":1226,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":465,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":155,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":466,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":88,"org.apache.commons.collections4.CollectionUtilsTest.reverse":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":742,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":754,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":467,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":503,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":924,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":628,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":944,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":917,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":666,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":364,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":850,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":1154,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":1125,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":209,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":499,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":480,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":905,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":1059,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":149,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":310,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":1282,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":285,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":325,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":776,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":456,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":672,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":670,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":90,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":335,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":646,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":512,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":1080,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":167,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":994,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":925,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":1273,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":437,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":1163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":955,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":707,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":897,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":1087,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":235,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":882,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":1116,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":970,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":1028,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":111,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":1012,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":592,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":858,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":147,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":787,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":1177,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":399,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":668,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":935,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":992,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":716,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":1227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":957,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":958,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":959,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":696,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":890,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":450,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":1135,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":76,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":686,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":1238,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":1280,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":385,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":966,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":732,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":1149,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":785,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":907,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":717,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":902,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":1218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":873,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":317,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":1122,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":95,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":701,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":203,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":217,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":406,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":27,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":669,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":766,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":745,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":92,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":795,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":519,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":428,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":693,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":1057,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":1088,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":753,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":793,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":794,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":339,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":1174,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":340,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":724,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":1171,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":827,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":230,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":506,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":263,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":1034,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":767,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":1198,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":691,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":1222,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":1230,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":483,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":783,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":125},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae97bcc8-3f42-11e6-830f-e59822d2687c","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (a == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (equator == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if ((a == null) || (b == null)) {\n                                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                            } \n                            if (equator == null) {\n                                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n                            } \n                            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n                            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n                            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n                            script.visit(visitor);\n                            return visitor.getSubSequence();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae988019-3f42-11e6-830f-c102b3293d48","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae98a72a-3f42-11e6-830f-e7b00fae2c1d","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"ae98a72b-3f42-11e6-830f-1514a676fac9","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae99b89c-3f42-11e6-830f-a1284ef6f1d5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"ae99b89d-3f42-11e6-830f-7b57962a8456","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[27],"tindex":"ae9a06be-3f42-11e6-830f-8db1571af922","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9a2dcf-3f42-11e6-830f-556741013422","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"ae9a2dd0-3f42-11e6-830f-09285909f15c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous == null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[72,73,74],"tindex":"ae9a2dd1-3f42-11e6-830f-bf1875ce1ca2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9a54e2-3f42-11e6-830f-3361fbbaa772","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (!(contains(o))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,72,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,73,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"tindex":"ae9a54e3-3f42-11e6-830f-19c33a59a4b9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[223],"tindex":"ae9aa304-3f42-11e6-830f-ff961b9a3355","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9aa305-3f42-11e6-830f-c18532d21617","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Set) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                        return true;\n                    } \n                    return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9aca16-3f42-11e6-830f-19acd4344ab8","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9aca17-3f42-11e6-830f-7726e6e1a86c","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[224],"tindex":"ae9af128-3f42-11e6-830f-c74dc378fd0f","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtBinaryOperatorImpl"},"failures":[225],"tindex":"ae9af129-3f42-11e6-830f-1b52242e31a3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[226,227,228,229],"tindex":"ae9af12a-3f42-11e6-830f-ad290c3bfb1f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"ae9af12b-3f42-11e6-830f-5f155f4601ab","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl"},"failures":[245,246],"tindex":"ae9b183c-3f42-11e6-830f-bdba718052f6","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9b183d-3f42-11e6-830f-95adbefa4ced","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (a == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (equator == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if ((a == null) || (b == null)) {\n                                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                            } \n                            if (equator == null) {\n                                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n                            } \n                            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n                            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n                            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n                            script.visit(visitor);\n                            return visitor.getSubSequence();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"ae9b3f4e-3f42-11e6-830f-25a920a1d9c3","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9b3f4f-3f42-11e6-830f-ef218b0e6f23","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[285],"tindex":"ae9b6660-3f42-11e6-830f-2d1720b3e5c6","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"ae9b6661-3f42-11e6-830f-b18fc97f61f1","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"ae9b8d72-3f42-11e6-830f-170c6f5e82e9","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Collection) {\n                {\n                    return java.lang.Math.min(freqA(obj), freqB(obj));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"ae9b8d73-3f42-11e6-830f-41f69722353c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (index > 0) {\n                {\n                    if (index > 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if ((java.util.Set<E>.contains(object)) == false) {\n                                super.add(index, object);\n                                java.util.Set<E>.add(object);\n                            } \n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9b8d74-3f42-11e6-830f-9fff57875165","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (bitIndex == 0) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9bb485-3f42-11e6-830f-e141fad6964c","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[339,340,341,342,343],"tindex":"ae9bb486-3f42-11e6-830f-c11e9b0a3e5a","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9bb487-3f42-11e6-830f-615444eebc22","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"ae9bdb98-3f42-11e6-830f-0778367086e5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"tindex":"ae9bdb99-3f42-11e6-830f-a9aee7ed9713","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[346,352,353,510,358],"tindex":"ae9c02aa-3f42-11e6-830f-c9b5df5abb51","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9c29bb-3f42-11e6-830f-0b6e867fe813","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[511],"tindex":"ae9c29bc-3f42-11e6-830f-8933ba6145be","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9c29bd-3f42-11e6-830f-ab1a0d81a385","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[512],"tindex":"ae9c50ce-3f42-11e6-830f-819cf07d4923","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[513],"tindex":"ae9c50cf-3f42-11e6-830f-cbb7db2646f3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl"},"failures":[514,515,516,34],"tindex":"ae9c50d0-3f42-11e6-830f-69279ea80524","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl"},"failures":[517,518,519,520,521,522,523,524,525,526,527,528,529,286,530,531,532,533,534,535,536,537,538,539,287,540,541,542,543,544,545,546,288,547,548,549,550,551,552,553,554,555,556,557,226,558,559,560,561,562,289,563,564,565,566,227,228,229,567,568,569,570,571,1,572,573,225,574,575,576,577,578,290,579,580,581,582,583,584,585,586,587,588,589,590,591,592,291,593,594,595,596,597,598,599,600,601,602,603,604,605,606,355,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,292,293,294,295,296,297,632,633,634,635,636,101,103,105,110,113,118,119,121,122,125,128,637,183,638,370,639,205,206,207,208,209,210,212,640,641,642,643,419,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,298,299,300,301,302,303,304,305,669,670,671,672,673,674,675,676,677,678,679,680,468,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,65],"tindex":"ae9c50d1-3f42-11e6-830f-07bcdae07873","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9c77e2-3f42-11e6-830f-53be4b0218b7","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (index > 0) {\n                {\n                    if (index > 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if ((java.util.Set<E>.contains(object)) == false) {\n                                super.add(index, object);\n                                java.util.Set<E>.add(object);\n                            } \n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9c77e3-3f42-11e6-830f-e35c65d0a221","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[707,708],"tindex":"ae9c77e4-3f42-11e6-830f-7daff3bf6803","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[709],"tindex":"ae9c9ef5-3f42-11e6-830f-13bb97449a81","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[146,710],"tindex":"ae9c9ef6-3f42-11e6-830f-7165c8f38c57","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl"},"failures":[600],"tindex":"ae9c9ef7-3f42-11e6-830f-7796e054f865","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[711],"tindex":"ae9cc608-3f42-11e6-830f-d345b3cc7431","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9cc609-3f42-11e6-830f-339c16486d61","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (!(contains(o))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9cc60a-3f42-11e6-830f-315020662012","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9cc60b-3f42-11e6-830f-e913720e6a1e","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[110,113,118,119,121,125,128,156,157,158,159,160,161,162,164,167,73,170,205,206,207,208,209,210,212,712,713,714,715,716,717,718,719,720,74,721],"tindex":"ae9ced1c-3f42-11e6-830f-f170ed11580b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[523,527,529,286,287,541,288,556,560,562,289,566,572,290,291,595,610,611,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"ae9ced1d-3f42-11e6-830f-917958b3538e","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:382","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9ced1e-3f42-11e6-830f-45c1920fd64d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d142f-3f42-11e6-830f-631e34801e47","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[722],"tindex":"ae9d1430-3f42-11e6-830f-95e7950d213a","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d1431-3f42-11e6-830f-77d69367da79","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d1432-3f42-11e6-830f-f7e1d3c117d7","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[669,723,724,725],"tindex":"ae9d1433-3f42-11e6-830f-19f3861d6532","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[224],"tindex":"ae9d3b44-3f42-11e6-830f-1d593197be5e","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl"},"failures":[],"tindex":"ae9d3b45-3f42-11e6-830f-23fddf6f7789","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d3b46-3f42-11e6-830f-8d6603ac432b","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl"},"failures":[517],"tindex":"ae9d3b47-3f42-11e6-830f-8d58e66e738e","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[726],"tindex":"ae9d6258-3f42-11e6-830f-7155fd07f324","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d6259-3f42-11e6-830f-0161d4ad59fb","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.lang.Math.max(freqA(obj), freqB(obj));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d625a-3f42-11e6-830f-3d30c7af64ed","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d625b-3f42-11e6-830f-b9dcf1a51539","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl"},"failures":[578],"tindex":"ae9d896c-3f42-11e6-830f-95c03eb43116","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl"},"failures":[727],"tindex":"ae9d896d-3f42-11e6-830f-edfdecdaf630","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9d896e-3f42-11e6-830f-031e47c0162e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl"},"failures":[728,729,730,351,354,355,356,357,358,359,360,361,731,732,733,734,735,736,737,350,738,739,740,741,742,743,744,745,746,747,748],"tindex":"ae9d896f-3f42-11e6-830f-ab7ccc13a19a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl"},"failures":[524,535,586,589],"tindex":"ae9db080-3f42-11e6-830f-4519b02ab369","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[749,750],"tindex":"ae9db081-3f42-11e6-830f-bdb82694b776","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[62],"tindex":"ae9db082-3f42-11e6-830f-cf32371f498b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(get(index));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9dd793-3f42-11e6-830f-f5de8a0692fc","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Set) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                        return true;\n                    } \n                    return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[751],"tindex":"ae9dd794-3f42-11e6-830f-9542b1c779cf","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[752],"tindex":"ae9dd795-3f42-11e6-830f-f115725d7294","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9dfea6-3f42-11e6-830f-0d7a8a8dfe64","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(get(index));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9dfea7-3f42-11e6-830f-ad0192744aff","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (index > 0) {\n                {\n                    if (index > 0) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if ((java.util.Set<E>.contains(object)) == false) {\n                                super.add(index, object);\n                                java.util.Set<E>.add(object);\n                            } \n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl"},"failures":[553],"tindex":"ae9dfea8-3f42-11e6-830f-9f384b48668a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[511,753,754,755,756,757,758,759,760,761,762,763,50,51,52,53,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,237,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,681,802,803,804,805,806,807,808,809,810,811,62,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,243,829,830,831,832,833,834,835,836,63,837,838,839,840,841,842,843,844,845,64,846,847,65,66,848,849,67,68,69,70,71],"tindex":"ae9dfea9-3f42-11e6-830f-8b3c41041980","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl"},"failures":[850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867],"tindex":"ae9e25ba-3f42-11e6-830f-f32075742469","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9e25bb-3f42-11e6-830f-ff2270a54370","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[868,869,870,39,639,871,872,55,692,873,874,59,706],"tindex":"ae9e4ccc-3f42-11e6-830f-15ac174e5efc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9e73dd-3f42-11e6-830f-3fd1933c3e82","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[875,876,728,877,878,879,880,881,344,882,729,345,346,883,347,348,349,884,731,732,885,733,734,735,886,736,737,887,350,888,889,730,351,890,891,892,893,894,895,352,353,510,354,896,897,356,898,899,357,358,359,360,361,355,900,901,902,903,738,904,905,906,907,908,909,739,910,911,742,743,912,744,745,746,913,747,748,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,740,741,930,608],"tindex":"ae9e73de-3f42-11e6-830f-338156017fd4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,632,966,967,968,969,970,971,972,973,974,975],"tindex":"ae9e73df-3f42-11e6-830f-e37d0d87ec6a","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherLengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherLengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9e9af0-3f42-11e6-830f-f53c29a1a451","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9e9af1-3f42-11e6-830f-af7051730b35","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (a == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (equator == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            if ((a == null) || (b == null)) {\n                                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                            } \n                            if (equator == null) {\n                                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n                            } \n                            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n                            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n                            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n                            script.visit(visitor);\n                            return visitor.getSubSequence();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9ec202-3f42-11e6-830f-d384d3fab211","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl"},"failures":[976],"tindex":"ae9ec203-3f42-11e6-830f-9d788dcafaea","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,286,531,547,227,574,290,291,1292,1293],"tindex":"ae9ec204-3f42-11e6-830f-451718ab68fe","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9ee915-3f42-11e6-830f-d961d4e8c191","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9f1026-3f42-11e6-830f-d92cb164d239","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Collection) {\n                {\n                    return java.lang.Math.min(freqA(obj), freqB(obj));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9f1027-3f42-11e6-830f-bd14d08b9f58","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9f1028-3f42-11e6-830f-c5fa5426ad12","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9f1029-3f42-11e6-830f-752aedc42305","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ae9f373a-3f42-11e6-830f-67caae753efa","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl"},"failures":[1294],"tindex":"ae9f373b-3f42-11e6-830f-6f19dec19ca5","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467342119437/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}