{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":43,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":429,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":199,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":249,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":347,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":235,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":515,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":502,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":264,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":307,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":564,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":79,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":379,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":363,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":423,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":262,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":523,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":56,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":171,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":259,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":444,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":374,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":231,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":99,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":273,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":233,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":627,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":141,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":47,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":88,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":325,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":86,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":364,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":315,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":357,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":439,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":591,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":460,"org.apache.commons.collections4.CollectionUtilsTest.select":651,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":239,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":254,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":539,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":401,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":353,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":0,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":180,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":496,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":575,"org.apache.commons.collections4.ListUtilsTest.testEquals":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":60,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":58,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":412,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":376,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":204,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":405,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":8,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":340,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":52,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":295,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":560,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":637,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":397,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":386,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":23,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":499,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":80,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":438,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":500,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":123,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":556,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":350,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":372,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":659,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":230,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":137,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":151,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":127,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":513,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":283,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":232,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":50,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":336,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":417,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":666,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":622,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":514,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":600,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":147,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":418,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":213,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":544,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":30,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":361,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":132,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":507,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":169,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":269,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":421,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":280,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":309,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":14,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":469,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":577,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":468,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":332,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":461,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":572,"org.apache.commons.collections4.CollectionUtilsTest.union":583,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":615,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":7,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":558,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":65,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":19,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":210,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":211,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":300,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":84,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":24,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":484,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":53,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":604,"org.apache.commons.collections4.list.TreeListTest.testRemove":585,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":596,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":68,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":161,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":342,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":616,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":381,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":76,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":609,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":593,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":339,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":525,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":271,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":316,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":173,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":485,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":629,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":236,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":594,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":113,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":51,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":636,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":509,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":561,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":63,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":62,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":426,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":220,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.map.LRUMapTest.testClone":153,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":348,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":158,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":242,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":453,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":410,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":482,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":304,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":580,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":170,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":570,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":135,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":474,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":612,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":328,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":535,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":25,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":253,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":122,"org.apache.commons.collections4.list.TreeListTest.testListEquals":590,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":281,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":178,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":82,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":504,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":2,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":263,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":510,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":317,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":407,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":573,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":398,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":385,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":404,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":40,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":597,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":478,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":183,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":9,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":229,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":72,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":42,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":272,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":165,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":368,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":352,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":197,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":27,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":195,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":472,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":268,"org.apache.commons.collections4.map.LRUMapTest.testReset":152,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":384,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":69,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":521,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":640,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":284,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":26,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":576,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":37,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":526,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":222,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":21,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":555,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":443,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":530,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":166,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":395,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":177,"org.apache.commons.collections4.map.LinkedMapTest.testReset":212,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":516,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":181,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":467,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":614,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":605,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":635,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":308,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":571,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":140,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":642,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":134,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":200,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":362,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":399,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":322,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":373,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":383,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":495,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":36,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":375,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":334,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":138,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":144,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":240,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":247,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":246,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":31,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":567,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":488,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":238,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":306,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":446,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":100,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":589,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":414,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":250,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":431,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":11,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":528,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":559,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":606,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":130,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":327,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":506,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":649,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":382,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":661,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":454,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":392,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":455,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":519,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":424,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":633,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":133,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":98,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":566,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":320,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":125,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":185,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":630,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":257,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":149,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":547,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":653,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":265,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":85,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":554,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":390,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":529,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":603,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":563,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":592,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":96,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":611,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":244,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":595,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":243,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":549,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":245,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":644,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":46,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":221,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":162,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":483,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":505,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":667,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":224,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":562,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":115,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":313,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":540,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":97,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":282,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":647,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":617,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":326,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":358,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":534,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":599,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":380,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":278,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":330,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":136,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":187,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":216,"org.apache.commons.collections4.list.TreeListTest.testBug35258":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":463,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":16,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":219,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":126,"org.apache.commons.collections4.map.LinkedMapTest.testClone":215,"org.apache.commons.collections4.ListUtilsTest.testSelect":646,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":610,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":333,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":626,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":654,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":29,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":479,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":508,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":35,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":17,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":522,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":660,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":569,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":354,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":656,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":167,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":150,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":109,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":270,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":406,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":420,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":527,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":91,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":299,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":391,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":365,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":458,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":234,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":464,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":286,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":532,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":54,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":557,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":436,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":581,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":186,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":10,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":168,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":638,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":329,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":434,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":266,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":393,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":291,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":538,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":578,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":290,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":321,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":55,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":344,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":618,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":298,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":223,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":533,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":78,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":359,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":628,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":550,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":93,"org.apache.commons.collections4.map.LRUMapTest.testLRU":154,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":542,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":602,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":87,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":388,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":367,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":476,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":369,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":623,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":545,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":142,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":452,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":139,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":191,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":621,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":124,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":413,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":394,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":261,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":193,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":33,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":189,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":536,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":6,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":655,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":121,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":228,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":432,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":601,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":551,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":157,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":188,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":579,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":511,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":145,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":310,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":131},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"72bcbad9-3f30-11e6-8d85-c79ceae0b988","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[1,2,3],"tindex":"72bda53a-3f30-11e6-8d85-29a693cfbb99","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl"},"failures":[4],"tindex":"72bdcc4b-3f30-11e6-8d85-f398702535b3","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8,9],"tindex":"72bdf35c-3f30-11e6-8d85-8f973ebcabcf","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[10],"tindex":"72bdf35d-3f30-11e6-8d85-3faaae7fbb99","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl"},"failures":[11],"tindex":"72be1a6e-3f30-11e6-8d85-e9691ca0c250","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[12,13,14,15,16],"tindex":"72be1a6f-3f30-11e6-8d85-e9ca9ca99d52","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[17],"tindex":"72be4180-3f30-11e6-8d85-1bd0d8abe5e6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[18,19,20],"tindex":"72be6891-3f30-11e6-8d85-bddb05b79c1f","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72be8fa2-3f30-11e6-8d85-fff24594b0e1","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72be8fa3-3f30-11e6-8d85-6befc5c42362","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl"},"failures":[21],"tindex":"72beb6b4-3f30-11e6-8d85-33e919e05e92","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[22],"tindex":"72beb6b5-3f30-11e6-8d85-1379671c5a09","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[23],"tindex":"72beddc6-3f30-11e6-8d85-35ecd194916f","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72bf04d7-3f30-11e6-8d85-91c9dce82042","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[24,25],"tindex":"72bf04d8-3f30-11e6-8d85-5bb7519aa490","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl"},"failures":[26,27,28,29,30,31],"tindex":"72bf2be9-3f30-11e6-8d85-bb3fd46d4653","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72bf2bea-3f30-11e6-8d85-29331ef62485","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72bf52fb-3f30-11e6-8d85-17617af5a807","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"72bf52fc-3f30-11e6-8d85-f9b4477341ff","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"tindex":"72bf7a0d-3f30-11e6-8d85-29dc677ae89d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            if (entry == null) {\n                {\n                    final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n                    link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n                    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72bfa11e-3f30-11e6-8d85-833d46bd76be","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72bfc82f-3f30-11e6-8d85-ebbd6afea1bd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72bfc830-3f30-11e6-8d85-67487dff59f8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl"},"failures":[262],"tindex":"72bfef41-3f30-11e6-8d85-41e2379a2b47","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                {\n                    org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n                    E = null;\n                    boolean = false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[263],"tindex":"72bfef42-3f30-11e6-8d85-5d16e58818ff","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (transformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n                    } \n                    if ((transformers.size()) == 0) {\n                        return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n                    } \n                    final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n                    return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl"},"failures":[27,264,26,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"tindex":"72c01653-3f30-11e6-8d85-8fb3f216bc20","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[308],"tindex":"72c03d64-3f30-11e6-8d85-cfa3ea0da28e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl"},"failures":[309],"tindex":"72c03d65-3f30-11e6-8d85-63355e1df84a","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c03d66-3f30-11e6-8d85-c35ac34b573f","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,1,343,344,345,346,347,348,349,2,350,351,352,3,353,354,355,356,357,358,359,360],"tindex":"72c06477-3f30-11e6-8d85-7db7794e2d15","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c06478-3f30-11e6-8d85-41f241ed692e","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395],"tindex":"72c08b89-3f30-11e6-8d85-7f6a3e062f0f","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c08b8a-3f30-11e6-8d85-137b1a1b9a20","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[396,397,398,399,400,401,402,403],"tindex":"72c08b8b-3f30-11e6-8d85-f7b54db8e1b1","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c0b29c-3f30-11e6-8d85-1d5cf1317cb5","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                {\n                    org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n                    E = null;\n                    boolean = false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c0b29d-3f30-11e6-8d85-1706856fcb25","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[404,405,406,407,408,409],"tindex":"72c0d9ae-3f30-11e6-8d85-91a7fe371881","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425],"tindex":"72c100bf-3f30-11e6-8d85-71c3538b30f1","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c100c0-3f30-11e6-8d85-93ff91ab7759","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                {\n                    if (node != null) {\n                        node.setBlack(dataElement);\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl"},"failures":[426,427],"tindex":"72c100c1-3f30-11e6-8d85-011bccf74639","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl"},"failures":[428,429],"tindex":"72c127d2-3f30-11e6-8d85-f176e2255db1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c127d3-3f30-11e6-8d85-f90b633eb9fa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[430],"tindex":"72c14ee4-3f30-11e6-8d85-c1e9c7d15c4d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[129,136,137,142,144,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,162,163,164,165,170,171,172,188,195,196,198,201,202,205,206,207,208,209,211,221,222,223,239,246,247,249,252,253,256,257,258,259,260,478,479,480,17,430,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522],"tindex":"72c23945-3f30-11e6-8d85-af903990074a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[523,524,525,526,527,528,529,530,531,532,533,534,535],"tindex":"72c26056-3f30-11e6-8d85-47ec04525f66","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c26057-3f30-11e6-8d85-9720105ab8b2","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c28768-3f30-11e6-8d85-dfffaa7e46f7","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (((set.size()) > 0) || ((list.size()) > 0)) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[536],"tindex":"72c28769-3f30-11e6-8d85-f79e77caf648","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c2ae7a-3f30-11e6-8d85-2f941014c13d","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl"},"failures":[537,538],"tindex":"72c2ae7b-3f30-11e6-8d85-afbd21555f50","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"72c2d58c-3f30-11e6-8d85-bb317b9b296c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[539,540,541],"tindex":"72c2d58d-3f30-11e6-8d85-57dcdad23c62","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[542,543,544,545],"tindex":"72c2d58e-3f30-11e6-8d85-f517cd25a305","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[546,128],"tindex":"72c2fc9f-3f30-11e6-8d85-3988461a148f","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[547],"tindex":"72c2fca0-3f30-11e6-8d85-bdcdefcadb88","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"72c3e701-3f30-11e6-8d85-630180ed48bb","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list.isEmpty()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.GrowthList<E>(list);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c40e12-3f30-11e6-8d85-8d623710a22e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c40e13-3f30-11e6-8d85-99c033a3076a","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[548],"tindex":"72c43524-3f30-11e6-8d85-25887f24e9d1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[549,550,546],"tindex":"72c43525-3f30-11e6-8d85-db74198236ab","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c43526-3f30-11e6-8d85-494eb5cee329","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c43527-3f30-11e6-8d85-27465790a114","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c45c38-3f30-11e6-8d85-075f07bd3ed6","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (transformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n                    } \n                    if ((transformers.size()) == 0) {\n                        return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n                    } \n                    final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n                    return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[551],"tindex":"72c45c39-3f30-11e6-8d85-613002027265","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[552],"tindex":"72c4834a-3f30-11e6-8d85-2bda6f7ef143","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1 == list2) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c4834b-3f30-11e6-8d85-3750321b5c67","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[211],"tindex":"72c4aa5c-3f30-11e6-8d85-0b0eb31f96bb","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[553,554],"tindex":"72c4aa5d-3f30-11e6-8d85-b955a8553156","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c4aa5e-3f30-11e6-8d85-ad958d928c7f","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c4d16f-3f30-11e6-8d85-8399f440cd7e","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[555,556],"tindex":"72c4d170-3f30-11e6-8d85-c9028b4db482","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c4d171-3f30-11e6-8d85-6d1cac650f51","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                {\n                    if (node != null) {\n                        node.setBlack(dataElement);\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c4f882-3f30-11e6-8d85-912b81d64062","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c4f883-3f30-11e6-8d85-3d5b7ef70538","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c4f884-3f30-11e6-8d85-3b3a561675bb","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl"},"failures":[34,35,33,32,557,36,37,38,39,40,41,42,43,44,45,46,47,76,77,78,79,80,81,82,83,84,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,67,86,85,89,90,88,87,91,92,93,94,95,96,97,119,120,121,122,123,124,125,126,127,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,110],"tindex":"72c51f95-3f30-11e6-8d85-db507e6a922d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[148,149,150,151],"tindex":"72c51f96-3f30-11e6-8d85-334c0ce38d46","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[558,559,560,561,562,563,564,565,566,567,568,569,570,571],"tindex":"72c51f97-3f30-11e6-8d85-1f0ed3c984e0","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[107,111,572,573,574,575,576,577,578,579,580,581,582],"tindex":"72c546a8-3f30-11e6-8d85-935f97801d76","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c546a9-3f30-11e6-8d85-d196e666ab12","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[583,19,20],"tindex":"72c546aa-3f30-11e6-8d85-77df044e5d92","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617],"tindex":"72c56dbb-3f30-11e6-8d85-150b440e30b7","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c56dbc-3f30-11e6-8d85-b1de6141c6a8","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            if (entry == null) {\n                {\n                    final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n                    link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n                    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c594cd-3f30-11e6-8d85-4d3fa28caa59","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl"},"failures":[618,619,620,621,622,623,624,625,626,627,628,629,630],"tindex":"72c594ce-3f30-11e6-8d85-93d4e953e139","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl"},"failures":[631,632,633,634],"tindex":"72c5bbdf-3f30-11e6-8d85-3d4c734e287b","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c5bbe0-3f30-11e6-8d85-e3bba646f279","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[635,636,637,638],"tindex":"72c5e2f1-3f30-11e6-8d85-dd6859fc1460","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[639,640],"tindex":"72c5e2f2-3f30-11e6-8d85-f14639d7f32d","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[641,428,642,429,478,479,480,17,430,261],"tindex":"72c5e2f3-3f30-11e6-8d85-4d67d63d3641","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl"},"failures":[643,644],"tindex":"72c5e2f4-3f30-11e6-8d85-1107f172365e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c60a05-3f30-11e6-8d85-8990ac05b966","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[645],"tindex":"72c60a06-3f30-11e6-8d85-3f7a00e278dd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[646,647,648,649,650,651,652,653,19,20,654],"tindex":"72c60a07-3f30-11e6-8d85-51dd59f692ff","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[655,656,657,658,659,660,661,662,663,664,665],"tindex":"72c63118-3f30-11e6-8d85-c5fedda95f16","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[666],"tindex":"72c65829-3f30-11e6-8d85-532f633c7b5c","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c67f3a-3f30-11e6-8d85-f1f6a78e9809","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72c67f3b-3f30-11e6-8d85-357520944a3b","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list.isEmpty()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.GrowthList<E>(list);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[667,668],"tindex":"72c67f3c-3f30-11e6-8d85-c7768fb917ef","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467332854446/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}