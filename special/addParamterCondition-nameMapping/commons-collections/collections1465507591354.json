{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":260,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":273,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":3,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":296,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":240,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":314,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":330,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":210,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":284,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":349,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":131,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":127,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":294,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":44,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":69,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":266,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":39,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":62,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":43,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":106,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":208,"org.apache.commons.collections4.CollectionUtilsTest.collect":248,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":56,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":70,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":367,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":344,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":222,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":192,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":322,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":358,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":275,"org.apache.commons.collections4.CollectionUtilsTest.get":317,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":214,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":215,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":128,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":169,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":140,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":113,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":170,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":177,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":202,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":251,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":147,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":7,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":244,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":145,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":116,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":341,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":267,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":308,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":23,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.CollectionUtilsTest.select":312,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":154,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":2,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":124,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":256,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":283,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":24,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":352,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":168,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":47,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":300,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":225,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":224,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":58,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":75,"org.apache.commons.collections4.CollectionUtilsTest.intersection":320,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":218,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":15,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":144,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":290,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":163,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":360,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":89,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":17,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":263,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":155,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":199,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":277,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":111,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":197,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":272,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":126,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":167,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":316,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":139,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":185,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":156,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":216,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":264,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":270,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":249,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":279,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":76,"org.apache.commons.collections4.set.CompositeSetTest.testContains":1,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.list.TreeListTest.testBug35258":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":135,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":348,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":194,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":166,"org.apache.commons.collections4.ListUtilsTest.testSelect":302,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":45,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":37,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":241,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":325,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":243,"org.apache.commons.collections4.CollectionUtilsTest.union":319,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":132,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":190,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":79,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":109,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":230,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":324,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":323,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":223,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":357,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":250,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":182,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":34,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":213,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":6,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":219,"org.apache.commons.collections4.list.TreeListTest.testRemove":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":239,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":233,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":107,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":205,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":150,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":245,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":92,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":71,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":173,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":246,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":28,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":217,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":130,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":274,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":52,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":64,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":363,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":35,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":247,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":114,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":220,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":191,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":329,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":281,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":291,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":97,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":293,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":29,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":55,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":258,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":72,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":280,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":318,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":346,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":268,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":282,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":162,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":13,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":366,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":149,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":257,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":232,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":105,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":66,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":11,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":207,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":112,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":51,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":297,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":27,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":80,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":138,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":285,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":180,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":343,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":289,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":362,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":295,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":65,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":49,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":164,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":242,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":304,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":200,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":276,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":265,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":46,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":151,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":188,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":20,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":234,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":161,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":81,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":307,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":117,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":98,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":254,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":342,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":262,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":9,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":31,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":63,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":193},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"d581eb30-2e88-11e6-8b5c-cfb8905a0afe","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[23],"tindex":"d582ae81-2e88-11e6-8b5c-09a7e65e2818","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[24,25,26],"tindex":"d582d592-2e88-11e6-8b5c-834aa192ded9","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                {\n                    return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[27,28,29],"tindex":"d582fca3-2e88-11e6-8b5c-c7755ba03137","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"d582fca4-2e88-11e6-8b5c-3db9ab8aa315","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < index) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"d58323b5-2e88-11e6-8b5c-b77d26a146f4","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"removeCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"d5834ac6-2e88-11e6-8b5c-8d8d1784a69b","method":{"position":"org.apache.commons.collections4.list.TreeList:709","type":"CtMethodImpl","sourcecode":"private int setOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final int newOffest) {\n    if (newOffest > newOffest) {\n        {\n            if (node == null) {\n                return 0;\n            } \n            final int int = getOffset(node);\n            node.int = newOffest;\n            return oldOffset;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"newOffest","newCapacity":"newOffest"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"d58371d7-2e88-11e6-8b5c-d950b8ddf642","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[134,135],"tindex":"d58398e8-2e88-11e6-8b5c-695450be5bdf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[136,137,138],"tindex":"d58398e9-2e88-11e6-8b5c-e9da5bf44850","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[139,140],"tindex":"d583bffa-2e88-11e6-8b5c-1bff33ac1eaa","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[141],"tindex":"d583e70b-2e88-11e6-8b5c-dd66f2f78644","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                {\n                    return getList().lastIndexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[142,143],"tindex":"d583e70c-2e88-11e6-8b5c-39f8c6aff55e","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if (b.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d5840e1d-2e88-11e6-8b5c-b9e892d4874c","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[],"tindex":"d584352e-2e88-11e6-8b5c-6b056e577aa3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,134,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,135,230,231,232,233,234,235,236,237,238],"tindex":"d584352f-2e88-11e6-8b5c-454133097ae8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[239,240,241,242,243],"tindex":"d5845c40-2e88-11e6-8b5c-230eafa0d951","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"d5848351-2e88-11e6-8b5c-5ddbf3fa6389","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[244],"tindex":"d584aa62-2e88-11e6-8b5c-273bc874ed1f","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[],"tindex":"d584aa63-2e88-11e6-8b5c-0f58b2925769","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtBinaryOperatorImpl","sourcecode":"cur == cursor"},"failures":[],"tindex":"d584d174-2e88-11e6-8b5c-ed5bf1d41378","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == cursor) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor","cur":"cursor"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"d584f885-2e88-11e6-8b5c-f30f9fffca74","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[245,246],"tindex":"d584f886-2e88-11e6-8b5c-414804bee74e","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[],"tindex":"d5851f97-2e88-11e6-8b5c-cb9739aaad87","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < nCopies) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"nCopies","index":"nCopies"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"d5851f98-2e88-11e6-8b5c-d37de26afeb2","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[247],"tindex":"d5851f99-2e88-11e6-8b5c-496832878824","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[248],"tindex":"d58546aa-2e88-11e6-8b5c-8f5bdabf0db3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"d58546ab-2e88-11e6-8b5c-434b88eebfa2","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode >= hashCode) {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode","index":"hashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"d5856dbc-2e88-11e6-8b5c-e76d4ebee424","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                {\n                    return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[249,250],"tindex":"d58594cd-2e88-11e6-8b5c-4da68ddf8958","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"get"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"d58594ce-2e88-11e6-8b5c-f51f19aefd2b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[277,278,279,280,281,282],"tindex":"d585bbdf-2e88-11e6-8b5c-d53bdb4d7eb1","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 0) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"d585bbe0-2e88-11e6-8b5c-bd40474305f3","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[283],"tindex":"d585bbe1-2e88-11e6-8b5c-394afef6b2fa","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[14,15,284,16,17,18,19,285,20,21,22,286,287,288],"tindex":"d585e2f2-2e88-11e6-8b5c-6784bac6dedb","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (null == obj) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[289,290],"tindex":"d585e2f3-2e88-11e6-8b5c-29b60acef116","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtFieldReadImpl","sourcecode":"scanUntilRemovable"},"failures":[],"tindex":"d585e2f4-2e88-11e6-8b5c-bbac9cc85edd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"scanUntilRemovable":"forceInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[291,292],"tindex":"d5860a05-2e88-11e6-8b5c-4d224e44ddae","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"d5860a06-2e88-11e6-8b5c-45f6ccdd230b","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[293,294],"tindex":"d5860a07-2e88-11e6-8b5c-adcbfe453deb","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[295,296],"tindex":"d5863118-2e88-11e6-8b5c-85142300a013","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[],"tindex":"d5863119-2e88-11e6-8b5c-e72cf643729f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[297],"tindex":"d586311a-2e88-11e6-8b5c-9b8f66d75d7e","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[],"tindex":"d586582b-2e88-11e6-8b5c-07b700b3e95e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl","sourcecode":"keys == null"},"failures":[298],"tindex":"d586582c-2e88-11e6-8b5c-5549979f6d6f","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"d586582d-2e88-11e6-8b5c-15145c9c921c","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,180,232,353,354,355,356,357],"tindex":"d586582e-2e88-11e6-8b5c-49f1f62591b5","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"d5867f3f-2e88-11e6-8b5c-e309567264ec","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (!(obj == null ? obj == null : obj1.equals(obj2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"obj","obj1":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[358],"tindex":"d5867f40-2e88-11e6-8b5c-7bd6441d84f9","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[359,360],"tindex":"d586a651-2e88-11e6-8b5c-ff2e431ae8e4","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[],"tindex":"d586a652-2e88-11e6-8b5c-3d91481031e8","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                {\n                    return getList().lastIndexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[361,362,363,364,365],"tindex":"d586a653-2e88-11e6-8b5c-f3b97a27afe1","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d586a654-2e88-11e6-8b5c-65b4437601ee","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[366],"tindex":"d586cd65-2e88-11e6-8b5c-87d72459cf7f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[120,121,125,127],"tindex":"d586cd66-2e88-11e6-8b5c-9b737fe6405b","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe < (indexRelativeToMe / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"indexRelativeToMe","index":"indexRelativeToMe"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[367],"tindex":"d586f477-2e88-11e6-8b5c-cd726dc27612","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d586f478-2e88-11e6-8b5c-5f0468fb4a94","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":57,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}