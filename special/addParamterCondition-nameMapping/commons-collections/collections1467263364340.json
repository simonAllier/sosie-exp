{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":370,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":631,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":116,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":531,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":545,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":86,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":269,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":669,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":422,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":462,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":135,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":121,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":108,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":109,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":446,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":640,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":149,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":142,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":593,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":37,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":49,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":646,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":601,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":27,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":143,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":5,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":368,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":306,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":609,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":286,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":635,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":581,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":99,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":239,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":258,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":578,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":292,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":668,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":353,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":46,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":315,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":428,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":136,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":212,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":656,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":270,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":486,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":107,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":449,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":650,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":32,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":473,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":402,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":277,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":641,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":279,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":595,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":237,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":516,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":349,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":365,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":632,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":599,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":226,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":263,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":265,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":420,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":361,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":431,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":675,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":168,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":648,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":232,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":397,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":395,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":158,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":309,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":103,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":145,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":671,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":6,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":443,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":426,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":434,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":376,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":377,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":519,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":375,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":385,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":618,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":576,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":102,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":261,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":663,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":421,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":655,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":645,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":403,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":515,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":651,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":122,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":4,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":461,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":666,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":373,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":372,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":238,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":211,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":639,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":17,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":374,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":83,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":414,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":413,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":412,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":147,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":248,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":176,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":184,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":391,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":615,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalFullCollectionExists":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":411,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":230,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":479,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":92,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":154,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":88,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":659,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":673,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":344,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":59,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":58,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":57,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":327,"org.apache.commons.collections4.map.LRUMapTest.testClone":305,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":178,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":335,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":432,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":477,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":506,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":474,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":475,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":285,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":19,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":565,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":101,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":205,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":380,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":575,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":567,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":498,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":529,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":549,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":594,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":643,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":460,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":562,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":302,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":628,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":118,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":151,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":612,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":195,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":67,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":637,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":487,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":495,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":326,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":458,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":241,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":547,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":325,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":324,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":323,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":378,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":522,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":18,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":585,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":667,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":81,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":182,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":346,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":538,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":625,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":174,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":144,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":251,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":177,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":289,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":290,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":544,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":451,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":390,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":521,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":546,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":117,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":146,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":223,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":548,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":533,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":425,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":507,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":288,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":301,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":463,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":180,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":219,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":11,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":465,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":90,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":471,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":63,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":130,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":40,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":482,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":80,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":271,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":153,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":197,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":163,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":311,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":185,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":569,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":520,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":339,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":340,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":674,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":341,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":550,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":542,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":198,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":78,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":112,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":155,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":543,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":297,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":298,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":672,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":600,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":564,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":209,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":384,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":328,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":455,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":259,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":389,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":424,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":332,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":7,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":161,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":24,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":20,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":30,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":579,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":333,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":156,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":559,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":427,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":355,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":570,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":354,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":165,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":363,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":356,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":634,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":206,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":190,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":280,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":93,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":433,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":582,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":202,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":523,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":13,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":224,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":556,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":213,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":555,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":502,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":574,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":364,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":210,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":440,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":524,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":512,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":480,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":623,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":293,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":295,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":577,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":614,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":100,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":264,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":468,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":510,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":591,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":604,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":617,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":492,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":490,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":584,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":514,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":124,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":568,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":605,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":247,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":418,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":71,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":457,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":416,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":491,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":608,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":607,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":606,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":25,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":613,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":532,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":664,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":652,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":633,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":442,"org.apache.commons.collections4.CollectionUtilsTest.find":192,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":16,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":616,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":134,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":308,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":256,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":337,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":338,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":216,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":336,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":525,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":21,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":470,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":653,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":152,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":430,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":459,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":665,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":70,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":513,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":638,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":331,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":166,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":317,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":586,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":500,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":558,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":387,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":35,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":444,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":330,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":72,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":272,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":382,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":472,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":12,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":419,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":229,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":454,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":464,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":262,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":39,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":38,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":596,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":157,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":535,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":303,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":429,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":636,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":45,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":114,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":320,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":321,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":621,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":193,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":8,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":484,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":503,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":603,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":404,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":439,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":423,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":319,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":304,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":120,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":172,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalEmptyCollectionExists":243,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":316},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,1,2,3,4,5],"tindex":"cfc1a824-3e80-11e6-a152-05aa8da717f7","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"cfc1f645-3e80-11e6-a152-15cd95de5d4f","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[6,7],"tindex":"cfc21d56-3e80-11e6-a152-07a32ef5e6ec","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cfc24467-3e80-11e6-a152-3b81337ff624","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cfc24468-3e80-11e6-a152-67f61b88d6da","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"cfc26b79-3e80-11e6-a152-b16f1d5cda84","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"cfc26b7a-3e80-11e6-a152-2912b33bde86","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"cfc26b7b-3e80-11e6-a152-2b8d15af4072","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"cfc2928c-3e80-11e6-a152-59f90abcb0c5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[85],"tindex":"cfc2928d-3e80-11e6-a152-f76e2d6186d5","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[86,87,88],"tindex":"cfc2928e-3e80-11e6-a152-114a0950a3e0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"cfc2b99f-3e80-11e6-a152-912f97e74bbe","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (null == object) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[103,104,105,106],"tindex":"cfc2b9a0-3e80-11e6-a152-a938abab85e8","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[107,108,109,110,111],"tindex":"cfc2e0b1-3e80-11e6-a152-2352c59a4d93","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cfc2e0b2-3e80-11e6-a152-2fa12529aa5f","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[112],"tindex":"cfc2e0b3-3e80-11e6-a152-071f59b239b1","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[113],"tindex":"cfc2e0b4-3e80-11e6-a152-796b8a12a9b6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"cfc307c5-3e80-11e6-a152-af27681c3c91","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[114,115,116,117,118],"tindex":"cfc307c6-3e80-11e6-a152-25de0673d5ea","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[119,120,121,122,123],"tindex":"cfc307c7-3e80-11e6-a152-25c70bba5ea9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    V V = null;\n                    if (decorated().containsKey(key)) {\n                        result = decorated().remove(key);\n                        java.util.List<K>.remove(key);\n                    } \n                    return result;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[124,125,126,127,128,129,130,131,132,133,134],"tindex":"cfc307c8-3e80-11e6-a152-7fe32744d953","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"cfc307c9-3e80-11e6-a152-792da5639398","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[135,136,137,138,139,140,141,142],"tindex":"cfc32eda-3e80-11e6-a152-9969a6710f27","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"cfc32edb-3e80-11e6-a152-815d2ff0756b","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"cfc32edc-3e80-11e6-a152-a911de3a4704","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[34,143,144,36,145,146,147,37,148,149,38,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,131,176,177,178,179,180,181,182],"tindex":"cfc32edd-3e80-11e6-a152-5d6e7bb4c27b","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[183,184],"tindex":"cfc32ede-3e80-11e6-a152-515127eeae29","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[185],"tindex":"cfc355ef-3e80-11e6-a152-d7a35ee8b7b6","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[186,187],"tindex":"cfc355f0-3e80-11e6-a152-4390a4429cf3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[188,189],"tindex":"cfc355f1-3e80-11e6-a152-d78d88d9a48b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[190,191],"tindex":"cfc355f2-3e80-11e6-a152-935f0d883ec6","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[192],"tindex":"cfc355f3-3e80-11e6-a152-ef9bfc49d95e","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"cfc37d04-3e80-11e6-a152-e7332e5c97c9","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"cfc37d05-3e80-11e6-a152-d17ec8b4f1b7","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj instanceof org.w3c.dom.Node) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cfc37d06-3e80-11e6-a152-1778b8bb1d66","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"cfc37d07-3e80-11e6-a152-6fd7ad2bb920","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[193],"tindex":"cfc37d08-3e80-11e6-a152-6f5696fa183a","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[194,195,196],"tindex":"cfc3a419-3e80-11e6-a152-73ba3ba8a22c","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[197,198,199,200],"tindex":"cfc3a41a-3e80-11e6-a152-b72337a18572","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[201,202],"tindex":"cfc3a41b-3e80-11e6-a152-0347bed9496f","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[203],"tindex":"cfc3a41c-3e80-11e6-a152-f9102a30703a","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[204],"tindex":"cfc3a41d-3e80-11e6-a152-13b28c30e942","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[205],"tindex":"cfc3a41e-3e80-11e6-a152-730c2d677dee","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[39,206,207,41,208,209,210,42,211,212,43,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,132,239,240,241,242,243,244,245],"tindex":"cfc3cb2f-3e80-11e6-a152-a1c1ae1c746f","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[246],"tindex":"cfc3cb30-3e80-11e6-a152-159c2b77cf02","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"cfc3cb31-3e80-11e6-a152-47512c3248f3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cfc3cb32-3e80-11e6-a152-d1ade8d40eef","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[247],"tindex":"cfc3f243-3e80-11e6-a152-bb2beecb9e20","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[248],"tindex":"cfc3f244-3e80-11e6-a152-cf5b8aab8acc","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[249,250,251,252,253,254],"tindex":"cfc3f245-3e80-11e6-a152-09ad53dc8cf3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[255],"tindex":"cfc3f246-3e80-11e6-a152-510f82483136","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"cfc3f247-3e80-11e6-a152-05597457d673","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cfc3f248-3e80-11e6-a152-c532c8846df0","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[256],"tindex":"cfc41959-3e80-11e6-a152-a74bbc461d3c","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[115],"tindex":"cfc4195a-3e80-11e6-a152-61eac260d63c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"cfc4195b-3e80-11e6-a152-a93229b2dfc5","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"cfc4195c-3e80-11e6-a152-17982d6dbb87","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[257,258,259,147,210,260,261],"tindex":"cfc4406d-3e80-11e6-a152-ff5ab8a21bf4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"cfc4406e-3e80-11e6-a152-a9b95f459609","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"cfc4406f-3e80-11e6-a152-89633dd26ec4","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (null == object) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"cfc44070-3e80-11e6-a152-19fdc066a251","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                {\n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                        final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                        if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                            org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                            org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                            return true;\n                        } \n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[262],"tindex":"cfc46781-3e80-11e6-a152-f5cf61ad1d6b","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((a == null) || (a == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[85],"tindex":"cfc46782-3e80-11e6-a152-f991ec97e942","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[263],"tindex":"cfc46783-3e80-11e6-a152-fbeb03110119","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cfc46784-3e80-11e6-a152-4ba9d98d8dfd","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[264],"tindex":"cfc46785-3e80-11e6-a152-9d550c486d10","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[202],"tindex":"cfc48e96-3e80-11e6-a152-5506f3b2300a","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415],"tindex":"cfc48e97-3e80-11e6-a152-1f32ac52b2a1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"cfc48e98-3e80-11e6-a152-1d779cdc8062","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                {\n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                        final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                        if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                            org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                            org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                            return true;\n                        } \n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[416,417,418,419,420,263],"tindex":"cfc4b5a9-3e80-11e6-a152-83d69eff2c07","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"tindex":"cfc4b5aa-3e80-11e6-a152-19477ed3e142","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"cfc4b5ab-3e80-11e6-a152-b7055788cfa2","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[264,440],"tindex":"cfc4b5ac-3e80-11e6-a152-07ac84e64453","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[441,442,443,90,91,92,94,444,97,445,446,447,448,449,450,451,101,452,453,454,69,455,456,457,458,70,459],"tindex":"cfc4b5ad-3e80-11e6-a152-776d6155ee5c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472],"tindex":"cfc4dcbe-3e80-11e6-a152-833d716da42e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"cfc4dcbf-3e80-11e6-a152-f58d170b8de7","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[473,474,475,476,477,478,479,480,481],"tindex":"cfc551f0-3e80-11e6-a152-7f18cbe119ec","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[112,482],"tindex":"cfc551f1-3e80-11e6-a152-1587f92835c8","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[483,484,485,486,487],"tindex":"cfc551f2-3e80-11e6-a152-9d2a8d7da65d","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[103,488,489,490,491,492,493,494,495,104,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,105,106,522],"tindex":"cfc551f3-3e80-11e6-a152-4fb8b1ad2c37","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"cfc57904-3e80-11e6-a152-5f705e995da0","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"cfc57905-3e80-11e6-a152-57ccc8bdbd5b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"cfc57906-3e80-11e6-a152-4d062ddccf75","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    V V = null;\n                    if (decorated().containsKey(key)) {\n                        result = decorated().remove(key);\n                        java.util.List<K>.remove(key);\n                    } \n                    return result;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[523],"tindex":"cfc57907-3e80-11e6-a152-b73fcc859bd4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cfc57908-3e80-11e6-a152-d9b9ab441d64","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"cfc5a019-3e80-11e6-a152-1d1cbdfff3a9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj instanceof org.w3c.dom.Node) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"cfc5a01a-3e80-11e6-a152-bb68dda2dd23","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[524,525,526,527,528,529,530,531,424,532,533,534,535,536,425,426,537,427,428,538,429,539,540,430,541,542,543,544,545,546,547,548,549,550,432,551,552,553,554,555,556,557,433,434,558,435,436,559,437,560,561,438,562,563,564,565,566,567],"tindex":"cfc5a01b-3e80-11e6-a152-bb297cf4d6a5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cfc5a01c-3e80-11e6-a152-99692f6ea49e","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[568],"tindex":"cfc5a01d-3e80-11e6-a152-edcdaeaa1c6f","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[569],"tindex":"cfc5a01e-3e80-11e6-a152-27d5c5f8ccbb","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[570,571,572,573,574,575,576,577],"tindex":"cfc5c72f-3e80-11e6-a152-936d250a15d9","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,249,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673],"tindex":"cfc5c730-3e80-11e6-a152-1ddf377ac471","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"cfc5c731-3e80-11e6-a152-ed4ee7785cbc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cfc5c732-3e80-11e6-a152-7d71c25f7493","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[674],"tindex":"cfc5c733-3e80-11e6-a152-4f92b294febd","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"cfc5ee44-3e80-11e6-a152-a5483e0d019d","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"cfc5ee45-3e80-11e6-a152-3bdee25569b5","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[675,86,318,352,88],"tindex":"cfc5ee46-3e80-11e6-a152-7717dde0cd7a","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"cfc5ee47-3e80-11e6-a152-03997f24abc3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259142598/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}