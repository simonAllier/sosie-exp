{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":660,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":738,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":20,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":661,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":931,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":369,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":621,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":604,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":263,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":494,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":137,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":897,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":912,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":503,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":132,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":166,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":748,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":508,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":180,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":220,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":143,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":776,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":662,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":779,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":570,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":864,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":173,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":958,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":284,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":972,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":773,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":746,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":769,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":382,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":767,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":332,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":269,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":422,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":402,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":766,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":528,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":646,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":876,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":140,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":704,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":201,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":324,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":888,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":845,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":555,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":562,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":903,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":753,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":954,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":518,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalFullCollectionExists":917,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":62,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":801,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":600,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":932,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":834,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":721,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":636,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":315,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":229,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":639,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":541,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":739,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":867,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":321,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":778,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":35,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":318,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":271,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":965,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":32,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":836,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":874,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":66,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":655,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":23,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":431,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":457,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":613,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":277,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":278,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":430,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":905,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":860,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":183,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":243,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":596,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":305,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":547,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":238,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":811,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":763,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":820,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":360,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":581,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":127,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":583,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":938,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":484,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":1,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":482,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":923,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":368,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":378,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":644,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":398,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":516,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":300,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":434,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":39,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":789,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":752,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":268,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":848,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":407,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":492,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":49,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":373,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":506,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":895,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":968,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":523,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":579,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":702,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":148,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":549,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":37,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":392,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":921,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":964,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":582,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":777,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":245,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":771,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":399,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":688,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":815,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":735,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":887,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":312,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":786,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":426,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":784,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":913,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":926,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":256,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":158,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":737,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":863,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":9,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":830,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":859,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":425,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":362,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":380,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":340,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":701,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":85,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":47,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":586,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":956,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":316,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":299,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":511,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":875,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":28,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":854,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":403,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":742,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":925,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":802,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":364,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":432,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":341,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":829,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":850,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":693,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":946,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":962,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":197,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":501,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":155,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":798,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":571,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":807,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":805,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":98,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":247,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":452,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":483,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":911,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":454,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":453,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":539,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":117,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":244,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":690,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":535,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":435,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":953,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":846,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":858,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":584,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":219,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":224,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":575,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":27,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":215,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":428,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":436,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":479,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":8,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":641,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":969,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":731,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":868,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":361,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":545,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":593,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":804,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":154,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":151,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":10,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":423,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":500,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":521,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":808,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":855,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":456,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":281,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":530,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":205,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":485,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":471,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":540,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":554,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":745,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":599,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":601,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":344,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":221,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":775,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":873,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":242,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":476,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":477,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":475,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":627,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":317,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":348,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":186,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":569,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":306,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":347,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":685,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":908,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":5,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":236,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":295,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":294,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":527,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":338,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":683,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":684,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":515,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":930,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":410,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":424,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":732,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":189,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":356,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":885,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":270,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":788,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":129,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":529,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":826,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":375,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":167,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":335,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":861,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":602,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":533,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":719,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":393,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":783,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":892,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":890,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":467,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":465,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":870,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":849,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":498,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":88,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":55,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":687,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":963,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":207,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":865,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":790,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":825,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":94,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":2,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":193,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":308,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":91,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":884,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":883,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":882,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":814,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":669,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":251,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":671,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":670,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":43,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":7,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":837,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":144,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":427,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":705,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":619,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":831,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":18,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":499,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":966,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":828,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":448,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":449,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":450,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":152,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":564,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":597,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":218,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":591,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":841,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":353,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":266,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":833,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":231,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":543,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":744,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":389,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":413,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":188,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":53,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":730,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":708,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":781,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":70,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":177,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":291,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":406,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":225,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":264,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":929,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":749,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":821,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":195,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":610,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":709,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":817,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":957,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":853,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":267,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":813,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":637,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":3,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":977,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":755,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":949,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":561,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":840,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":914,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":751,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":303,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":922,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":118,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":928,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":255,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":489,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":706,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":645,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":22,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":519,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":87,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":588,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":565,"org.apache.commons.collections4.CollectionUtilsTest.transform2":797,"org.apache.commons.collections4.CollectionUtilsTest.transform1":796,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":812,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":474,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":774,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":472,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":634,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":843,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":806,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":170,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalEmptyCollectionExists":916,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":470,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":509,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":168,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":927,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":4,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":384,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":758,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":759,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":757,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":414,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":495,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":185,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":363,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":795,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":115,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":227,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":886,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":832,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":259,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":971,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":86,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":199,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":940,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":116,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":960,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":728,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":668,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":548,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":736,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":280,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":405,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":961,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":595,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":664,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":544,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":852,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":734,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":894,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":792,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":933,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":442,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":391,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":514,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":121,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":970,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":114,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":906,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":691,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":34,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":385,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":816,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":945,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":743,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":371,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":878,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":103,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":871,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":26,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":30,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":130,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":101,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":419,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":724,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":290,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":451,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":560,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":169,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":513,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":374,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":756,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":377,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":891,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":163,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":615,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":750,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":720,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":67,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":681,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":682,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":274,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":563,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":747,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":433,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":827,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":847,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":862,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":537,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":606,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":446,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":700,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":128,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":459,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":762,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":902,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":761,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":760,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":174,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":487,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":950,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":314,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":93,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":228,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":441,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":907,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":711,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":667,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":665,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":13,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":666,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":346,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":918,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":248,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":386,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":182,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":542,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":89,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":302,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":703,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":653,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":936,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":872,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":64,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":214,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":462,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":463,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":464,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":818,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":285,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":559,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":934,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":935,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":835,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":556,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":587,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":959,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":603,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":677,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":444,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":580,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":678,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":455,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":99,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":676,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":975,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":573,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":365,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":524,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":216,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":605,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":948,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":699,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":310,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":370,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":673,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":674,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":672,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":698,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":856,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":729,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":233,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":896,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":412,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":765,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":122,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":478,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":191,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":208,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":939,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":156,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":651,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":659,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":658,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":822,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":657,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":638,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":899,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":63,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":617,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":179,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":178,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":276,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":275,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":136,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":553,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":538,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":149,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":800,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":107,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":164,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":517,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":741,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":309,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":714,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":496,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":712,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":898,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":328,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":710,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":780,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":252,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":439,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":126,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":819,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":809,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":590,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":978,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":640,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":249,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":947,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":109,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":246,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMakeMap":900,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":265,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":323,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":851,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":260,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":54,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":838,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":909,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":283,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":507,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":574,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":292,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":616,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":663,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":469,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":924,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":768,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":844,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":123,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":102,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":429,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":550,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":497,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":951,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":131,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":235,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":213,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":400,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":534,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":36,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":33,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":910,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":345,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":349,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":592,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":520,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":120,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":791,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":240,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":576,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":976,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":770,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":12,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":297,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":376,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":585,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":31,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":799,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":869,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":192,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":108,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":366,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":418,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":611,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":138,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":707,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":134,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":383,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":557,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":522,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":717,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":44,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":823,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":647,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":944,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":952,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":226,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":327,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":415,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":337,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":320,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":722,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":59,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":14,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":161,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":715,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":343,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":785,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":866,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":782,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":803,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":217,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":919,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":696,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":839,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":694,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":232,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":16,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":941,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":628,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":943,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":97,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":942,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":181,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":147,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":404,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":679,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":510,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":625,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":157,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":686,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":491,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":695,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":141,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":272,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":438,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":11,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":787,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":877,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":223,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":608,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":764,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":740,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":21,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":893,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":955,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":920,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":319,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":194,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":258,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":652,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":447,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":204,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":622,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":857,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":629,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":325,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":879,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":150,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":880,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":881,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":979,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":904,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":974,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":754,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":95,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":206,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":367,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":824,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":889,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":357,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":172,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":635,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":234,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":326,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSimpleSerialization":915,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":772,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":133,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":568,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":675,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":689,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":112,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":142,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":937,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":536,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":901,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":842,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":973,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":289,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":567,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":967,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":794,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":793,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":609,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":512,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":113,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":481,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":552,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":624,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":241,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":46,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":558,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":810,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":304},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"d1c37a15-3e85-11e6-8a49-4f296c8cb5ca","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return decorated().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[18,19,20,21,22],"tindex":"d1c3ef46-3e85-11e6-8a49-05bfd60ae3c6","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:214","type":"CtBinaryOperatorImpl","sourcecode":"get instanceof java.util.Map"},"failures":[23,24],"tindex":"d1c3ef47-3e85-11e6-8a49-f19aff813df1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d1c3ef48-3e85-11e6-8a49-4558f9bf80cb","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"d1c41659-3e85-11e6-8a49-35ea9b212f17","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[56,57,58],"tindex":"d1c4165a-3e85-11e6-8a49-71bc16fa983a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"d1c4165b-3e85-11e6-8a49-978f141ad12a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[59],"tindex":"d1c4165c-3e85-11e6-8a49-57298e564ba2","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"d1c43d6d-3e85-11e6-8a49-4753274822eb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"d1c43d6e-3e85-11e6-8a49-c514659730fd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[75],"tindex":"d1c43d6f-3e85-11e6-8a49-19bd87982bca","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[76,77,78,79,80,81,82,83,84],"tindex":"d1c46480-3e85-11e6-8a49-8b3d829232cc","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"d1c46481-3e85-11e6-8a49-ff8cc0dcdfa9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[85],"tindex":"d1c48b92-3e85-11e6-8a49-9982293a3fec","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d1c48b93-3e85-11e6-8a49-a9b53ae7f70c","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d1c48b94-3e85-11e6-8a49-51c4c6c50632","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,39,107,108],"tindex":"d1c4b2a5-3e85-11e6-8a49-09ebe8319eb6","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[109],"tindex":"d1c4b2a6-3e85-11e6-8a49-f391f52bfb0e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d1c4b2a7-3e85-11e6-8a49-13cd72147b96","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d1c4b2a8-3e85-11e6-8a49-6f8c1c7f93aa","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"d1c4d9b9-3e85-11e6-8a49-4f4452c89183","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d1c4d9ba-3e85-11e6-8a49-35601ffc359d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return decorated().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"d1c4d9bb-3e85-11e6-8a49-8b1b3f39520d","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set1 == set1) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set1","set1":"set1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[122],"tindex":"d1c4d9bc-3e85-11e6-8a49-0b95a7314451","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"d1c500cd-3e85-11e6-8a49-fbe1fd74d7b0","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d1c500ce-3e85-11e6-8a49-9d896d3c88fb","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"d1c500cf-3e85-11e6-8a49-f73803a92ff8","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[123,124],"tindex":"d1c500d0-3e85-11e6-8a49-530c7432136b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[125],"tindex":"d1c527e1-3e85-11e6-8a49-b55460289de6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"d1c527e2-3e85-11e6-8a49-ddcd5885ee83","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"tindex":"d1c527e3-3e85-11e6-8a49-31a6f3b95b1c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"d1c527e4-3e85-11e6-8a49-f3d02cf04209","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[364,365],"tindex":"d1c54ef5-3e85-11e6-8a49-b3d17b700080","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d1c54ef6-3e85-11e6-8a49-afdabaee0744","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map != null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"d1c54ef7-3e85-11e6-8a49-9d860c46dcca","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtBinaryOperatorImpl","sourcecode":"(y.getRight(dataElement)) != null"},"failures":[66,68,366,367,368,369,370,371,372,373],"tindex":"d1c54ef8-3e85-11e6-8a49-29f84b9080e9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((x.getRight(dataElement)) != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"x","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[374],"tindex":"d1c57609-3e85-11e6-8a49-415aac406a0a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d1c5760a-3e85-11e6-8a49-ddb9eb8efbc3","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394],"tindex":"d1c5760b-3e85-11e6-8a49-9bcfcaa10dc6","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"d1c5760c-3e85-11e6-8a49-e9c8f759960f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"d1c59d1d-3e85-11e6-8a49-031cdf0da576","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"d1c59d1e-3e85-11e6-8a49-01a43835d77c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[395,396,397,398,399],"tindex":"d1c59d1f-3e85-11e6-8a49-03fbe020fb2f","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[400],"tindex":"d1c59d20-3e85-11e6-8a49-97d38d4105bd","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,90,427,428,429,430,431,432,35,36,52,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"d1c59d21-3e85-11e6-8a49-f782e3cb388c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,174,521,177,14,522,17,523,524,525,526,527,528,529,530,203,204,206,208,531,210,532,533,534,535,536,537,538,539,540,86,87,541,542,543,377,544,545,546,547,88,89,548,549,550,381,551,552,553,554,555,556,395,557,558,559,560,561,562,396,563,564,565,566,567,91,96,97,100,102,105,106,568,569,570,571,572,573,574,575,576,577,397,578,40,41,43,45,579,580,581,582,583,584,585,586,587,588,398,589,590,591,592,593,594,107,108,595,596,597,391,598,599,600,601,602,603,399,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,292,293,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"d1c5c332-3e85-11e6-8a49-f9cd01f4bd73","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[687],"tindex":"d1c5c333-3e85-11e6-8a49-3d71e946cd0b","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map != null) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"d1c5c334-3e85-11e6-8a49-abdf1b05454c","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[688,399],"tindex":"d1c5c335-3e85-11e6-8a49-d32e1b240816","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[689],"tindex":"d1c5ea46-3e85-11e6-8a49-c390abd2bb83","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[25],"tindex":"d1c5ea47-3e85-11e6-8a49-23399e0c761a","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[690],"tindex":"d1c5ea48-3e85-11e6-8a49-5d80ba7c821a","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"d1c5ea49-3e85-11e6-8a49-db589abbbf0c","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d1c5ea4a-3e85-11e6-8a49-4d55b29e2aaa","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729],"tindex":"d1c5ea4b-3e85-11e6-8a49-6bca397110e0","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,60,61,748,62,63,64,749,750,65,751,66,752,753,67,68,754,755,756,757,758,759,760,761,762,366,763,764,367,368,765,766,369,370,371,372,373,767,768,769,770,771,772,773,774,235,775,232,233,234,776,69,70,777,71,72,73,236,778,74,779,780,781,782,783,465,466,467,468,784,785,786,787,788,789,790,791,237,238,792],"tindex":"d1c6115c-3e85-11e6-8a49-c747864bfb0a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[793,794,795],"tindex":"d1c6115d-3e85-11e6-8a49-8501af293856","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d1c6115e-3e85-11e6-8a49-bdc084ecb1ae","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[212,213],"tindex":"d1c6115f-3e85-11e6-8a49-5968d73cdf0d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"d1c61160-3e85-11e6-8a49-a7e7af2e98c8","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[796,797],"tindex":"d1c61161-3e85-11e6-8a49-8f733f592176","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d1c63872-3e85-11e6-8a49-f50cff528780","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"d1c63873-3e85-11e6-8a49-bb27e9f508dc","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[798,109],"tindex":"d1c63874-3e85-11e6-8a49-598d6d08f499","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key5"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d1c63875-3e85-11e6-8a49-41ef0ced2429","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d1c63876-3e85-11e6-8a49-8be11271d4df","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[799],"tindex":"d1c65f87-3e85-11e6-8a49-11a86bb98919","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[800,7,801],"tindex":"d1c65f88-3e85-11e6-8a49-4f036ce467f2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[799],"tindex":"d1c65f89-3e85-11e6-8a49-59aa331873fc","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[802,803],"tindex":"d1c65f8a-3e85-11e6-8a49-9bb7aa669c5a","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"d1c65f8b-3e85-11e6-8a49-995cbca7dda2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[804,805,806,807,808,809,810,811,812,813],"tindex":"d1c65f8c-3e85-11e6-8a49-19793114180b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[178,179,193],"tindex":"d1c6869d-3e85-11e6-8a49-57332dedb434","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d1c6869e-3e85-11e6-8a49-39998e16ec4e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"d1c6869f-3e85-11e6-8a49-e70eab2c6927","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d1c686a0-3e85-11e6-8a49-8b0ee85548f0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d1c686a1-3e85-11e6-8a49-dffafb5e0f5e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d1c686a2-3e85-11e6-8a49-8f1cfe4f0eb5","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[814,815],"tindex":"d1c686a3-3e85-11e6-8a49-115b45fa2b60","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[733,730,731,732,740,741,742,743,734,735,736,737,738,739,744,745,746,747,60,61,748,62,63,64,749,750,65,751,66,752,753,67,68,754,755,756,757,758,759,760,761,762,366,763,764,367,368,765,766,369,370,371,372,373,768,767,772,769,770,771,232,233,234,773,774,235,775,776,69,70,777,71,72,73,236,778,74,779,780,781,782,783,465,466,467,468,784,785,786,787,788,789,790,791,237,238,792],"tindex":"d1c6adb4-3e85-11e6-8a49-f3d7bbade76c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[816,817,818,819],"tindex":"d1c6adb5-3e85-11e6-8a49-b7015fb0fe92","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[820,821,822,443,444,445,446,823,824,825,447],"tindex":"d1c6adb6-3e85-11e6-8a49-7559fedff39e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[258,262],"tindex":"d1c6adb7-3e85-11e6-8a49-b13658eaeb81","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index > 0) {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[826,827,828,829,830,831,832,833,834,835,836,837,838,569,568,839,840,841,580,842,843,844,591,590,845,846,847,848,849,850,851,852],"tindex":"d1c6adb8-3e85-11e6-8a49-db4da0154ff2","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d1c6d4c9-3e85-11e6-8a49-fde3f37d7218","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"d1c6d4ca-3e85-11e6-8a49-732349cfe717","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898],"tindex":"d1c6d4cb-3e85-11e6-8a49-9d28aaeff3f1","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[899],"tindex":"d1c6d4cc-3e85-11e6-8a49-a18be103696a","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[66,68,366,367,368,369,370,371,372,373],"tindex":"d1c6d4cd-3e85-11e6-8a49-1725787ef83d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[900,901,902,903,904,905,348,906,907,908,909,910,911,912,913,914,915,916,917],"tindex":"d1c6d4ce-3e85-11e6-8a49-8b2b6f147033","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[918,919,920,921,922,923,924,925,926,927,928],"tindex":"d1c6fbdf-3e85-11e6-8a49-d117b28fa0a3","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[109,929],"tindex":"d1c6fbe0-3e85-11e6-8a49-9776c1bf8f01","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[930],"tindex":"d1c6fbe1-3e85-11e6-8a49-19ab6634edf7","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < end) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d1c6fbe2-3e85-11e6-8a49-8db8b0758ca6","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"d1c6fbe3-3e85-11e6-8a49-233e2825852a","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"d1c6fbe4-3e85-11e6-8a49-1f215a8219f5","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"d1c6fbe5-3e85-11e6-8a49-b941556e611a","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"d1c722f6-3e85-11e6-8a49-dbc0d1fafc70","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[691,700,727,728],"tindex":"d1c722f7-3e85-11e6-8a49-47d8fe35531e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979],"tindex":"d1c722f8-3e85-11e6-8a49-ab0f246e7b5a","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262547967/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}