{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":553,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":130,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":224,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":391,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":565,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":302,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":407,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":701,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":632,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":633,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":331,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":368,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":666,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":585,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":561,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":685,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":611,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":573,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":517,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":28,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":191,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":567,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":192,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":568,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":524,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":664,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":131,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":1,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":532,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":506,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":501,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":503,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":703,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":122,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":286,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":359,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":101,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":659,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":597,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":85,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":214,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":432,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":584,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":441,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":618,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":84,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":419,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":370,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":219,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":162,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":577,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":575,"org.apache.commons.collections4.CollectionUtilsTest.intersection":608,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":200,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":316,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":392,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":631,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":371,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":570,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":399,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":202,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":562,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":587,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":203,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":152,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":201,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":588,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":378,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":390,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":663,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":229,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":437,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":655,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":156,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":308,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":713,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":307,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":494,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":591,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":554,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":551,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":57,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testPut":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":522,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":334,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":43,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":387,"org.apache.commons.collections4.map.CompositeMapTest.testGet":609,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":549,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":461,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":541,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":165,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":482,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":621,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":462,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":180,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":338,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":123,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":339,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":458,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":480,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":459,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":460,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":604,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":472,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":25,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":649,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":424,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":675,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":692,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":354,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":22,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":502,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":450,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":212,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":67,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":73,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":581,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":54,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":164,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":574,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":606,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":697,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":566,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":616,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":654,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":571,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":139,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":285,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":283,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":560,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":74,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":351,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":4,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":137,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":457,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":595,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":712,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":135,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":651,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":596,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":456,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":538,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":134,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":170,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":262,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":213,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":261,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":260,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":643,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":173,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":208,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":425,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":207,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":111,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":484,"org.apache.commons.collections4.ListUtilsTest.testSubtract":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":60,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":197,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":142,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":374,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":620,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":690,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":290,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":662,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":96,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":672,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":674,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":29,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":688,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":120,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":669,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":66,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":518,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":253,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":508,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":564,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":321,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":679,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":15,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":271,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":83,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":61,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":194,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":686,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":550,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":95,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":105,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":292,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":535,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":671,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":159,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":630,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":558,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":636,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":124,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":436,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":171,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":471,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":383,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":356,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":552,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":91,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":673,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":417,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":416,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":415,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":48,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":670,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":510,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":14,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":583,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":82,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":350,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":613,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":612,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":676,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":143,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":547,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":665,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":699,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":667,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":233,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":637,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":646,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":487,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":53,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":707,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":563,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":488,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":373,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":204,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":641,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":656,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":151,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":602,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":706,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":455,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":705,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":380,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":684,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":367,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":274,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":323,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":70,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":483,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":328,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":478,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":278,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":279,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":648,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":258,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":280,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":546,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":90,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":188,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":447,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":266,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":446,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":440,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":77,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":222,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":34,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":601,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":475,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":79,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":297,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":479,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":678,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":393,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":169,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":592,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":700,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":429,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":100,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":430,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":614,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":263,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":431,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":464,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":639,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":453,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":605,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":52,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":389,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":78,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":195,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":544,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":270,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":129,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":473,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":329,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":523,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":360,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":218,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":284,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":476,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":520,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":449,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":325,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":379,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":642,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":448,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":376,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":454,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":86,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":317,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":422,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":110,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":708,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":710,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":709,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":259,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":158,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":433,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":176,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":239,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":238,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":513,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":166,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":443,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":492,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":598,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":444,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":555,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":112,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":402,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":160,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":42,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":248,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":187,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":58,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":507,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":76,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":348,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":80,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":363,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":215,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":365,"org.apache.commons.collections4.set.CompositeSetTest.testContains":603,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":273,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":299,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":410,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":521,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":493,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":660,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":19,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":310,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":265,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":127,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":388,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":545,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":140,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":107,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":234,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":537,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":681,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":515,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":2,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":534,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":696,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":146,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":303,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":527,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":228,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":276,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":628,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":227,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":153,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":121,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":46,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":226,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":301,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":528,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":403,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":246,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":235,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":382,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":305,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":652,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":349,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":530,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":536,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":36,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":269,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":88,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":168,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":244,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":582,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":466,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":65,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":223,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":205,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":97,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":144,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":236,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":635,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":179,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":364,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":257,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":638,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":427,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":691,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":428,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":426,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":12,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":680,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":500,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":361,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":572,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":175,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":687,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":385,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":468,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":20,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":477,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":384,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":396,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":421,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":174,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":661,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":178,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":511,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":221,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":505,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":452,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":366,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":677,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":182,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":420,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":394,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":189,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":243,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":89,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":377,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":56,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":295,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":622,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":589,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":623,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":198,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":519,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":414,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":634,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":557,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":163,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":695,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":413,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":543,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":694,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":711,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":625,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":526,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":119,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":640,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":698,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":314,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":411,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":358,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":355,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":481,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":147,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":408},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"dc93f567-3e62-11e6-b986-33fd406d3c87","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"dc944388-3e62-11e6-b986-93f311ff8937","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"dc946a99-3e62-11e6-b986-9be0f9f3e00d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[56,57],"tindex":"dc946a9a-3e62-11e6-b986-71e789f9ac84","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[58,59],"tindex":"dc9491ab-3e62-11e6-b986-8bf57c73fd74","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[60,61,62,63,64,65,39,40,66,67,41,42,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,43,44,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"dc9491ac-3e62-11e6-b986-1d3f7a00f36f","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"dc9491ad-3e62-11e6-b986-15a9ac0f26ee","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[150],"tindex":"dc94b8be-3e62-11e6-b986-a1ca1ebb34b0","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < end) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[151],"tindex":"dc94b8bf-3e62-11e6-b986-152dc4156f80","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,117,124,135,136,137,142,145,146,147,148,149,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"tindex":"dc94b8c0-3e62-11e6-b986-53e786e513a3","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385],"tindex":"dc94dfd1-3e62-11e6-b986-cb2ab41bee4a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[386],"tindex":"dc94dfd2-3e62-11e6-b986-4918443587f4","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,114,115,117,118,119,122,124,127,128,132,133,134,135,136,137,146,147,148],"tindex":"dc94dfd3-3e62-11e6-b986-05667931e617","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[465,466,467,468,469,470,471,472,473,474],"tindex":"dc9506e4-3e62-11e6-b986-23aa590bd95c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[475],"tindex":"dc9506e5-3e62-11e6-b986-51b8215737ea","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[476,477,478,479,480,481,387,388,389,390,391,392,393,394,395,482,483,484,485,486,487,488,489,490,403,404,405,406,407,408,409,410,411,419,420,421,422,423,424,425,433,434,435,436,437,438,439,440,441,491,492,493,494,495,496,497,498,499,500,501,449,450,451,452,453,454,455,456,457,114,115,117,118,119,122,124,127,128],"tindex":"dc952df6-3e62-11e6-b986-57cd545ca5bc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"dc952df7-3e62-11e6-b986-0de5d9cec27a","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"dc952df8-3e62-11e6-b986-e5a378bba77f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"dc952df9-3e62-11e6-b986-67dcad378820","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"dc952dfa-3e62-11e6-b986-717643c140e6","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[150],"tindex":"dc95550b-3e62-11e6-b986-e53261317586","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"dc95550c-3e62-11e6-b986-6121ac783b3d","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"dc95550d-3e62-11e6-b986-1b591c2102bb","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[502],"tindex":"dc95550e-3e62-11e6-b986-d9a9edf011a4","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"dc95550f-3e62-11e6-b986-138a2a0f278d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"dc955510-3e62-11e6-b986-571b1ae00e0d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dc957c21-3e62-11e6-b986-53bfddb672cf","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[],"tindex":"dc957c22-3e62-11e6-b986-ebee128e8119","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[503,504,505,506,507,508,509,510,511,512,386,513,514,515,516,517,518,152,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,153,154,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,465,569,570,571,466,572,573,574,575,576,577,578,579,580,467,581,582,468,469,583,584,470,471,472,473,474],"tindex":"dc957c23-3e62-11e6-b986-2db82438e73d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"dc957c24-3e62-11e6-b986-f3c524d52783","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"dc95a335-3e62-11e6-b986-6bfcce6f147b","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"dc95a336-3e62-11e6-b986-eb5cfca7dc39","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dc95a337-3e62-11e6-b986-11168275464f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"beyond"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"dc95a338-3e62-11e6-b986-5dac8ffb7a09","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[585,586,587,588],"tindex":"dc95a339-3e62-11e6-b986-53de2b965616","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (coll == null) {\n                        return 0;\n                    } \n                    return coll.size();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[589],"tindex":"dc95a33a-3e62-11e6-b986-ada7be15ef50","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dc95ca4b-3e62-11e6-b986-e1a680b5d5e1","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (coll == null) {\n                        return 0;\n                    } \n                    return coll.size();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[590,591],"tindex":"dc95ca4c-3e62-11e6-b986-e5e150fc6432","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"dc95ca4d-3e62-11e6-b986-8769635508d5","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"dc95ca4e-3e62-11e6-b986-c56a749b2da4","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[592,593,594,595],"tindex":"dc95ca4f-3e62-11e6-b986-8faed1812a49","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[596,597],"tindex":"dc95ca50-3e62-11e6-b986-9788b578efb6","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"dc95f161-3e62-11e6-b986-ad0c3762c1b9","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[598,599,600],"tindex":"dc95f162-3e62-11e6-b986-19d54262dca9","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[601,602,603,604,605,606,51,607,608,54,609,610,611,612,613,614,615,616],"tindex":"dc95f163-3e62-11e6-b986-0bcac82d029f","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"dc95f164-3e62-11e6-b986-8b9fc37b1384","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[617],"tindex":"dc961875-3e62-11e6-b986-87582bc9db8b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[618,619,58],"tindex":"dc961876-3e62-11e6-b986-3fe6fa140676","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[103,104],"tindex":"dc961877-3e62-11e6-b986-2ffba3f1bc88","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,640,641,642,642,643,644,645],"tindex":"dc961878-3e62-11e6-b986-23ea0ab3933a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"dc961879-3e62-11e6-b986-514ea95463a1","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"dc963f8a-3e62-11e6-b986-830dc6fe0678","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[503,504,505,506,507,508,509,510,511,512,386,513,514,515,516,517,518,152,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,153,154,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,465,569,570,571,466,572,573,574,575,576,577,578,579,580,467,581,582,468,469,583,584,470,471,472,473,474],"tindex":"dc963f8b-3e62-11e6-b986-29ac3eeeb3c4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"dc96669c-3e62-11e6-b986-bd0922bc2841","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"dc96669d-3e62-11e6-b986-df839fd47876","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674],"tindex":"dc96669e-3e62-11e6-b986-1d18960e6103","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"dc96669f-3e62-11e6-b986-736d4a67e5fa","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[675],"tindex":"dc9666a0-3e62-11e6-b986-95d387691001","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"dc968db1-3e62-11e6-b986-3f5f01234cfc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[676],"tindex":"dc968db2-3e62-11e6-b986-b373b4855fc3","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[677,678],"tindex":"dc968db3-3e62-11e6-b986-51d91df722f4","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[679],"tindex":"dc968db4-3e62-11e6-b986-d17b0e92f166","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"dc96b4c5-3e62-11e6-b986-c75ba487190f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[680],"tindex":"dc96b4c6-3e62-11e6-b986-f7f4282c4a38","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[681,682,683,684],"tindex":"dc96b4c7-3e62-11e6-b986-f7e187e581ee","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[685],"tindex":"dc96dbd8-3e62-11e6-b986-93d369fb3178","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"dc96dbd9-3e62-11e6-b986-3bb3ca6d60d3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[639],"tindex":"dc96dbda-3e62-11e6-b986-eb69b811dc7c","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[686],"tindex":"dc9702eb-3e62-11e6-b986-5f2160d4cb91","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"dc9702ec-3e62-11e6-b986-3704b2e93c7d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"dc9702ed-3e62-11e6-b986-29af9f06651a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[687],"tindex":"dc9702ee-3e62-11e6-b986-f7c8004f1b9e","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[688,689,690,691,692],"tindex":"dc9729ff-3e62-11e6-b986-df8954ae5be7","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[693],"tindex":"dc972a00-3e62-11e6-b986-8fe6292b2e03","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"dc972a01-3e62-11e6-b986-b9fe4c28254a","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[694,313,314],"tindex":"dc972a02-3e62-11e6-b986-9def316c74b3","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[103,104,323,105,106,107,108,109,695,696],"tindex":"dc972a03-3e62-11e6-b986-97aabbdf6673","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[697,698],"tindex":"dc972a04-3e62-11e6-b986-fb8825954cd3","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[378],"tindex":"dc975115-3e62-11e6-b986-8d30d67e41ac","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"dc975116-3e62-11e6-b986-2f876a15b137","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[699],"tindex":"dc975117-3e62-11e6-b986-0d5379749123","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[700],"tindex":"dc975118-3e62-11e6-b986-27923f82e496","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[701],"tindex":"dc975119-3e62-11e6-b986-031e7a7c772d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dc97511a-3e62-11e6-b986-c14e55f34557","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"dc97782b-3e62-11e6-b986-a1b7cd3a5543","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"dc97782c-3e62-11e6-b986-1dc43c583ba6","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[702,703,704,705,706,707,708,709,710],"tindex":"dc97782d-3e62-11e6-b986-bb20a7a887d5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"dc97782e-3e62-11e6-b986-731afaed92b1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"dc97782f-3e62-11e6-b986-51b63e844a9f","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"dc977830-3e62-11e6-b986-a1feafcf30a6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"dc979f41-3e62-11e6-b986-df3bd8257e3d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"dc979f42-3e62-11e6-b986-9d6053cb2a61","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"dc979f43-3e62-11e6-b986-fb3648fd9e01","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[711],"tindex":"dc979f44-3e62-11e6-b986-331043713d4b","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"dc97c655-3e62-11e6-b986-bb804b8476bf","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[712],"tindex":"dc97c656-3e62-11e6-b986-4f2600575da9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[713],"tindex":"dc97c657-3e62-11e6-b986-d38dcc0a86a2","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"dc97c658-3e62-11e6-b986-1b8a3c556b78","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"dc97c659-3e62-11e6-b986-f5b54a977a22","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[216,324],"tindex":"dc97c65a-3e62-11e6-b986-d59ec56f0822","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}