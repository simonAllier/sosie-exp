{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":385,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":11,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":186,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":35,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":50,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":169,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":94,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":174,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":352,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":316,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":357,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":264,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":61,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":252,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":249,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":159,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":247,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":232,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":128,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":149,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":319,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":318,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":125,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":312,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":83,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":303,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":48,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":259,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":198,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":37,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":360,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":295,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":262,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":201,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":178,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":71,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":310,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":184,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":185,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":57,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":333,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":68,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":344,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":131,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":317,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":337,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":0,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":307,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":340,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":313,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":181,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":299,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":278,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":311,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":175,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":359,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":180,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":245,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":30,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":197,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":45,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":145,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":366,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":129,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":41,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":368,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":150,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":258,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":16,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":305,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":151,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":14,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":36,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":84,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":275,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":113,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":300,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":193,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":103,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":332,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":56,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":240,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":329,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":199,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":51,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":288,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":377,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":206,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":364,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":26,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":183,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":182,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":351,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":367,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":152,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":287,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":192,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":49,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":228,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":55,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":5,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":116,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":97,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":339,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":27,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":112,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":384,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":132,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":168,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":284,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":334,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":263,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":223,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":261,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":167,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":375,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":370,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":365,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":202,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":246,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":188,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":163,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":297,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":144,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":148,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":141,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":280,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":250,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":361,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":120,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":207,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":200,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":66,"org.apache.commons.collections4.set.CompositeSetTest.testContains":7,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":138,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":109,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":353,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":205,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":349,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":285,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":162,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":24,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":82,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":99,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":227,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":177,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":237,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":277,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":362,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":274,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":63,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":267,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":58,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":105,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":21,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":341,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":22,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":216,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":268,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":378,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":208,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":356,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":142,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":74,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":96,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":326,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":286,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":338,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":220,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":164,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":79,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":77,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":315,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":137,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":86,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":127,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":107,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":248,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":43,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":348,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":371,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":115,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":218,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":260,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":283,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":154,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":257,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":156,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":239,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":244,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":342,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":98,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":214},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[0],"tindex":"f5fa3aad-2eaf-11e6-82c4-d5d39a438ac0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"f5fad6ee-2eaf-11e6-82c4-974cbcc90af0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[],"tindex":"f5fafdff-2eaf-11e6-82c4-93ee78e969a1","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe < indexRelativeToMe) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"indexRelativeToMe","index":"indexRelativeToMe"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtBinaryOperatorImpl","sourcecode":"(start.predecessor.right) == start"},"failures":[],"tindex":"f5fb2410-2eaf-11e6-82c4-39db2afc2917","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"node","predecessor":"node","right":"node"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f5fb4b21-2eaf-11e6-82c4-f1947c34e068","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[1,2,3],"tindex":"f5fb7232-2eaf-11e6-82c4-4905b23d6b53","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"f5fb7233-2eaf-11e6-82c4-a34055c30df4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:293","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<K> listIterator(final int fromIndex) {\n    if (fromIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(super.listIterator(fromIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[4],"tindex":"f5fb9944-2eaf-11e6-82c4-7958a8c36804","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"f5fb9945-2eaf-11e6-82c4-791bc566c345","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index == index) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"f5fbc056-2eaf-11e6-82c4-15078fe55aaf","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"f5fbe767-2eaf-11e6-82c4-9fe7b31fc638","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"f5fc0e78-2eaf-11e6-82c4-ed5159a2e8bc","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"otherOffsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"f5fc5c99-2eaf-11e6-82c4-67fe06bfcdaa","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"f5fc83aa-2eaf-11e6-82c4-1733b36170e7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[49,52,54,55,56,58,59,61,62,63,65,66,68,71,72,76,77,78,79,80,81,82,85,89,91,92,93,94],"tindex":"f5fc83ab-2eaf-11e6-82c4-71d9715f3377","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"f5fcaabc-2eaf-11e6-82c4-f3a27830636c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[245],"tindex":"f5fcd1cd-2eaf-11e6-82c4-27656236905a","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtBinaryOperatorImpl","sourcecode":"cur == cursor"},"failures":[],"tindex":"f5fcf8de-2eaf-11e6-82c4-1940be9572f3","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == cursor) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor","cur":"cursor"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[],"tindex":"f5fd1fef-2eaf-11e6-82c4-d59b471cf730","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > count) {\n        {\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"count","newCapacity":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"f5fd1ff0-2eaf-11e6-82c4-2355073a75a9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (null == key3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[246,247,248,249,250,251,105,106,107,252,253,108,254,255,256,257,258,259,260,261,109,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,110,111,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"tindex":"f5fd4701-2eaf-11e6-82c4-bf8013dbb1c4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value.getClass().isArray()) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"f5fd6e12-2eaf-11e6-82c4-873e78093250","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[337,338],"tindex":"f5fd6e13-2eaf-11e6-82c4-f5a39d82aeb0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[339],"tindex":"f5fd6e14-2eaf-11e6-82c4-53007a4206fa","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"f5fd6e15-2eaf-11e6-82c4-c7da072795af","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"f5fd9526-2eaf-11e6-82c4-83aefd47a60c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[383],"tindex":"f5fd9527-2eaf-11e6-82c4-91f75cc50980","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[384,385],"tindex":"f5fdbc38-2eaf-11e6-82c4-8f558852c003","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[106,107,286,288,289],"tindex":"f5fdbc39-2eaf-11e6-82c4-6bd87fc6cfa6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f5fde34a-2eaf-11e6-82c4-b74b8b04610a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":30,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}