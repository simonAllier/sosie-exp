{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":292,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":217,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":539,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":573,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":481,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":150,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":608,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":218,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":322,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":381,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":588,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":289,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":288,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":208,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":526,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":582,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":216,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":498,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":433,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":564,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":163,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":399,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":408,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":515,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":282,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":551,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":306,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":453,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":71,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":40,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":65,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":621,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":127,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":262,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":200,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":617,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":320,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":223,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":578,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":426,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":475,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":495,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":603,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":471,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":640,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":372,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":544,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":545,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":487,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":36,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":95,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":164,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":96,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":377,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":48,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":165,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":244,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":501,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":1,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":423,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":536,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":52,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":161,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":213,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":514,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":591,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":485,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.map.CompositeMapTest.testGet":299,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":363,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":232,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":385,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":627,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":13,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":18,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":228,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":484,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":368,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":107,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":339,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":524,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":258,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":307,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":610,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":119,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":175,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":179,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":234,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":276,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":169,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":62,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":63,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":99,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":328,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":365,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":191,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":29,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":542,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":418,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":553,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":554,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":67,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":494,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":457,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":505,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":74,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":452,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":631,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":594,"org.apache.commons.collections4.list.TreeListTest.testRemove":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":410,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":623,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":427,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":172,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":516,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":59,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":58,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":636,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":268,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":598,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":261,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":528,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":324,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":568,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":105,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":264,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":601,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":75,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":76,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":247,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":593,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":557,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":559,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":616,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":492,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.map.LRUMapTest.testClone":508,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":576,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":432,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":120,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":513,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":572,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":259,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":397,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":529,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":182,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":413,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":26,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":342,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":439,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":230,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":599,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":577,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":256,"org.apache.commons.collections4.list.TreeListTest.testListEquals":620,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":212,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":285,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":455,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":3,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":290,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":624,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":243,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":375,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":312,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":147,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":431,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":229,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":281,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":254,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":333,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":6,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":142,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":141,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":140,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":379,"org.apache.commons.collections4.map.LRUMapTest.testReset":507,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":167,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":597,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":197,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":173,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":370,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":273,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":414,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":491,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":561,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":305,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":497,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":37,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":130,"org.apache.commons.collections4.map.LinkedMapTest.testReset":549,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":270,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":531,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":581,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":57,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":207,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":541,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":430,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":635,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":400,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":472,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":300,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":171,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":104,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":226,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":341,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":540,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":425,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":255,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":318,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":222,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":158,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":347,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":354,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":570,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":221,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":317,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":151,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":606,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":380,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":469,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":321,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":574,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":461,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":355,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":443,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":297,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":459,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":618,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":337,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":294,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":88,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":446,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":129,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":125,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":180,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":126,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":374,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":113,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":246,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":166,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":44,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":329,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":340,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":420,"org.apache.commons.collections4.map.HashedMapTest.testClone":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":406,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":586,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":293,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":383,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":602,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":533,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":547,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":219,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":421,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":117,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":396,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":518,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":350,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":435,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":263,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":543,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":118,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":280,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":630,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":642,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":271,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":622,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":236,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":633,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":21,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":154,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":153,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":50,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":155,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":211,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":378,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":625,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":560,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":517,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":398,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":563,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":419,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":332,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":11,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":405,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":352,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":637,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":248,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":486,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":595,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":449,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":176,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":626,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":580,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":579,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":343,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":135,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":440,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":555,"org.apache.commons.collections4.list.TreeListTest.testBug35258":614,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":260,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":558,"org.apache.commons.collections4.map.LinkedMapTest.testClone":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":274,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":315,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":51,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":638,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":458,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":448,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":73,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":83,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":411,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":389,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":527,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":585,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":181,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":436,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":522,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":422,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":286,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":510,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":269,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":434,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":308,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":296,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":496,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":479,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":500,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":478,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":567,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":373,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":364,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":309,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":206,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":596,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":592,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":371,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":220,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":639,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":369,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":499,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":607,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":53,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":415,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":534,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":523,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":359,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":643,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":122,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":123,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":303,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":437,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":450,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":604,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":185,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":2,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":331,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":196,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":335,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":55,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":442,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":235,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":562,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":91,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":214,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":393,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":265,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":134,"org.apache.commons.collections4.map.LRUMapTest.testLRU":509,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":605,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":629,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":272,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":641,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":115,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":195,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":89,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":384,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":346,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":483,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":250,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":344,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":537,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":488,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":284,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":511,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":587,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":239,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":252,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":392,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":138,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":535,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":316,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":519,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":367,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":93,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":203,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":146,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":70,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":628,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":287,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":512,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":186,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":466,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":188,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":327,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":417,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":298,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":336,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":338},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"f820e2f9-2eb2-11e6-8fa2-650cb65f7d68","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0],"tindex":"f821a64a-2eb2-11e6-8fa2-cdbac3ed69a8","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (inputCollection instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"inputCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"f821a64b-2eb2-11e6-8fa2-63bdb18f3e9e","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[1,2],"tindex":"f821cd5c-2eb2-11e6-8fa2-37fa77dbf902","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[3,4,5,6],"tindex":"f821f46d-2eb2-11e6-8fa2-bfad35f91910","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[7,0],"tindex":"f821f46e-2eb2-11e6-8fa2-1d75b3fdd8a5","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"f8221b7f-2eb2-11e6-8fa2-1791b7851fa1","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[20,21,22,23,24,25,26,27,28],"tindex":"f8224290-2eb2-11e6-8fa2-cf03340653ce","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof org.w3c.dom.NodeList) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"f82269a1-2eb2-11e6-8fa2-ebdef2a2f77f","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[29],"tindex":"f82269a2-2eb2-11e6-8fa2-d908f86be396","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[30],"tindex":"f82290b3-2eb2-11e6-8fa2-bd2b54a08eaf","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[],"tindex":"f822b7c4-2eb2-11e6-8fa2-23c6577f146a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"f822ded5-2eb2-11e6-8fa2-5b8e18204084","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"f82305e6-2eb2-11e6-8fa2-3751ed222aae","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:852","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object entry) {\n    if ((entry instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry instanceof java.util.Map.Entry) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(entry));\n                final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(e.getKey());\n                return (match != null) && (match.equals(e));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[160,161],"tindex":"f8232cf7-2eb2-11e6-8fa2-9fe23ae1db79","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[162,163,164,165],"tindex":"f8235408-2eb2-11e6-8fa2-45dffd08798c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[166],"tindex":"f8235409-2eb2-11e6-8fa2-6b68bc5aa98c","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"f8237b1a-2eb2-11e6-8fa2-c9bf50645dc0","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (null == value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[167],"tindex":"f8237b1b-2eb2-11e6-8fa2-b361c484562c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"f823a22c-2eb2-11e6-8fa2-33e6f75c06db","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[168,169,170,171,172],"tindex":"f823c93d-2eb2-11e6-8fa2-7fc6d2e7acf5","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"f823c93e-2eb2-11e6-8fa2-2306d4cd08cb","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"f823f04f-2eb2-11e6-8fa2-6986eb929ce7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[179],"tindex":"f823f050-2eb2-11e6-8fa2-178eb64ce14d","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f8241761-2eb2-11e6-8fa2-ef97e4c1d69e","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map == null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[30],"tindex":"f8241762-2eb2-11e6-8fa2-c1f50c62e806","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[205],"tindex":"f8243e73-2eb2-11e6-8fa2-a3a722b0baee","method":{"position":"org.apache.commons.collections4.TransformerUtils:227","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I> predicate, final org.apache.commons.collections4.Transformer<? super I, ? extends O> trueTransformer, final org.apache.commons.collections4.Transformer<? super I, ? extends O> falseTransformer) {\n    if (falseTransformer == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ predicate }, new org.apache.commons.collections4.Transformer[]{ trueTransformer }, falseTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"falseTransformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[206,207],"tindex":"f8246584-2eb2-11e6-8fa2-97ea35277e6e","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index > index) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","bound":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],"tindex":"f8246585-2eb2-11e6-8fa2-793ee9b9ef0b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[],"tindex":"f8246586-2eb2-11e6-8fa2-4714b70d7de8","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[290,291,292],"tindex":"f8248c97-2eb2-11e6-8fa2-17f47004ef30","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"f8248c98-2eb2-11e6-8fa2-e185c6ee8b23","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[293,294],"tindex":"f824b3a9-2eb2-11e6-8fa2-efd083f4c87f","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[295,296,297],"tindex":"f824b3aa-2eb2-11e6-8fa2-63a63404bb89","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"f824b3ab-2eb2-11e6-8fa2-2f14065bfec4","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"f824dabc-2eb2-11e6-8fa2-5fd420b86141","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[298],"tindex":"f824dabd-2eb2-11e6-8fa2-e17a594d2045","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[299,300,301,302],"tindex":"f824dabe-2eb2-11e6-8fa2-a7aaf605281d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[303,35,38,304,305,52,55,306,307],"tindex":"f82501cf-2eb2-11e6-8fa2-c9793c631392","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"value","position2":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"f82501d0-2eb2-11e6-8fa2-775d0a0bd17f","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"f82528e1-2eb2-11e6-8fa2-e361c8971be5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[308,309,310,311,312,313,314,315,316,317,318,319],"tindex":"f82528e2-2eb2-11e6-8fa2-155d9a98fafd","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection<?>) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f8254ff3-2eb2-11e6-8fa2-e75a488c5d19","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[320,321,322,323,324,325,326,327,162,328,329,164,330,331,332,333,334],"tindex":"f8254ff4-2eb2-11e6-8fa2-c94ff9a3e2ec","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[335],"tindex":"f8257705-2eb2-11e6-8fa2-d5f00f6f350a","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[336,337,338,339,340,341,342,343,8,9,344,345,10,346,11,347,348,12,13,349,350,351,352,353,354,355,14,15,356,357,16,358,17,359,360,18,19,361,362,48,363,364,365,366,367,49,50,368,51,52,53,369,370,54,371,55,372,373,56,57,374,375,376,58,59,60,61,62,63,306,377,378,307,379,380,381,382,64,383,384,385,386,387,388,389,390,391,392,393,394,395,65,396,397,398,399,66,67,400,68,69,70,401,402,71,403,72,404,405,73,74,406,407,408,75,76,77,78,79,80,409,410,411,412,413,414,415,416,81,417,418,419,420,421,422,423,424,425,426,427,428,82,83,429,84,85,86,430,431,87,432,88,433,434,89,90,435,436,437,91,92,93,94,95,96,438,439,440,441,442,443,444,445,97,446,447,448,449,450,451,452,453,454,455,456,457,98,99,458,100,101,102,459,460,103,461,104,462,463,105,106,464,465,466,107,108,109,110,111,112,467,468,469,470,471,472,473,474,113,475,476,477,478,479,480,481,482,483,484,114,115,485,116,117,118,486,487,119,488,489,490,491,492,120,493,494,495,121,122,123,124,125,126,496,497,498,499,500,501,502,503,127,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,128,129,529,130,131,132,530,531,133,532,134,533,534,135,136,535,536,537,137,138,139,140,141,142,538,539,540,541,542,543,544,545,143,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,144,145,564,146,147,148,565,566,149,567,150,568,569,151,152,570,571,572,153,154,155,156,157,158,573,574,575,576,577,578,579,580,159,581,582,583],"tindex":"f8257706-2eb2-11e6-8fa2-398c84710e46","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:514","type":"CtMethodImpl","sourcecode":"protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex], hashCode, key, value);\n            addEntry(entry, hashIndex);\n            (int)++;\n            checkCapacity();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[387],"tindex":"f825c527-2eb2-11e6-8fa2-911d5cf0390b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 == null) {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[584,585],"tindex":"f825c528-2eb2-11e6-8fa2-7999786336f3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609],"tindex":"f825ec39-2eb2-11e6-8fa2-f5a8b7b15aab","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[610],"tindex":"f825ec3a-2eb2-11e6-8fa2-2373bd05047a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl","sourcecode":"size < 4"},"failures":[20,611,612,613,614,615,616,617,618,619,620,621,622,21,623,624,625,626,627,628,629,630,631,632,22,23,24,25,633,26,634,635,27,636,637,638],"tindex":"f825ec3b-2eb2-11e6-8fa2-53e40da1e73f","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 4) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[639,640,641,642,643],"tindex":"f826134c-2eb2-11e6-8fa2-8517adb081d4","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f826134d-2eb2-11e6-8fa2-c755d384a0ff","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":53,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}