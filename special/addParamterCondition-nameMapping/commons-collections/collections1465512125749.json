{"failureDictionary":{"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":31,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":62,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":333,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":24,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":282,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":321,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":248,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":285,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":325,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":199,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":316,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":202,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":287,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":47,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":329,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":105,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":19,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":350,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":103,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":294,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":324,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":200,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":201,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":334,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":14,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":207,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":284,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":267,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":186,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":264,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":252,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":88,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":16,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":58,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":290,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":263,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":353,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":86,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":158,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":304,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":60,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":265,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":147,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":69,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":354,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":315,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":310,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":64,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":167,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":235,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":89,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":120,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":141,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":347,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":132,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":148,"org.apache.commons.collections4.SetUtilsTest.testHashCode":295,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":52,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":351,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":328,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":46,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":223,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":51,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":336,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":297,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":249,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":83,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":355,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":277,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":278,"org.apache.commons.collections4.list.TreeListTest.testBug35258":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":157,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":121,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":260,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":123,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":192,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":360,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":73,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":144,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":311,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":57,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":257,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":97,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":338,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":106,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":341,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":108,"org.apache.commons.collections4.list.TreeListTest.testRemove":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":269,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":111,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":215,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":305,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":93,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":168,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":312,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":313,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":210,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":145,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":165,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":28,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":239,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":344,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":219,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":20,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":226,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":15,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":133,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":303,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":35,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":6,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":76,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":115,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":343,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":244,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":187,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":10,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":319,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":296,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":332,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":298,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":206,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":250,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":128,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":330,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":131,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":112,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":339,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":95,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":358,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":238,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":152,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":331,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":23,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":85,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":124,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":170,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":45,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":171,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":314,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":362,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":5,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":172,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":348,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":94,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":160,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":306,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":274,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":356,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":90,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":22,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":323,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":208,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":12,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":49,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":245,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":308,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":164,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":309,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":54,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":27,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":91,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":196},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"6437d682-2e93-11e6-8132-4b9707ab9d2a","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(count)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"count"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"6438c0e3-2e93-11e6-8132-71e6c74115aa","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"6438e7f4-2e93-11e6-8132-f90694311808","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"64390f05-2e93-11e6-8132-ab1998c1c3f8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[],"tindex":"64393616-2e93-11e6-8132-39fbd432610a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"64393617-2e93-11e6-8132-b96a57159b46","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[151],"tindex":"64395d28-2e93-11e6-8132-1724c3829718","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Boolean) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"64398439-2e93-11e6-8132-17bddbd66740","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n == 0) {\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[152,153,154,155,156,157,158,67,159,160,68,69,161,70,71,72,162,163,73,164,165,166,167,168,169,74,170,171,172,173,174,175,176,177,178,179,75,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"6439ab4a-2e93-11e6-8132-8d3d65d618c9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtBinaryOperatorImpl","sourcecode":"index >= (maxElements)"},"failures":[192,193,194,195,196,197,198,199,200],"tindex":"6439d25b-2e93-11e6-8132-879056b92818","method":{"position":"org.apache.commons.collections4.list.TreeList:517","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnRight(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe >= indexRelativeToMe) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getRightSubTree()) == null) {\n                setRight(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((+1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode<E> , org.apache.commons.collections4.list.TreeList.AVLNode.this), null);\n            } else {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) < 0) {\n                (int)--;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"indexRelativeToMe","index":"indexRelativeToMe"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"tindex":"6439f96c-2e93-11e6-8132-7d4debeaf956","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (offsetInBits < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"offsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"643ae3cd-2e93-11e6-8132-8bc06d365af2","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"643b0ade-2e93-11e6-8132-0d513a30499a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[247,248],"tindex":"643b31ef-2e93-11e6-8132-9b8eeb43057f","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl","sourcecode":"(pos != (-1)) && (pos != index)"},"failures":[],"tindex":"643b31f0-2e93-11e6-8132-c573fcadaa23","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((index != (-1)) && (pos != index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"643b5901-2e93-11e6-8132-e71a9d2df9cd","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (index < (index / 2)) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"643b5902-2e93-11e6-8132-3d9433dc90f2","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[],"tindex":"643b8013-2e93-11e6-8132-a99ffbb5af85","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[294],"tindex":"643b8014-2e93-11e6-8132-4fb42b730113","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtVariableReadImpl","sourcecode":"foundCurrentElement"},"failures":[],"tindex":"643ba725-2e93-11e6-8132-55aa65c1b5a6","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"foundCurrentElement":"trueFirst"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtBinaryOperatorImpl","sourcecode":"(isLocked) == false"},"failures":[],"tindex":"643ba726-2e93-11e6-8132-cf8b2b54f51a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1945","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (toInclusive == false) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isLocked":"toInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[295],"tindex":"643bce37-2e93-11e6-8132-fd939a1f0243","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[296,297,298,299,300,300,301,302,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"tindex":"643bce38-2e93-11e6-8132-ffb8ffc15b21","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"643bf549-2e93-11e6-8132-af830313d26d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"643bf54a-2e93-11e6-8132-ef5fcfd2623c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":25,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}