{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":189,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":6,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":801,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":406,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":70,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":197,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":315,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.CollectionUtilsTest.get":264,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":117,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":244,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":345,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":639,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":230,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":771,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":193,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":224,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":221,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":794,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":420,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":487,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":460,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":84,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":672,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":583,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":543,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":603,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":749,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":695,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":206,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":584,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":503,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":274,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":765,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":198,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":238,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":127,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":388,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":789,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":119,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":688,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":687,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":686,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":242,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":423,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":339,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":376,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":299,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":473,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":648,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":567,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":72,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":642,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":437,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":265,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":570,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":173,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":40,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":353,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":519,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":556,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":506,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":555,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":280,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":552,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":217,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":288,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":647,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":774,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":0,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":118,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":76,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":396,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":95,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":87,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":5,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":106,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":38,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":522,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":31,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":510,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":740,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":307,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":205,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":419,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":271,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":375,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":10,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":624,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":629,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":172,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":411,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":453,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":109,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":481,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":36,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":336,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":615,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":721,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":16,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":102,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":561,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":391,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":136,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":138,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":58,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":528,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":341,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":237,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":385,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":226,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":745,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":471,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":777,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":364,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":548,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":186,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":654,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":253,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":283,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":531,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":377,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":791,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":188,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":455,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":326,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":514,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":778,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":152,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":761,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":746,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":509,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":327,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":183,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":468,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":62,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":681,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":323,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":535,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":129,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":553,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":544,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":474,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":373,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":762,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":554,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":149,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":96,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":662,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":120,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":602,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":144,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":764,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":417,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":779,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":431,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":690,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":362,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":39,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":359,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":346,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":547,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":82,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":626,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":325,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":422,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":613,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":523,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":628,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":311,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":361,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":542,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":404,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":731,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":776,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":464,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":243,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":795,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":240,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":322,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":529,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":589,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":638,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":442,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":472,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":611,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":705,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":606,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":704,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":703,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":643,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":276,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":649,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":368,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":775,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":527,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":729,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":233,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":107,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":90,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":374,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":607,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":725,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":739,"org.apache.commons.collections4.list.TreeListTest.testBug35258":77,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":241,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":100,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":494,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":458,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":108,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":689,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":369,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":29,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":145,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":272,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":330,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":421,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":257,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":454,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":691,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":772,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":757,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":756,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":261,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":517,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":425,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":785,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":551,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":701,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":295,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":568,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":710,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":753,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":592,"org.apache.commons.collections4.CollectionUtilsTest.find":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":259,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":641,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":799,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":328,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":500,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":796,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":270,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":582,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":637,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":287,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":614,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":640,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":622,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":410,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":154,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":273,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":685,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":521,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":317,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":632,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":563,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":713,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":27,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":456,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":709,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":482,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":735,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":598,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":416,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":178,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":19,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":236,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":33,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":693,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":140,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":407,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":625,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":413,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":201,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":565,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":742,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":440,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":379,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":524,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":156,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":405,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":418,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":26,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":130,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":723,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":306,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":316,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":576,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":209,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":797,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":98,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":597,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":298,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":203,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":717,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":204,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":268,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":128,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":513,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":397,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":48,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":511,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":668,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":427,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":155,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":269,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":443,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":609,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":357,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":540,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":727,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":231,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":633,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":122,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":382,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":32,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":720,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":698,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":657,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":64,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":213,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":484,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":174,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":318,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":401,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":433,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":457,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":175,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":660,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":661,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":659,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":758,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":290,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":651,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":759,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":187,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":452,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":441,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":477,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":496,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":335,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":518,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":564,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":389,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":475,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":266,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":485,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":530,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":674,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":147,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":54,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":8,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":113,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":53,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":47,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":707,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":166,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":670,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":692,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":210,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":378,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":342,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":202,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":600,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":366,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":207,"org.apache.commons.collections4.list.TreeListTest.testRemove":73,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":430,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":594,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":462,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":194,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":575,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":467,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":769,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":768,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":767,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":363,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":115,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":354,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":747,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":132,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":151,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":617,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":214,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":476,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":783,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":671,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":782,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":445,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":781,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":635,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":666,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":665,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":158,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":664,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":526,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":708,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":770,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":55,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":126,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":730,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":133,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":512,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":153,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":285,"org.apache.commons.collections4.list.TreeListTest.testListEquals":83,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":461,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":200,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":403,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":321,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":88,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":734,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":732,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":733,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":392,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":349,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":669,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":620,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":15,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":766,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":14,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":792,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":50,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":520,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":572,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":134,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":228,"org.apache.commons.collections4.map.SingletonMapTest.testClone":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":355,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":507,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":74,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":131,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":344,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":139,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":78,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":199,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":435,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":656,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":412,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":726,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":537,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":610,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":699,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":365,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":308,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":488,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":700,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":380,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":585,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":112,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":586,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":182,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":21,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":787,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":159,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":569,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":71,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":752,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":245,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":470,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":621,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":278,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":81,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":737,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":428,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":267,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":784,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":66,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":719,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":9,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":680,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":415,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":736,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":562,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":748,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":595,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":706,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":402,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":696,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":449,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":489,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":491,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":490,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":508,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":780,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":222,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":398,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":348,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":41,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":86,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":409,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":697,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":677,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":655,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":714,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":675,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":260,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":225,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":338,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":501,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":798,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":141,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":673,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":800,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":390,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":347,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":146,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":18,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":124,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":314,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":786,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":446,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":23,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":114,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":383,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":536,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":164,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":313,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":578,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":35,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":414,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":579,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":143,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":393,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":34,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":580,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":254,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":372,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":247,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":371,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":312,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":694,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":728,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":56,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":69,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":150,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":297,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":469,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":310,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":612,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":227,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":560,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":408,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":741,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":303,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":309,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":277,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":395,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":712,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":12,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":116,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":684,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":426,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":480,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":256,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":601,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":790,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":627,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":165,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":2,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":334,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":57,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":284,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":538,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":400,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":702,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":324,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":750,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":208,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":196,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":351,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":229,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":223,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":499,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":486,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":463,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":478,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":239,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":483,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":360,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":667,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":652,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":110,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":358,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":619,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":52,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":424,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":343,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":793,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":596,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":760,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":516},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[0],"tindex":"ed529be9-2eae-11e6-bff3-a73bb9cdb152","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"ed535f3a-2eae-11e6-bff3-898aa72afe8c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"ed53864b-2eae-11e6-bff3-1d089e3d62f1","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"ed53ad5c-2eae-11e6-bff3-c351a9a86669","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"ed54becd-2eae-11e6-bff3-9ba01b97d43c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[24,25],"tindex":"ed54e5de-2eae-11e6-bff3-c7e9b72b040a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"ed54e5df-2eae-11e6-bff3-6b8c98a0e3f5","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[26],"tindex":"ed550cf0-2eae-11e6-bff3-039aa99ec9fe","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[27,28,29,30],"tindex":"ed550cf1-2eae-11e6-bff3-d303d94842a3","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"bound"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[31,32,33,34,35,36,37,38],"tindex":"ed550cf2-2eae-11e6-bff3-49671b0bea80","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"ed553403-2eae-11e6-bff3-79a797b2ccf7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[53,54],"tindex":"ed553404-2eae-11e6-bff3-f122df6fd048","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[55,56,57,58,59,60,61,62,63,64,65],"tindex":"ed553405-2eae-11e6-bff3-f3e859233f68","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[66,67,68,69,70,71,72],"tindex":"ed555b16-2eae-11e6-bff3-396e026ffb0a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"ed555b17-2eae-11e6-bff3-ede391ea9b24","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[109],"tindex":"ed558228-2eae-11e6-bff3-1be609867f16","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"ed558229-2eae-11e6-bff3-65e73ef6ff80","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"ed55822a-2eae-11e6-bff3-63f46cba42f3","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"ed55822b-2eae-11e6-bff3-b19a76f5e4cd","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[110],"tindex":"ed55a93c-2eae-11e6-bff3-bb0f883501eb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"ed55a93d-2eae-11e6-bff3-05018c17c3ff","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"ed55d04e-2eae-11e6-bff3-9fdb0d8ce1f5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"ed55d04f-2eae-11e6-bff3-2bfb32f45534","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index > 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[140,42,49],"tindex":"ed55f760-2eae-11e6-bff3-13a414403f6d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[141],"tindex":"ed55f761-2eae-11e6-bff3-adda7cba61ef","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                {\n                    if (closure == null) {\n                        throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[142],"tindex":"ed5708d2-2eae-11e6-bff3-4977d9b4487f","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[143,22,23,144],"tindex":"ed572fe3-2eae-11e6-bff3-5b887ed5520e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[145],"tindex":"ed5756f4-2eae-11e6-bff3-cdf409867ea2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[146],"tindex":"ed5756f5-2eae-11e6-bff3-5b368d611803","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                {\n                    return list == null ? java.util.Collections.<T>emptyList() : list;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[147,148,149,11,12,150,13,14,15,151,152,16,153,17,154,155,18,19,156,157,158,159,20,21,143,22,23,160,161,162,163,164,165,166,167,144,168,169,170],"tindex":"ed5756f6-2eae-11e6-bff3-ef2e5c18ce99","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"ed577e07-2eae-11e6-bff3-59fc3c843149","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[171],"tindex":"ed577e08-2eae-11e6-bff3-6b1604f33665","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[172],"tindex":"ed57a519-2eae-11e6-bff3-092f648029f4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    final int int = map.size();\n                    if (size == 0) {\n                        return ;\n                    } \n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                        return ;\n                    } \n                    if (size < 4) {\n                        for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    } else {\n                        convertToMap();\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"ed57a51a-2eae-11e6-bff3-3f43c47e89a7","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[173,174,175,176],"tindex":"ed57cc2b-2eae-11e6-bff3-5b98c2df60a4","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,1,205,206,207,2,208,209,210,211,212,213,214,215,216,3,217,218,4,5,219,220,6,7,8,9,10,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"ed57cc2c-2eae-11e6-bff3-f10d6b7512cc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,1,205,206,207,2,208,209,210,211,212,213,214,215,216,3,217,218,4,5,219,220,6,7,8,9,10,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"ed592bbd-2eae-11e6-bff3-a7f08807cdd0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[264,265,266,267,268],"tindex":"ed5952ce-2eae-11e6-bff3-c34059fcffb8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ed5952cf-2eae-11e6-bff3-77171cfcc695","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[269],"tindex":"ed5979e0-2eae-11e6-bff3-cf15583f1b67","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ed5979e1-2eae-11e6-bff3-f1393409440d","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"ed5979e2-2eae-11e6-bff3-7b7921e80a96","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                {\n                    org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[36,37,38,109,270,271,272,273,274],"tindex":"ed59a0f3-2eae-11e6-bff3-61c6af0f0ead","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[275,276,172,277,278,279,280,281,282],"tindex":"ed59a0f4-2eae-11e6-bff3-7ff65ba5313e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[283,284],"tindex":"ed59c805-2eae-11e6-bff3-77e7e37fd6ad","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(get(index));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ed59c806-2eae-11e6-bff3-5d8feb56087b","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[285,277,286,287,288,289,290],"tindex":"ed59c807-2eae-11e6-bff3-67923f2d2c0c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[291,292],"tindex":"ed59c808-2eae-11e6-bff3-c1dbb4c283bd","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"ed59ef19-2eae-11e6-bff3-6133b2f6a833","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[293,294,295,296,297,298,299,300],"tindex":"ed59ef1a-2eae-11e6-bff3-0d82f8c43cf6","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[66],"tindex":"ed59ef1b-2eae-11e6-bff3-33de33471ca0","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"ed59ef1c-2eae-11e6-bff3-836926dfab73","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"ed5a162d-2eae-11e6-bff3-5bd29f8dcc5b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"ed5a162e-2eae-11e6-bff3-63aa1c257570","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"ed5a162f-2eae-11e6-bff3-0d8fe25b6c62","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                {\n                    return list == null ? java.util.Collections.<T>emptyList() : list;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[301,302],"tindex":"ed5a3d40-2eae-11e6-bff3-09e03b459016","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[303,304,305,306,307,308,309,310,311,312],"tindex":"ed5a3d41-2eae-11e6-bff3-9735d97b4f5f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"ed5b9cd2-2eae-11e6-bff3-2f357b422ae1","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"tindex":"ed5b9cd3-2eae-11e6-bff3-f5f351a1c797","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"ed5c1204-2eae-11e6-bff3-118653f34544","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ed5c1205-2eae-11e6-bff3-3304f97865d2","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                {\n                    org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"ed5c1206-2eae-11e6-bff3-618dc62b2410","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[370],"tindex":"ed5c3917-2eae-11e6-bff3-79e7bcf26793","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"ed5c3918-2eae-11e6-bff3-b7a5a3023377","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"ed5c3919-2eae-11e6-bff3-79f1465afef1","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"ed5c391a-2eae-11e6-bff3-a50a7a456810","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"ed5c602b-2eae-11e6-bff3-5ded63bff6d3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[371,372,373,374,374,375,376,376,377,378],"tindex":"ed5c602c-2eae-11e6-bff3-03e2650f39f3","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ed5c602d-2eae-11e6-bff3-01e6e7cb447d","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[379],"tindex":"ed5c873e-2eae-11e6-bff3-3b923976557d","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,283,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],"tindex":"ed5c873f-2eae-11e6-bff3-e71ac956a0c8","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[529,530,531,532,533],"tindex":"ed5c8740-2eae-11e6-bff3-a581c498c458","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"ed5cae51-2eae-11e6-bff3-a7b70646a1cb","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"ed5d4a92-2eae-11e6-bff3-5996180f7173","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[534,468,474,535],"tindex":"ed5d71a3-2eae-11e6-bff3-7bf4fbfe518a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return isEqualValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"ed5d71a4-2eae-11e6-bff3-db563bc7ddf3","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[74,86,97,98,99,100,102,105,536],"tindex":"ed5d71a5-2eae-11e6-bff3-572b15578896","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (null == object) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564],"tindex":"ed5de6d6-2eae-11e6-bff3-4d870528a7ab","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"ed5de6d7-2eae-11e6-bff3-fd153fe37062","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[401,429,565],"tindex":"ed5de6d8-2eae-11e6-bff3-573cf8e1752b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[566,567,568],"tindex":"ed5e0de9-2eae-11e6-bff3-05d38135ec9a","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[60,61,63,65],"tindex":"ed5ef84a-2eae-11e6-bff3-2baab664d5a6","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[569,313,314,570,571,572],"tindex":"ed5f1f5b-2eae-11e6-bff3-29916f4c05df","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ed5f466c-2eae-11e6-bff3-d90a833fef62","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"ed5f466d-2eae-11e6-bff3-d1709c6c5dff","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ed5f466e-2eae-11e6-bff3-dd5015d6cbd6","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    final int int = map.size();\n                    if (size == 0) {\n                        return ;\n                    } \n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                        return ;\n                    } \n                    if (size < 4) {\n                        for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    } else {\n                        convertToMap();\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[573,574],"tindex":"ed5f6d7f-2eae-11e6-bff3-d31d851dcd77","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622],"tindex":"ed5f6d80-2eae-11e6-bff3-cf59bc81de9f","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"ed5f6d81-2eae-11e6-bff3-8bf8478dac37","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"ed5f6d82-2eae-11e6-bff3-7387459618fd","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                {\n                    if (closure == null) {\n                        throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"ed5f9493-2eae-11e6-bff3-25b0b347ed4a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"ed5f9494-2eae-11e6-bff3-7b59bc1c3971","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"ed5f9495-2eae-11e6-bff3-afb5331e06cf","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(get(index));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[623],"tindex":"ed5f9496-2eae-11e6-bff3-995411dceb00","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"ed5f9497-2eae-11e6-bff3-9f6da6d7df4c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[624],"tindex":"ed5fbba8-2eae-11e6-bff3-87b0c57240ba","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"ed5fbba9-2eae-11e6-bff3-9b03966d327f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"ed5fbbaa-2eae-11e6-bff3-79ef15931a9c","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[625,384,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,238,261,262,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,291,678,679,680,292,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,283,403,699,700,402,415,416,418,419,420,423,426,429,430,437,438,439,444,447,448,449,450,451,582,585,586,587,590,591,594,595,605,609,610,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,284,747,748,749,750,751,752,753,565,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,467,497,501,504,509,510,511,512,519,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800],"tindex":"ed6009cb-2eae-11e6-bff3-2d160c6383d3","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[801,264],"tindex":"ed6009cc-2eae-11e6-bff3-2d5af6b80ec6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}