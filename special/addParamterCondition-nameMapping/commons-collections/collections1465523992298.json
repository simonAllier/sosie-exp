{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":133,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":198,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":86,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":1,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":150,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":199,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":134,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":38,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":17,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":182,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":111,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":34,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":154,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":129,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":153,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":13,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":151,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":37,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":79,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":74,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":147,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":93,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":107,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":52,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":128,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":57,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":32,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":40,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":90,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":186,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":6,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":113,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":70,"org.apache.commons.collections4.CollectionUtilsTest.intersection":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":188,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":124,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":64,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":185,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":118,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":187,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":2,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":53,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":21,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":194,"org.apache.commons.collections4.map.CompositeMapTest.testPut":48,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":63,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":94,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":117,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":119,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":7,"org.apache.commons.collections4.map.CompositeMapTest.testGet":47,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":27,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":174,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":26,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":19,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":177,"org.apache.commons.collections4.set.CompositeSetTest.testContains":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":58,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":184,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":28,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":196,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":192,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":165,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":116,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":82,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":158,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":138,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":46,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":45,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":83,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":163,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":156,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":157,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":161,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":88,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":78,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":120,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":137,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":160,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":24,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":11,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":136,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":183,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":152,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":143,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":171,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":172,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":173,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":8,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":144,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":91,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":193,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":85,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":87,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":114,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":146,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":30,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":29,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":95,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":16,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":179,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":109,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":127,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":139,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":66,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":76,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":131,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":62,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":142,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":149,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":105,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":51,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":110,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":50,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":84,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":5,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":102},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"053ae96d-2eaf-11e6-a9a0-7171858b632e","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[30],"tindex":"053bfade-2eaf-11e6-a9a0-f1fa73eb328f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[31,32,33,34,35],"tindex":"053c48ff-2eaf-11e6-a9a0-2da80f4417d1","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[36],"tindex":"053c7010-2eaf-11e6-a9a0-e5cc93fcd6ef","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"053c7011-2eaf-11e6-a9a0-795b821f837d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"053c9722-2eaf-11e6-a9a0-295e5e17f43f","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 0) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[55,56,57],"tindex":"053cbe33-2eaf-11e6-a9a0-19dcdc0425fa","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtBinaryOperatorImpl","sourcecode":"retval > 0"},"failures":[58,59,60,61,62,63,64,65,66],"tindex":"053cbe34-2eaf-11e6-a9a0-f942fd34a5df","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex > 0) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"053d0c55-2eaf-11e6-a9a0-3dfe89989132","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"053d0c56-2eaf-11e6-a9a0-d3c3f2d8638f","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"reverseMap"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"053d3367-2eaf-11e6-a9a0-6f25f7718989","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"053d5a78-2eaf-11e6-a9a0-07b310fb56e9","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[131],"tindex":"053d8189-2eaf-11e6-a9a0-fbbfe7350bfd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"053d818a-2eaf-11e6-a9a0-73a16992ad18","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (null == key) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[83,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"053da89b-2eaf-11e6-a9a0-d36625c9db7f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (null == obj) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":15,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}