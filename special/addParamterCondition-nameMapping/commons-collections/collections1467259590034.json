{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":122,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":280,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":536,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":15,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":282,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":222,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":463,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":464,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":482,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":259,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":612,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":263,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":246,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":262,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":264,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":561,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":336,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":148,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":515,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":580,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":421,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":230,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":325,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":329,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":130,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":460,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":171,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":168,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":261,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":592,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":218,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":477,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":260,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":58,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":547,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":104,"org.apache.commons.collections4.CollectionUtilsTest.select":620,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":313,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":162,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":220,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":501,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":567,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":47,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":468,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":17,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":471,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":548,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":485,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":296,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":357,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":586,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":605,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":629,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":420,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":152,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":150,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":630,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":430,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":557,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":26,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":431,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":144,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":568,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":614,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":274,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":486,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":412,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":135,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":514,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":337,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":185,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":346,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":368,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":94,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":415,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":542,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":556,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":634,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":419,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":604,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":349,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":458,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":123,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":226,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":120,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":189,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":495,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":645,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":442,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":404,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":256,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":118,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":608,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":142,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":410,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":290,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":476,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":253,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":642,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":310,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":127,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":234,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":390,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":452,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":636,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":294,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":405,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":40,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":76,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":324,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":388,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":374,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":551,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":533,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":300,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":497,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":157,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":393,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":424,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":668,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":492,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":345,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":149,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":355,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":65,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":626,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":139,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":583,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":89,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":145,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":519,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":520,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":160,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":356,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":443,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":577,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":131,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":560,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":318,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":338,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":229,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":247,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":224,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":86,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":648,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":111,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":143,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":32,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":271,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":154,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":212,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":543,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":380,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":472,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":526,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":311,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":525,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":524,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":101,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":609,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":255,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":596,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":427,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":365,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":395,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":360,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":535,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":350,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":513,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":538,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":644,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":379,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":411,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":292,"org.apache.commons.collections4.CollectionUtilsTest.get1":344,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":362,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":213,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":425,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":64,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":278,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":184,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":8,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":400,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":487,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":137,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":445,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":448,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":332,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":369,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":444,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":616,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":433,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":225,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":386,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":119,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":223,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":202,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":534,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":376,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":451,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":493,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":72,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":601,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":475,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":328,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":473,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":305,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":354,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":10,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":179,"org.apache.commons.collections4.map.SingletonMapTest.testClone":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":496,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":161,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":656,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":78,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":450,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":236,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":638,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":627,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":281,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":339,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":502,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":342,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":544,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":67,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":353,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":455,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":657,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":288,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":585,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":7,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":30,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":309,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":491,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":517,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":569,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":385,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":401,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":570,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":571,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":306,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":285,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":293,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":287,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":503,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":546,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":192,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":221,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":594,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":602,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":449,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":396,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":383,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":252,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":57,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":6,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":654,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":24,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":637,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":90,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":308,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":483,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":303,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":574,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":116,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":348,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":190,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":187,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":42,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":467,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":617,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":283,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":366,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":527,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":304,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":530,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":549,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":169,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":389,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":341,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":593,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":377,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":327,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":367,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":589,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":71,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":295,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":91,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":129,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":643,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":323,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":511,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":479,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":660,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":207,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":469,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":177,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":631,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":572,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":172,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":509,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":61,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":640,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":227,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":233,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":590,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":70,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":402,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":650,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":188,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":500,"org.apache.commons.collections4.ListUtilsTest.testSelect":334,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":506,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":322,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":505,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":531,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":92,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":633,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":628,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":272,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":552,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":653,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":316,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":669,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":394,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":204,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":563,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":611,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":100,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":564,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":1,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":516,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":182,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":99,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":565,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":597,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":330,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":232,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":319,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":470,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":434,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":340,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":31,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":178,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":625,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":384,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":554,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":243,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":248,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":423,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":56,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":619,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":197,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":359,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":537,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":409,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":584,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":146,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":44,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":124,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":575,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":242,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":414,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":275,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":466,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":95,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":381,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":18,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":378,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":240,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":239,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":453,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":238,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":51,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":147,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":566,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":23,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":113,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":301,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":459,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":489,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":591,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":422,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":539,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":606,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":622,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":623,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":624,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":277,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":315,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":180,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":170,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":273,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":37,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":651,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":214,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":407,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":508,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":621,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":331,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":186,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":299,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":465,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":298,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":352,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":254,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":490,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":397,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":257,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":662,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":0,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":439,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":667,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":183,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":98,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":418,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":600,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":406,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":363,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":66,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":105,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":655,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":579,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":582},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"061696db-3e78-11e6-ad78-ad4fc3a84225","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"06170c0c-3e78-11e6-ad78-ede92ff77113","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"06170c0d-3e78-11e6-ad78-471803d0f8ad","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"06170c0e-3e78-11e6-ad78-7181c5fa6612","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"06170c0f-3e78-11e6-ad78-154bc53a0b65","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map != null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"06173320-3e78-11e6-ad78-07a37b7efa52","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[60],"tindex":"06173321-3e78-11e6-ad78-17c5f641b628","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"06173322-3e78-11e6-ad78-9fb0f9f4f3e5","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"06173323-3e78-11e6-ad78-c764a8bcecee","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[93,94],"tindex":"06175a34-3e78-11e6-ad78-2dca301e7782","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[95],"tindex":"06175a35-3e78-11e6-ad78-b7936c5c6bd4","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"06175a36-3e78-11e6-ad78-b90b5facfc0b","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"06178147-3e78-11e6-ad78-13770a6267b5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (doRemoveValue(o)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[96,97,98,99,100,101,102,103],"tindex":"06178148-3e78-11e6-ad78-a504fc8721e5","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"06178149-3e78-11e6-ad78-cdd101389b4e","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0617814a-3e78-11e6-ad78-457fe9233484","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[104,105,106,107,108,109,110,111,112,113],"tindex":"0617a85b-3e78-11e6-ad78-a3b5eb40f872","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"0617a85c-3e78-11e6-ad78-a923892656ca","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[211,212],"tindex":"0617a85d-3e78-11e6-ad78-d7edbb98d914","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[213],"tindex":"0617a85e-3e78-11e6-ad78-63d4e3749930","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"0617cf6f-3e78-11e6-ad78-01b68970e3be","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"0617cf70-3e78-11e6-ad78-2bb59d4d4afc","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"0617cf71-3e78-11e6-ad78-8d00cb218927","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[214,215,216,217,218],"tindex":"0617f682-3e78-11e6-ad78-c7a82e61511c","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                        while (e.hasNext()) {\n                            if (!(coll.contains(e.next()))) {\n                                e.remove();\n                                modified = true;\n                            } \n                        }\n                        return modified;\n                    } else {\n                        return decorated().retainAll(null);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[219],"tindex":"0617f683-3e78-11e6-ad78-ff698a83e9c7","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[220,221,222,223,224,225,226],"tindex":"0617f684-3e78-11e6-ad78-ab51fa69e14e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[227],"tindex":"06181d95-3e78-11e6-ad78-77c9af516597","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"06181d96-3e78-11e6-ad78-5590698ef44f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"06181d97-3e78-11e6-ad78-c98102520904","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1 == list1) {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"061844a8-3e78-11e6-ad78-cb5a187f20be","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"061844a9-3e78-11e6-ad78-c35c2dae9ee5","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end2 < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"061844aa-3e78-11e6-ad78-0be25aec83ee","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"061892cb-3e78-11e6-ad78-11108b2899b3","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"061892cc-3e78-11e6-ad78-99cea0b505ed","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[266],"tindex":"0618b9dd-3e78-11e6-ad78-c7d2c1068ecf","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0618b9de-3e78-11e6-ad78-cfc32ffe1371","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[267],"tindex":"0618b9df-3e78-11e6-ad78-d57c2d8ced3f","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                {\n                    if ((count <= 0) || (closure == null)) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    if (count == 1) {\n                        return ((org.apache.commons.collections4.Closure<E>)(closure));\n                    } \n                    return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[114,115,116,117,118,119,121,122,123,124,125,126,127,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,176,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"0618e0f0-3e78-11e6-ad78-abbed219e751","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0618e0f1-3e78-11e6-ad78-0928519c0537","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[95,268,269,270,271,272,273,274,97,100,102,103],"tindex":"0618e0f2-3e78-11e6-ad78-61840c495534","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"0618e0f3-3e78-11e6-ad78-21d539e513a8","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"06190804-3e78-11e6-ad78-d59a4edac864","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[334],"tindex":"06190805-3e78-11e6-ad78-af3f18bf7023","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"06190806-3e78-11e6-ad78-b3f353e70a03","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[335,336,337,338,339,340,341,342,343],"tindex":"06190807-3e78-11e6-ad78-73ad286dd7ff","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[344],"tindex":"06190808-3e78-11e6-ad78-130f014ba43d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[345],"tindex":"06192f19-3e78-11e6-ad78-cbc526867224","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415],"tindex":"06192f1a-3e78-11e6-ad78-2f57e58214bb","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"06192f1b-3e78-11e6-ad78-9bf4f0dc23ae","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[],"tindex":"0619562c-3e78-11e6-ad78-7337d950842a","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0619562d-3e78-11e6-ad78-97dba263dfda","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"0619562e-3e78-11e6-ad78-f1bed4e14d9e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0619562f-3e78-11e6-ad78-dd6d0004031b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(size(), coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"06195630-3e78-11e6-ad78-d1b16755b0bd","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[416],"tindex":"06195631-3e78-11e6-ad78-df8226f6ca2c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[175,195],"tindex":"06197d42-3e78-11e6-ad78-257b75d49a7b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"06197d43-3e78-11e6-ad78-d9b56a85e996","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[417],"tindex":"06197d44-3e78-11e6-ad78-3f23d1744182","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"06197d45-3e78-11e6-ad78-a914847cb355","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"06197d46-3e78-11e6-ad78-6b22752cfe02","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (doRemoveValue(o)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"06197d47-3e78-11e6-ad78-d1e09f76b1e2","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[418,419,420,421,422,423,424,425,426,427],"tindex":"06197d48-3e78-11e6-ad78-9d5d4794577f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[428],"tindex":"0619a459-3e78-11e6-ad78-7193f77be760","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"0619a45a-3e78-11e6-ad78-c37ded3ce201","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[429],"tindex":"0619a45b-3e78-11e6-ad78-c5d67b002668","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[430,106,431,432,433,434],"tindex":"0619a45c-3e78-11e6-ad78-f53e1a9463f5","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[435,436,437,438,439,440,441,442,443,444,445],"tindex":"0619a45d-3e78-11e6-ad78-3feef361b1f1","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"0619cb6e-3e78-11e6-ad78-7784fd45441d","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[446,447,448,449],"tindex":"0619cb6f-3e78-11e6-ad78-15fd87baff38","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0619cb70-3e78-11e6-ad78-6b302ad3202a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[450],"tindex":"0619cb71-3e78-11e6-ad78-d7b5ac468777","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[241,264],"tindex":"0619cb72-3e78-11e6-ad78-7bfd68f81a80","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[451],"tindex":"0619f283-3e78-11e6-ad78-1fb965b69d15","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[452],"tindex":"0619f284-3e78-11e6-ad78-81056cdcb0dc","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"0619f285-3e78-11e6-ad78-adcf0af8bcd4","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                        while (e.hasNext()) {\n                            if (!(coll.contains(e.next()))) {\n                                e.remove();\n                                modified = true;\n                            } \n                        }\n                        return modified;\n                    } else {\n                        return decorated().retainAll(null);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[453,454,455,456,457,458,459,460,461],"tindex":"0619f286-3e78-11e6-ad78-b50164a9a0cb","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[462,463,464,465,466],"tindex":"061a1997-3e78-11e6-ad78-4b706b6681b2","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[467],"tindex":"061a1998-3e78-11e6-ad78-3925b36bca0d","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < end) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[468,469,470,471,472,473,474,475,16,476,477,478,479,480,481,482,17,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,18,503,19,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,20,521,522,523,524,525,526,527,21,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,22,548,23,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,28,566,567,568,569,570,571,572,29,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,30,593,31,594,595,596,597,598,599,600,601,602,603],"tindex":"061a1999-3e78-11e6-ad78-71f05b333aae","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"061a199a-3e78-11e6-ad78-23ebeba01663","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[604],"tindex":"061a199b-3e78-11e6-ad78-2f9bdcb69412","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[113],"tindex":"061a40ac-3e78-11e6-ad78-3f7d517031da","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"061a40ad-3e78-11e6-ad78-038e7927c8aa","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"061a40ae-3e78-11e6-ad78-91f8c24371a6","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"061a40af-3e78-11e6-ad78-57e6853c45d6","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"061a40b0-3e78-11e6-ad78-3d5d3e4cb8c6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[236,241,605,606,607,242,608,609,610,611,259,612,262,264,613,614,615,265,616,617,618],"tindex":"061a40b1-3e78-11e6-ad78-bd2e2e81b285","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[467],"tindex":"061a67c2-3e78-11e6-ad78-918d06ef7b23","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[619],"tindex":"061a67c3-3e78-11e6-ad78-09150ce24356","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[620],"tindex":"061a67c4-3e78-11e6-ad78-597795f7dd03","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"061a8ed5-3e78-11e6-ad78-c957bf72931e","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[621],"tindex":"061a8ed6-3e78-11e6-ad78-631afd0d7ce9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[622,623,624,625,626,627,628,629,630,631,632,633,634],"tindex":"061a8ed7-3e78-11e6-ad78-a75607604e2e","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[635,636,637,638,639,452,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664],"tindex":"061ab5e8-3e78-11e6-ad78-a971651beb4a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[665,666],"tindex":"061ab5e9-3e78-11e6-ad78-85d1ff095ece","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"061ab5ea-3e78-11e6-ad78-f7a6961da43c","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[667,668,669],"tindex":"061ab5eb-3e78-11e6-ad78-0f19bf36e82a","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"061adcfc-3e78-11e6-ad78-df2f1416e02f","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                {\n                    if ((count <= 0) || (closure == null)) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    if (count == 1) {\n                        return ((org.apache.commons.collections4.Closure<E>)(closure));\n                    } \n                    return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[142,146,156,159,160,163,164,165,166,167],"tindex":"061adcfd-3e78-11e6-ad78-337c8e9cbe0e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[440,441],"tindex":"061adcfe-3e78-11e6-ad78-01b32650a2ec","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256431082/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}