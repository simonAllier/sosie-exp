{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":145,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":588,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":441,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":331,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":162,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":426,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":24,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":22,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":17,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":530,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":391,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":227,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":440,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":509,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":395,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":312,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":296,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":311,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":313,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":445,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":415,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":495,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":466,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":536,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":454,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":37,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":73,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":463,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":176,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":381,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":458,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":249,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":278,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":329,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":310,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":309,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":533,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":389,"org.apache.commons.collections4.CollectionUtilsTest.select":408,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":542,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":464,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":549,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":453,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":604,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":449,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":447,"org.apache.commons.collections4.CollectionUtilsTest.intersection":413,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":522,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":443,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":583,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":493,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":255,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":421,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":100,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":225,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":137,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":539,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":420,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":555,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":197,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":629,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":180,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":377,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":628,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":214,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":627,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":171,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":39,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":113,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":512,"org.apache.commons.collections4.map.CompositeMapTest.testPut":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":139,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":72,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":500,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":215,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":305,"org.apache.commons.collections4.map.CompositeMapTest.testGet":393,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":19,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":485,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":598,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":245,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":290,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":170,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":387,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":224,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":619,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":594,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":257,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":372,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":303,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":233,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":316,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":517,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":33,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":280,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":601,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":160,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":529,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":608,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":633,"org.apache.commons.collections4.CollectionUtilsTest.union":412,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":263,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":416,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":571,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":62,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":119,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":247,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":400,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":21,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":183,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":339,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":163,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":518,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":565,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":126,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":285,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":528,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":439,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":513,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":35,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":159,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":1,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":577,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":271,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":482,"org.apache.commons.collections4.ArrayStackTest.testSearch":186,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":442,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":324,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":250,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":582,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":207,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":547,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":368,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":546,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":222,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":326,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":375,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":281,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":7,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":365,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":596,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":294,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":550,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":622,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":343,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":356,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":525,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":586,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":467,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":114,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":489,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":272,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":90,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":581,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":192,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":213,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":143,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":479,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":95,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":181,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":342,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":490,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":128,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":595,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":77,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":504,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":30,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":251,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":461,"org.apache.commons.collections4.map.SingletonMapTest.testClone":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":573,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":276,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":452,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":46,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":405,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":605,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":196,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":102,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":432,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":514,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":554,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":266,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":161,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":177,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":258,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":423,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":203,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":231,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":348,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":592,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":380,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":156,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":520,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":364,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":623,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":277,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":431,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":631,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":335,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":336,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":584,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":600,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":384,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":334,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":591,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":29,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":350,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":574,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":370,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":228,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":404,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":302,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":406,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":18,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":499,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":398,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":559,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":92,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":611,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":599,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":373,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":140,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":134,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":363,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":593,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":589,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":414,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":12,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":367,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":75,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":541,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":345,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":26,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":497,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":456,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":579,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":104,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":298,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":618,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":299,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":487,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":208,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":133,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":603,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":185,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":437,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":8,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":74,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":410,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":538,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":256,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":386,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":383,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":132,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":402,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":165,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":560,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":283,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":544,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":41,"org.apache.commons.collections4.set.CompositeSetTest.testContains":232,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":506,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":376,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":468,"org.apache.commons.collections4.ListUtilsTest.testSelect":401,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":330,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":418,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":273,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":630,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":241,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":572,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":515,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":337,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":429,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":575,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":201,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":56,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":481,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":79,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":562,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":478,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":314,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":471,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":34,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":321,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":460,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":338,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":150,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":267,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":472,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":293,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":61,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":501,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":260,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":96,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":498,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":320,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":32,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":526,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":264,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":488,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":340,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":211,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":523,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":578,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":553,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":358,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":275,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":52,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":566,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":510,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":621,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":14,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":81,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":585,"org.apache.commons.collections4.map.LRUMapTest.testLRU":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":462,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":457,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":614,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":220,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":2,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":261,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":382,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":496,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":531,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":390,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":379,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":158,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":246,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":355,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":71,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":138,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":237,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":606,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":436,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":269,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":288,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":428,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":537,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":626,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":221,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":409,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":351,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":357,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":519,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":634,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":524,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":385,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":369,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":556},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"eae61686-2e8e-11e6-aa62-857a6fedda5f","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[0,1,2,3,4,5,6],"tindex":"eae727f7-2e8e-11e6-aa62-c3d68db0187f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"eae74f08-2e8e-11e6-aa62-8984aaaff8ae","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[7,8,9,10,11,12,13,14],"tindex":"eae77619-2e8e-11e6-aa62-b59c5366ffe6","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[15],"tindex":"eae7c43a-2e8e-11e6-aa62-8de4b1a7e6e0","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[16],"tindex":"eae7eb4b-2e8e-11e6-aa62-799ea316611b","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[17],"tindex":"eae8125c-2e8e-11e6-aa62-e9e158b4ad12","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[18,19],"tindex":"eae8396d-2e8e-11e6-aa62-7b1c56b6a5e1","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"eae8607e-2e8e-11e6-aa62-e15257c44d85","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[20],"tindex":"eae8878f-2e8e-11e6-aa62-43fdbd41562f","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"eae8aea0-2e8e-11e6-aa62-7f10c2647dd1","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"eae8fcc1-2e8e-11e6-aa62-bd2b9e5ca0c3","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[21],"tindex":"eae8fcc2-2e8e-11e6-aa62-6f3e2ccd7187","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"eae94ae3-2e8e-11e6-aa62-a7fccfc4dd41","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"eae9c014-2e8e-11e6-aa62-0fce5c00704b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[68],"tindex":"eae9c015-2e8e-11e6-aa62-73f9a2e11153","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[69,70,71,72,73,74,75,76,77],"tindex":"eae9c016-2e8e-11e6-aa62-5b9acf93cc41","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"eae9e727-2e8e-11e6-aa62-8dcd484b4c32","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"eae9e728-2e8e-11e6-aa62-07ef3d4c2139","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"eaea0e39-2e8e-11e6-aa62-5151a0f883f2","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[78,79,80,81,82,83,84,85,86,87,88],"tindex":"eaea0e3a-2e8e-11e6-aa62-2bd380253fc5","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"eaea354b-2e8e-11e6-aa62-b9ad0b211e7e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[89],"tindex":"eaea354c-2e8e-11e6-aa62-33b2c31201ce","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[90],"tindex":"eaea354d-2e8e-11e6-aa62-4d61f92e70f5","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"eaea5c5e-2e8e-11e6-aa62-61e6eb486d8f","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"eaea5c5f-2e8e-11e6-aa62-074f551dfafa","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[90,91,92],"tindex":"eaea5c60-2e8e-11e6-aa62-4bd2fc09ad4d","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"eaea8371-2e8e-11e6-aa62-a7c067e20293","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"eaea8372-2e8e-11e6-aa62-9b347c8e9d25","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[93],"tindex":"eaeaaa83-2e8e-11e6-aa62-57e8a6a77321","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[94],"tindex":"eaeaaa84-2e8e-11e6-aa62-751f07c37b52","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"eaeaaa85-2e8e-11e6-aa62-457220968625","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[95],"tindex":"eaeaaa86-2e8e-11e6-aa62-0134d70be794","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[96],"tindex":"eaead197-2e8e-11e6-aa62-47687320132c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (java.util.Set<E>.contains(next)) {\n                            setRetainAll.add(next);\n                        } \n                    }\n                    if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                        return false;\n                    } \n                    if ((setRetainAll.size()) == 0) {\n                        clear();\n                    } else {\n                        for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                            if (!(setRetainAll.contains(it.next()))) {\n                                it.remove();\n                            } \n                        }\n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"eaead198-2e8e-11e6-aa62-731cd32d74e7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"eaead199-2e8e-11e6-aa62-b9366bb42c1b","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[111],"tindex":"eaeaf8aa-2e8e-11e6-aa62-47a2354d2373","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"eaeaf8ab-2e8e-11e6-aa62-9b0efc90ce51","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[143,144,145,117,121,146,147,148,126,127,128,129,130,131,137,141,142],"tindex":"eaeb6ddc-2e8e-11e6-aa62-2dcb7a1cfbb3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[149,150,151,152],"tindex":"eaeb6ddd-2e8e-11e6-aa62-d566e249d4e4","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[153,154,69,155,156],"tindex":"eaeb94ee-2e8e-11e6-aa62-5bc61373151d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[157,158,159,160,161,162],"tindex":"eaeb94ef-2e8e-11e6-aa62-95ae602a9f7b","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start1 - start1) > (end1 - end1)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"end1","end1":"start1","start2":"end1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"eaebbc00-2e8e-11e6-aa62-f5fbe571acc1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"eaebbc01-2e8e-11e6-aa62-33c75681fcd8","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"eaebbc02-2e8e-11e6-aa62-2f468ddd3544","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[163,164,165,166,167,168,169],"tindex":"eaebe313-2e8e-11e6-aa62-d15f208c0e7f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[170],"tindex":"eaec0a24-2e8e-11e6-aa62-03a8123040e7","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[171,172,173,174,175,176,177,178,179],"tindex":"eaec0a25-2e8e-11e6-aa62-954a5d6143a9","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"eaec0a26-2e8e-11e6-aa62-376a77ccc647","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[180,181,182,183,184,185],"tindex":"eaec3137-2e8e-11e6-aa62-1bed302c25cb","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"eaec3138-2e8e-11e6-aa62-09d3bef33925","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,31],"tindex":"eaec3139-2e8e-11e6-aa62-dfac4730818b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"eaec584a-2e8e-11e6-aa62-fddd57b143f1","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"eaec7f5b-2e8e-11e6-aa62-8f606706eba7","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start == start) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"eaec7f5c-2e8e-11e6-aa62-155ec6cb049f","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"eaec7f5d-2e8e-11e6-aa62-f528616e43ec","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"eaeca66e-2e8e-11e6-aa62-939dcdc0b087","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[186],"tindex":"eaeca66f-2e8e-11e6-aa62-19203ee60ffa","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (null == object) {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[187,188],"tindex":"eaeca670-2e8e-11e6-aa62-fddff88d8fd4","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[189,190,191,192,193,194,195,21,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"eaeccd81-2e8e-11e6-aa62-47ef855e506c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[261],"tindex":"eaeccd82-2e8e-11e6-aa62-4f4c67de01c3","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[262,263,264],"tindex":"eaeccd83-2e8e-11e6-aa62-1770918b7291","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[265,266,267,268,269,270,271,272],"tindex":"eaecf494-2e8e-11e6-aa62-eb659f4515d2","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[273,274,275,276,277,278,267,279,280,281,282,283,284,285,286,287,288,289,290,291],"tindex":"eaecf495-2e8e-11e6-aa62-f596f41e472c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"eaed1ba6-2e8e-11e6-aa62-49f97e353e07","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[292],"tindex":"eaed42b7-2e8e-11e6-aa62-35b714a26900","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,34,35,37,38,41,42,45,46,51,52,54,55,56,64,31],"tindex":"eaed42b8-2e8e-11e6-aa62-89952974cf1b","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((b == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"eaed69c9-2e8e-11e6-aa62-abb8fc00fed7","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"eaed69ca-2e8e-11e6-aa62-8933045d8a98","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,78,331,332,333,334,335,336,79,80,337,81,338,339,82,83,340,341,84,85,86,87,88,342,343],"tindex":"eaed90db-2e8e-11e6-aa62-ddcf5293d3e1","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392],"tindex":"eaed90dc-2e8e-11e6-aa62-cd0a0d1ab9a2","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[393,394,395,396,397,398,399,400,401,402,230,231,232,233,234,235,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418],"tindex":"eaedb7ed-2e8e-11e6-aa62-e764ffaa7e3f","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"eaedb7ee-2e8e-11e6-aa62-814917a8a10f","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"eaedb7ef-2e8e-11e6-aa62-2befae3ae6b8","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[419],"tindex":"eaedb7f0-2e8e-11e6-aa62-359faa64f8a5","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"eaeddf01-2e8e-11e6-aa62-17a22380c8bd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"eaeddf02-2e8e-11e6-aa62-0ba4ba13966e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[145],"tindex":"eaeddf03-2e8e-11e6-aa62-a3cf64177349","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"eaee0614-2e8e-11e6-aa62-0b16d208a4b7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[420,421,422,423,424,425],"tindex":"eaee0615-2e8e-11e6-aa62-3d0f3d96ba34","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[426],"tindex":"eaee0616-2e8e-11e6-aa62-277cd350ccb5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[427,428,112,429,430,431,432,433,434,143,113,144,145,435,436,437,438,439,115,116,440,117,118,441,119,120,121,442,443,122,123,444,445,446,447,448,449,146,147,148,124,450,451,125,126,452,453,127,128,129,130,131,454,114,455,456,457,458,132,459,460,461,462,463,464,133,465,466,135,136,467,137,138,468,139,140,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,141,142,485,486,134],"tindex":"eaee2d27-2e8e-11e6-aa62-af9b224adeee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[487,488],"tindex":"eaee7b48-2e8e-11e6-aa62-5da66282e38a","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[489],"tindex":"eaee7b49-2e8e-11e6-aa62-952d41ec5b37","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[490,491,492,189,190,191,192,193,194,195,197,198,199,200,203,204,208,210,212,213,214,215,216,218,219,220,221,222,223,226,227,228,229,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,234,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,259,260,508,509,510,511,512,513,514,515,516,517,518],"tindex":"eaee7b4a-2e8e-11e6-aa62-4553f0e46acf","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"eaeea25b-2e8e-11e6-aa62-e5357ade77ee","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (java.util.Set<E>.contains(next)) {\n                            setRetainAll.add(next);\n                        } \n                    }\n                    if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                        return false;\n                    } \n                    if ((setRetainAll.size()) == 0) {\n                        clear();\n                    } else {\n                        for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                            if (!(setRetainAll.contains(it.next()))) {\n                                it.remove();\n                            } \n                        }\n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"eaeea25c-2e8e-11e6-aa62-d5d02a6636bb","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544],"tindex":"eaeea25d-2e8e-11e6-aa62-619e893a0bb2","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[545],"tindex":"eaeec96e-2e8e-11e6-aa62-d1ca41244c9f","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"eaeec96f-2e8e-11e6-aa62-19d2ec19c259","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"eaeec970-2e8e-11e6-aa62-d7fc136fca7c","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"eaeec971-2e8e-11e6-aa62-9f617bc97f22","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[546],"tindex":"eaeef082-2e8e-11e6-aa62-9fd4899cfaf2","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,264,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612],"tindex":"eaeef083-2e8e-11e6-aa62-17d1505a604d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[613,614,615,616],"tindex":"eaeef084-2e8e-11e6-aa62-a5083c548782","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[617,618,619],"tindex":"eaef1795-2e8e-11e6-aa62-0795de8390f8","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"eaef1796-2e8e-11e6-aa62-c12c2d49bc24","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"eaef1797-2e8e-11e6-aa62-372b4120bd93","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"eaef1798-2e8e-11e6-aa62-b951768246e7","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.List) == false) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[620,621,622,623,624,625,626,614,627,628,629,630,631,632,633,634,635],"tindex":"eaef3ea9-2e8e-11e6-aa62-b38627136f3e","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}