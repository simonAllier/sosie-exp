{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":4,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":293,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":606,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":294,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":533,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":57,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":586,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":396,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":408,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":175,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":493,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":474,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":323,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":454,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":213,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":456,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":457,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":32,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":147,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":578,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":2,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":83,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":139,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":525,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":93,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":269,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":182,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":79,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":450,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":445,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":511,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":73,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":241,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":297,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":71,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":359,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":222,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":409,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":29,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":220,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":334,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":80,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":435,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":324,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":552,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":302,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":587,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":404,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":480,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":150,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":151,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":149,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":611,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":292,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":442,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":143,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":270,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":207,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":204,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":3,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":410,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":528,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":50,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":235,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":443,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":48,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":208,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":257,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":508,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":126,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":333,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":234,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":123,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":322,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":568,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":200,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":189,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":530,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":36,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":141,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":310,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":260,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":390,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":428,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":411,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":448,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":510,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":441,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":69,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":467,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":45,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":46,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":47,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":539,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":576,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":330,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":481,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":188,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":503,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":391,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":485,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":378,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":307,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":156,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":609,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":473,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":148,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":138,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":430,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":506,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":418,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":144,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":38,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":266,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":423,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":159,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":559,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":336,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":130,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":230,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":264,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":382,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":340,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":180,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":498,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":535,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":580,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":534,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":142,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":486,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":331,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":280,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":432,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":154,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":516,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":153,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":349,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":518,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":9,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":172,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":614,"org.apache.commons.collections4.map.LRUMapTest.testClone":570,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":540,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":567,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":515,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":298,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":201,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":583,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":398,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":577,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":501,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":505,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":219,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":413,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":489,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":502,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":400,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":17,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":384,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":86,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":407,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":332,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":335,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":136,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":23,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":344,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":605,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":461,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":122,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":451,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":327,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":414,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":291,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":449,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":496,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":590,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":613,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":527,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":163,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":124,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":181,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":247,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":563,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":392,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":604,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":603,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":178,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":239,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":433,"org.apache.commons.collections4.map.LRUMapTest.testReset":572,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":160,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":381,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":190,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":237,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":524,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":211,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":212,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":434,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":379,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":225,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":119,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":341,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":483,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":520,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":321,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":326,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":347,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":616,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":296,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":421,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":573,"org.apache.commons.collections4.map.LinkedMapTest.testReset":513,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":584,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":11,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":250,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":556,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":135,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":314,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":299,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":431,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":5,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":303,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":284,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":360,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":402,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":607,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":301,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":118,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":444,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":406,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":546,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":538,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":545,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":253,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":64,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":42,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":174,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":536,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":177,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":245,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":416,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":548,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":343,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":305,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":395,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":582,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":56,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":325,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":10,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":477,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":186,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":244,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":89,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":252,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":263,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":490,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":592,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":462,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":615,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":171,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":555,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":44,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":453,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":317,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":618,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":422,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":304,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":471,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":561,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":251,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":361,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":425,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":210,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":363,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":362,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":380,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":319,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":523,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":70,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":345,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":81,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":427,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":542,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":541,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":128,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":15,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":313,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":206,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":560,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":522,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":218,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":447,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":203,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":74,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":492,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":329,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":373,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":13,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":229,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":1,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":187,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":279,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":412,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":479,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":509,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":594,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":500,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":155,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":90,"org.apache.commons.collections4.ListUtilsTest.testSelect":14,"org.apache.commons.collections4.map.LinkedMapTest.testClone":512,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":366,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":364,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":488,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":424,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":168,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":28,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":116,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":197,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":405,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":315,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":255,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":167,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":415,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":507,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":564,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":59,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":96,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":289,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":39,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":466,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":476,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":249,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":26,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":342,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":76,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":35,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":227,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":389,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":581,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":417,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":478,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":532,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":214,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":30,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":173,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":376,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":236,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":21,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":145,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":464,"org.apache.commons.collections4.CollectionUtilsTest.find":0,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":374,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":275,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":593,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":41,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":295,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":233,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":575,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":482,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":176,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":504,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":194,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":146,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":242,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":403,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":271,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":276,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":132,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":499,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":591,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":78,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":452,"org.apache.commons.collections4.map.LRUMapTest.testLRU":571,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":72,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":371,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":37,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":393,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":458,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":358,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":318,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":254,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":67,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":598,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":350,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":355,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":215,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":429,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":286,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":439,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":246,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":272,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":565,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":88,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":420,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":365,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":601,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":22,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":127,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":216,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":599,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":600,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":114,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":596,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":33,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":562,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":288,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":85,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":526,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":170,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":440,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":61,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":566,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":595,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":306,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":589,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":388},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"72b224e3-2ebe-11e6-a3e9-2bb67c413a07","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1],"tindex":"72b46ed4-2ebe-11e6-a3e9-e34f46c15f50","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[2,3],"tindex":"72b495e5-2ebe-11e6-a3e9-793ad7d96abd","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[4,5,6,7],"tindex":"72b495e6-2ebe-11e6-a3e9-67591abd4b42","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"72b64397-2ebe-11e6-a3e9-23f6c1b9416c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (collection == null) {\n                        throw new java.lang.NullPointerException(\"The collection must not be null\");\n                    } \n                    return (object != null) && (collection.add(object));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[8,9],"tindex":"72b66aa8-2ebe-11e6-a3e9-e72efd0cf001","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[10],"tindex":"72b691b9-2ebe-11e6-a3e9-650221f64456","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[11],"tindex":"72b691ba-2ebe-11e6-a3e9-7f2bae8ff2b2","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        {\n            if (closure == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"72b6b8cb-2ebe-11e6-a3e9-2fe61bd9b059","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[12,13],"tindex":"72b6b8cc-2ebe-11e6-a3e9-7970224ae44b","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"72b6b8cd-2ebe-11e6-a3e9-6bb1f8a3d1bd","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[14],"tindex":"72b6dfde-2ebe-11e6-a3e9-77f9353f3bbb","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"72b6dfdf-2ebe-11e6-a3e9-2980de72e005","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (expirationTimeObject != null) {\n                        final long long = expirationTimeObject.longValue();\n                        return (expirationTime >= 0) && (now >= expirationTime);\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"72b706f0-2ebe-11e6-a3e9-0bf006212986","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"72b706f1-2ebe-11e6-a3e9-51c535425716","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[63,64,65],"tindex":"72b706f2-2ebe-11e6-a3e9-697b816144a9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"72b72e03-2ebe-11e6-a3e9-e1f0121d53cf","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[66,67,68,69],"tindex":"72b72e04-2ebe-11e6-a3e9-b9d66fb7d1e0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"72b72e05-2ebe-11e6-a3e9-ff002e4ecc14","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"72b75516-2ebe-11e6-a3e9-17630d909d1b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"72b75517-2ebe-11e6-a3e9-c1c46d890545","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[167,168],"tindex":"72b77c28-2ebe-11e6-a3e9-af5514d3abac","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[169],"tindex":"72b7a339-2ebe-11e6-a3e9-3d8e1fed4761","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[170,170,171,171,172],"tindex":"72b7a33a-2ebe-11e6-a3e9-5b1d53353cfc","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[173],"tindex":"72b7a33b-2ebe-11e6-a3e9-954c92f69b12","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"tindex":"72b7ca4c-2ebe-11e6-a3e9-b972d52f9024","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"72b7ca4d-2ebe-11e6-a3e9-215dbad48d22","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound > len) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len","bound":"bound"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"72b7f15e-2ebe-11e6-a3e9-99644726ce1a","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[264,265,266,267,268,269],"tindex":"72b7f15f-2ebe-11e6-a3e9-6900d27dbdaf","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[270,271],"tindex":"72b7f160-2ebe-11e6-a3e9-278c7f10c1fb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"72b81771-2ebe-11e6-a3e9-a719d06ae6d4","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[272,273,274,275,276,277],"tindex":"72b81772-2ebe-11e6-a3e9-813e6b9115bb","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[30,37,55,58,59,60,61,62],"tindex":"72b81773-2ebe-11e6-a3e9-6bc7dbbb531e","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"72b83e84-2ebe-11e6-a3e9-57e6dc234d6b","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"72b83e85-2ebe-11e6-a3e9-9fdbbecbe3a9","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"72b83e86-2ebe-11e6-a3e9-61d786409981","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (collection == null) {\n                        throw new java.lang.NullPointerException(\"The collection must not be null\");\n                    } \n                    return (object != null) && (collection.add(object));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[278],"tindex":"72b86597-2ebe-11e6-a3e9-5f6e66497eec","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[279,279,280,281,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"tindex":"72b86598-2ebe-11e6-a3e9-f5b5d362d55a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[297],"tindex":"72b86599-2ebe-11e6-a3e9-d33362a50b7e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[298],"tindex":"72b88caa-2ebe-11e6-a3e9-53d5e74765ea","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"72b88cab-2ebe-11e6-a3e9-4de08dd34942","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"72b88cac-2ebe-11e6-a3e9-838dd254c613","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"72b88cad-2ebe-11e6-a3e9-813ab071468f","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[299],"tindex":"72b8b3be-2ebe-11e6-a3e9-9b57b5215c83","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[300,301,302,303,304,305,306,307,308,309],"tindex":"72b8b3bf-2ebe-11e6-a3e9-0761d60d3917","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[310,311,312,313],"tindex":"72b8b3c0-2ebe-11e6-a3e9-0ff67422ab8f","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[173,314],"tindex":"72b8dad1-2ebe-11e6-a3e9-592ed2ee0401","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[315],"tindex":"72b8dad2-2ebe-11e6-a3e9-17a0ac3aa32f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[316],"tindex":"72b901e3-2ebe-11e6-a3e9-5dd18dcbb01b","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"72b901e4-2ebe-11e6-a3e9-a79b1c6c2ccf","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[317],"tindex":"72b928f5-2ebe-11e6-a3e9-0f6387d079f9","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"72b928f6-2ebe-11e6-a3e9-53c42c53fb55","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[318,319,320,321,322,323,324,325],"tindex":"72b928f7-2ebe-11e6-a3e9-b37d5c6f1bfa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index > 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"72b928f8-2ebe-11e6-a3e9-9dd2d97a572f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"72b95009-2ebe-11e6-a3e9-9f3efa6e0fb0","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[326,327],"tindex":"72b9500a-2ebe-11e6-a3e9-e7b2ff8a6195","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[328],"tindex":"72b9500b-2ebe-11e6-a3e9-932b90f77d73","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[329],"tindex":"72b9771c-2ebe-11e6-a3e9-b17341e7c418","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[330,331,332,333],"tindex":"72b9771d-2ebe-11e6-a3e9-7d4cdac0eaa8","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"72b99e2e-2ebe-11e6-a3e9-57047e44cb91","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[334,335,336,67,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,69,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"72b99e2f-2ebe-11e6-a3e9-0dea71677cbd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[82,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418],"tindex":"72b99e30-2ebe-11e6-a3e9-4d81b936b819","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435],"tindex":"72b9c541-2ebe-11e6-a3e9-d150f4c39406","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[436],"tindex":"72b9c542-2ebe-11e6-a3e9-1b564530fdc0","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[437,438,439,440,441,442,443,444,445,446,447,448],"tindex":"72bc3643-2ebe-11e6-a3e9-35c1ec1ae322","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[449,450,451,452],"tindex":"72bc3644-2ebe-11e6-a3e9-c7065fc7f6ce","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index > 0) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"72bc5d55-2ebe-11e6-a3e9-970011fbbcdd","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[453],"tindex":"72bc5d56-2ebe-11e6-a3e9-41a3ade7fb1b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[167,454,455,456,457,458,270,459,460,461,462,463,190,197,198,271,199,464,200,201,202],"tindex":"72bc5d57-2ebe-11e6-a3e9-3be2e79f9335","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"72bc8468-2ebe-11e6-a3e9-8b4bdcb87e1c","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        {\n            if (closure == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[465,466],"tindex":"72bc8469-2ebe-11e6-a3e9-ffc4e6a551c6","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"72bc846a-2ebe-11e6-a3e9-7d0b2e62dc95","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[467,468,469,470,471],"tindex":"72bc846b-2ebe-11e6-a3e9-afe998a327d9","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1018","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"72bcab7c-2ebe-11e6-a3e9-b77bb0847bbf","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[472],"tindex":"72bcab7d-2ebe-11e6-a3e9-596dcfb77b9e","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[473],"tindex":"72bcd28e-2ebe-11e6-a3e9-63034a63b25e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"tindex":"72bcd28f-2ebe-11e6-a3e9-d53109c19376","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"72bcf9a0-2ebe-11e6-a3e9-8176ff815ec9","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[492],"tindex":"72bcf9a1-2ebe-11e6-a3e9-e1bd38fd4204","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[493],"tindex":"72bcf9a2-2ebe-11e6-a3e9-9b1f5b5d817b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"72bd20b3-2ebe-11e6-a3e9-7579dddabf3a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"72bd20b4-2ebe-11e6-a3e9-f1a59eb078ce","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[17,19,20,25,33,60,61],"tindex":"72be0b15-2ebe-11e6-a3e9-1b227d8961f4","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[494],"tindex":"72be0b16-2ebe-11e6-a3e9-4fe88a44ab53","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[495,496,497],"tindex":"72be0b17-2ebe-11e6-a3e9-ddea0ba22c97","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[498],"tindex":"72be3228-2ebe-11e6-a3e9-4bb3211371f5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[475,499],"tindex":"72be3229-2ebe-11e6-a3e9-bb437928aa08","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"72be322a-2ebe-11e6-a3e9-41962375559c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"72be593b-2ebe-11e6-a3e9-bbdeaa4f0df8","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"72be593c-2ebe-11e6-a3e9-ade1587cd45e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"72be593d-2ebe-11e6-a3e9-29426cfc2b4d","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[77,78,117,119,120],"tindex":"72be804e-2ebe-11e6-a3e9-83e982a94e52","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[],"tindex":"72be804f-2ebe-11e6-a3e9-cd37dbf29231","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (expirationTimeObject != null) {\n                        final long long = expirationTimeObject.longValue();\n                        return (expirationTime >= 0) && (now >= expirationTime);\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[500,501,502,503,504],"tindex":"72be8050-2ebe-11e6-a3e9-9f1e8f0489bf","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[505],"tindex":"72be8051-2ebe-11e6-a3e9-31f9d88469cc","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"72bea762-2ebe-11e6-a3e9-3ba3d747cb9b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[506,507,508,509,510,511,512,513,473,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,7,617,618],"tindex":"72bea763-2ebe-11e6-a3e9-ab2b0b8a6355","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"72bece74-2ebe-11e6-a3e9-bdcf7bfe43c7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"put instanceof java.util.Map"},"failures":[506],"tindex":"72bece75-2ebe-11e6-a3e9-6f0ae5e85d6c","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put instanceof java.util.Map) {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[31,37,51,54],"tindex":"72bef586-2ebe-11e6-a3e9-d3729c5d64e8","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}