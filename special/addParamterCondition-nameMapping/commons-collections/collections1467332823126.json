{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":869,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":442,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":305,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":188,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":393,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":470,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":725,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":771,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":796,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":71,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":570,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":640,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":635,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":579,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":79,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSerializeDeserializeThenCompare":882,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":792,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":350,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":149,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":410,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":80,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":139,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":181,"org.apache.commons.collections4.CollectionUtilsTest.get":772,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":474,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":669,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":425,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":564,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":226,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":443,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":812,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":15,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":494,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":801,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":240,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":397,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":123,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":688,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":357,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":523,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":540,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":551,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":815,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":680,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":127,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":643,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":521,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":693,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":429,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":93,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":482,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":483,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":142,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":189,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":876,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":665,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":469,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":615,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":614,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":613,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":776,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":760,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":43,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":675,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":567,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":340,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":803,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":538,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":68,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":588,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":590,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":247,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":514,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":711,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":560,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":660,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":589,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":845,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":133,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":596,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":865,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":595,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":501,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":592,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":372,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":378,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":304,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":767,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":95,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":195,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":496,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":883,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":251,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":878,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":451,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":465,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":167,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":573,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":342,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":710,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":703,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":840,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":511,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":394,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFullMapCompatibility":746,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":295,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":445,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":446,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":177,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":382,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":877,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":231,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":318,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":879,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":423,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":662,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":770,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":558,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":709,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":222,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":646,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":272,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":599,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":584,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":627,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":432,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":218,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":607,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":130,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":355,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":692,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":306,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":628,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":370,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":587,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":85,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":846,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":698,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":550,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":787,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":389,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":655,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":563,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":346,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":576,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapHashCode":728,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":25,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":369,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":368,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":367,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":532,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":178,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":641,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":674,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":31,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":850,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":827,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":524,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":839,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":539,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":777,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":387,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":580,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":528,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":455,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":696,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":384,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":625,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalEmptyCollectionExists":888,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":828,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":519,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":409,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":575,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":594,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":52,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":371,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":428,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":185,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":252,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":836,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":203,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":175,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":90,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":788,"org.apache.commons.collections4.ListUtilsTest.testPartition":783,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":300,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":880,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMakeMap":741,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":617,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":94,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":84,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":238,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":666,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":531,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testCanonicalEmptyCollectionExists":763,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":291,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":505,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":791,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":98,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":473,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":112,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":671,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":583,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":17,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":109,"org.apache.commons.collections4.map.HashedMapTest.testClone":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":568,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":795,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":849,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":441,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":694,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":500,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":651,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":408,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":648,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":774,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":311,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":166,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":867,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":344,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":526,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":809,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":691,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":153,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":731,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":730,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":729,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":884,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":241,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":171,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":315,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":258,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":399,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":398,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":400,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":245,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":383,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":778,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":424,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":488,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":793,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":537,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":264,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":13,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":246,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":832,"org.apache.commons.collections4.list.TreeListTest.testBug35258":237,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":380,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.LinkedMapTest.testClone":379,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":257,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":835,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":686,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":265,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":616,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":825,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":418,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":439,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":509,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":754,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":420,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":525,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":690,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":802,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":336,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":618,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":890,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":561,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalFullCollectionExists":886,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToString":872,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":433,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":53,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":148,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":555,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":553,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testCanonicalFullCollectionExists":761,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":187,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":591,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":717,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":838,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":534,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":748,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":102,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":676,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":749,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":820,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":128,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":565,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":347,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRetainAll":727,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":834,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":299,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":547,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":546,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":719,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":97,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":606,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":831,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":6,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":60,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":486,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":287,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":385,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":656,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":310,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":577,"org.apache.commons.collections4.map.LRUMapTest.testLRU":335,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":249,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":612,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":681,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsSelfHashCode":766,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":220,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":476,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":601,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":279,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":739,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":135,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":649,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":276,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":790,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":173,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":86,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":36,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":345,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":705,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":620,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":874,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":363,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":736,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":186,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":499,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":782,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":266,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":268,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":861,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":415,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":404,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":821,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":356,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":807,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":518,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":485,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":756,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":484,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":212,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":529,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":799,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":871,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":581,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":227,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":768,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":450,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":779,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":206,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":255,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":855,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":81,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":885,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":66,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":122,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":391,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":843,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":860,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":392,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":841,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSimpleSerialization":764,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":278,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":578,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":294,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":848,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":434,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":810,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":412,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":833,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":91,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":683,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":137,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":143,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":104,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":44,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":464,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":10,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":704,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":520,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":689,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":121,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":472,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":851,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":302,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":373,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":549,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":632,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":30,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":663,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":794,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":182,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesClearChangesMap":759,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":713,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":225,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":586,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":650,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":390,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":274,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":214,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":5,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":808,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":46,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":215,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":466,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":718,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":701,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":854,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":830,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":515,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":516,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":284,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":224,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":301,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":435,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":269,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":490,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":160,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":348,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":65,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":697,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":823,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":866,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":542,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":535,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":437,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":62,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":735,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullKey":743,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":426,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":262,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":887,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":9,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":427,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":26,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":554,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":332,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEmptyMapCompatibility":744,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":174,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":722,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":723,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":724,"org.apache.commons.collections4.list.TreeListTest.testRemove":234,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":733,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":806,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":132,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":863,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":862,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":38,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":256,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":678,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":864,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":881,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":23,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":562,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":448,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":447,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":510,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":668,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":813,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":260,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":742,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":497,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":633,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":636,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":805,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":609,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":207,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":375,"org.apache.commons.collections4.map.LRUMapTest.testClone":334,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":319,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":677,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSimpleSerialization":889,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":349,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":92,"org.apache.commons.collections4.ListUtilsTest.testSubtract":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":745,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":67,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":842,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":603,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":406,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":297,"org.apache.commons.collections4.list.TreeListTest.testListEquals":239,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":193,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":571,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":498,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":753,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":605,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":191,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":192,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":32,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveAll":740,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":870,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":213,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":684,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":146,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":244,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":673,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":417,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":873,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":661,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsSelfHashCode":891,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":714,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":436,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":747,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":115,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":781,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":789,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":527,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":699,"org.apache.commons.collections4.map.SingletonMapTest.testClone":623,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":559,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":762,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":868,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":196,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":236,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":653,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":664,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":96,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":230,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":354,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":18,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":2,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":645,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":158,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":507,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":277,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":639,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":670,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":720,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":752,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":76,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":145,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetClearChangesMap":732,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":647,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":608,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":463,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":685,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":780,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":403,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":281,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":290,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":402,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":401,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":396,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":569,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":819,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":78,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRetainAll":758,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":82,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":157,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":253,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":631,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":267,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":228,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":111,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":16,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":757,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":353,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":323,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":324,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":325,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":829,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":522,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":504,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":414,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":270,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":773,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":100,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":822,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":797,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":638,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":667,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":672,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":600,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":814,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":734,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":784,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":54,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":360,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":376,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":765,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":506,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":811,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":422,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":312,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullValue":737,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":715,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":208,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":250,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":634,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":242,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":856,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":343,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":283,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveAll":751,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":288,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":313,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":837,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":24,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":493,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":626,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":533,"org.apache.commons.collections4.set.CompositeSetTest.testContains":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":273,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":362,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":381,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":622,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":857,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":168,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":12,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":233,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":467,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":20,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":201,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":209,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":585,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":818,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":824,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":716,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":11,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":707,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":775,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":566,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":64,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":644,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":303,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":328,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":755,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":654,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":610,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":804,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":541,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":859,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":858,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":659,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":556,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":77,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":155,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":456,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":726,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":530,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":0,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":492,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":816,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":544,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":545,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":853,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":316,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":769,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":852,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":502,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":657,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":552,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":478,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":413,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":359,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":658,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":700,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":817,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":503,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":637,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":309,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":679,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":296,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":786,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":721,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":785,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":337,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":847,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":163,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":164,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":750,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":495,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":364,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":365,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":140,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":611,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":221,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":49,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":120,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":119,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":480,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":431,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":248,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":144,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":298,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":875,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":338,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":88,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":826,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":282,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":358,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":844},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8],"tindex":"895907be-3f22-11e6-8cb8-17ba820f3adb","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8966ea6f-3f22-11e6-8cb8-ff8a6dfef8a3","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[9],"tindex":"89671180-3f22-11e6-8cb8-ef79d005af9c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[10],"tindex":"89673891-3f22-11e6-8cb8-935aa7bad754","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[11,12],"tindex":"896786b2-3f22-11e6-8cb8-13a4520221d3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl"},"failures":[13],"tindex":"8967d4d3-3f22-11e6-8cb8-dd422ec6d6ac","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8967d4d4-3f22-11e6-8cb8-3de40e1de0f0","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"8967fbe5-3f22-11e6-8cb8-89afaa5e56d2","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[70],"tindex":"896822f6-3f22-11e6-8cb8-cd5a28db537e","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896822f7-3f22-11e6-8cb8-61bc755839c7","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[71],"tindex":"89684a08-3f22-11e6-8cb8-d1c5ca733305","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"89684a09-3f22-11e6-8cb8-8dd9a616ec07","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl"},"failures":[72],"tindex":"89684a0a-3f22-11e6-8cb8-b934fd3a38cf","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8968711b-3f22-11e6-8cb8-c73595b2c07d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[0,73,74,75,76,77,78,79,4,80,81,82,83,84,85,86,87,88,89,90,91,92,1,93,94,95,96,97,2,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111],"tindex":"8968711c-3f22-11e6-8cb8-e322552defe5","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[112],"tindex":"8968e64d-3f22-11e6-8cb8-63b21a319481","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[113],"tindex":"8968e64e-3f22-11e6-8cb8-c33beb2f62b7","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"89690d5f-3f22-11e6-8cb8-ad848e808a3c","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"89690d60-3f22-11e6-8cb8-177c7100c04a","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[114,115,116,117,118],"tindex":"89690d61-3f22-11e6-8cb8-ffa45b587285","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[53],"tindex":"89693472-3f22-11e6-8cb8-4b39fa0406e4","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"89693473-3f22-11e6-8cb8-334b03e16f5b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[119,120,121],"tindex":"89695b84-3f22-11e6-8cb8-07702bb21620","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"89695b85-3f22-11e6-8cb8-b91271fb3247","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtBinaryOperatorImpl"},"failures":[122],"tindex":"89695b86-3f22-11e6-8cb8-5f48e4f07438","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[123],"tindex":"89698297-3f22-11e6-8cb8-39381757d3d9","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[124,125,126,127,128,129,130,131,48,132,133,134,135,136,137,49,138,139,140,141,142,143,144,145,146,147],"tindex":"89698298-3f22-11e6-8cb8-0bb904411973","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[148,149],"tindex":"89698299-3f22-11e6-8cb8-61dac129363b","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[150,151],"tindex":"8969a9aa-3f22-11e6-8cb8-d36a22ad7172","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1018","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8969a9ab-3f22-11e6-8cb8-b760879f3091","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[152,153,154],"tindex":"8969a9ac-3f22-11e6-8cb8-df436c74d5f9","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[155,156],"tindex":"8969a9ad-3f22-11e6-8cb8-ed5e1316f60f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"8969d0be-3f22-11e6-8cb8-15280e53b547","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"8969f7cf-3f22-11e6-8cb8-6d068c271033","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl"},"failures":[266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,9,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525],"tindex":"8969f7d0-3f22-11e6-8cb8-7b972f2d086a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,150,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570],"tindex":"896a1ee1-3f22-11e6-8cb8-41bbab8e7e04","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl"},"failures":[571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590],"tindex":"896a45f2-3f22-11e6-8cb8-9b2c19d0ab33","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtBinaryOperatorImpl"},"failures":[266,273,274,279,281,291,292,297,299,76,77,78,93,101,108,109,3,4,80,83,84,85,86,87,305,306,307,319,323,324,326,327,328,329,330,331,332,333,591,592,593,594,595,596,7,8,597,598,599,600,601,602,343,344,345,346,349,350,351,363,367,368,370,371,372,373,374,375,376,377,9,383,384,385,397,401,402,404,405,406,407,408,409,410,411,417,418,419,420,422,423,424,440,447,448,450,453,454,457,458,459,460,461,463,464,465,477,481,482,484,485,486,487,488,489,490,491,497,498,499,511,515,516,518,519,520,521,522,523,524,525],"tindex":"896a45f3-3f22-11e6-8cb8-4dafba118fd0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896a6d04-3f22-11e6-8cb8-57f15b8d9fd4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl"},"failures":[603,571,572],"tindex":"896a6d05-3f22-11e6-8cb8-a9f77b01c8e8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (c == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896a6d06-3f22-11e6-8cb8-0b51a9e36908","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[604],"tindex":"896a9417-3f22-11e6-8cb8-dfd0a71b7e2e","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621],"tindex":"896a9418-3f22-11e6-8cb8-370cb4c5038a","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl"},"failures":[622],"tindex":"896a9419-3f22-11e6-8cb8-d7b923b76efc","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896abb2a-3f22-11e6-8cb8-0794ab5c77a8","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[623,624,625,626,627],"tindex":"896abb2b-3f22-11e6-8cb8-35586f592d0b","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[628,629,630],"tindex":"896abb2c-3f22-11e6-8cb8-9796ee399a1c","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660],"tindex":"896ae23d-3f22-11e6-8cb8-770ddbad76f7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896ae23e-3f22-11e6-8cb8-1718b8fb0ede","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896ae23f-3f22-11e6-8cb8-855ef983d2d8","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896b0950-3f22-11e6-8cb8-3da841e6d71f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896b0951-3f22-11e6-8cb8-6593b1d55045","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl"},"failures":[661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,112,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692],"tindex":"896b0952-3f22-11e6-8cb8-1f10c6d3a927","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[150,151,693],"tindex":"896b0953-3f22-11e6-8cb8-87db8480f3e1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[694],"tindex":"896b3064-3f22-11e6-8cb8-573174c10cd7","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[378],"tindex":"896b3065-3f22-11e6-8cb8-3f8436c2a56c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[70,695],"tindex":"896b5776-3f22-11e6-8cb8-5bd29b4c284b","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896b5777-3f22-11e6-8cb8-e521436f6ecb","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896b5778-3f22-11e6-8cb8-fd4aeef925ea","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[696,697,698,699,700],"tindex":"896b5779-3f22-11e6-8cb8-71fec17d46e4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[52,54,701,702],"tindex":"896b7e8a-3f22-11e6-8cb8-b3608eac92f3","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[703,704,705,706,707,708,709,710],"tindex":"896b7e8b-3f22-11e6-8cb8-3bd786258189","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[11],"tindex":"896b7e8c-3f22-11e6-8cb8-2faeb4bc8c29","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896b7e8d-3f22-11e6-8cb8-05e2e43d5f58","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl"},"failures":[711,712,713,714],"tindex":"896ba59e-3f22-11e6-8cb8-6dbecf353cd4","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[414,415,416,417],"tindex":"896ba59f-3f22-11e6-8cb8-63e66a119ef9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[715,716],"tindex":"896ba5a0-3f22-11e6-8cb8-953cb7e4885e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return get(java.util.List<K>.get(index));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767],"tindex":"896bccb1-3f22-11e6-8cb8-51390210baa2","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[768],"tindex":"896bccb2-3f22-11e6-8cb8-cdfcae2b09bf","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl"},"failures":[769],"tindex":"896bccb3-3f22-11e6-8cb8-5b3bdf232984","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[770],"tindex":"896bf3c4-3f22-11e6-8cb8-7f51c0dfb587","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl"},"failures":[628],"tindex":"896bf3c5-3f22-11e6-8cb8-abcf2bd0d285","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[771,772],"tindex":"896bf3c6-3f22-11e6-8cb8-3d21b71f2aa7","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896c1ad7-3f22-11e6-8cb8-aba9ab7f7cea","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896c1ad8-3f22-11e6-8cb8-93a33cacf5c8","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896c41e9-3f22-11e6-8cb8-bdf4fe6aba56","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896c41ea-3f22-11e6-8cb8-197615032ac6","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[318],"tindex":"896c41eb-3f22-11e6-8cb8-b3b6657e452c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[773,774,775,776],"tindex":"896c68fc-3f22-11e6-8cb8-c31f9902c5e6","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[606,610,612,613,614,615,616,617,618,619,620,621],"tindex":"896c68fd-3f22-11e6-8cb8-ef4632a374e0","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896c900e-3f22-11e6-8cb8-9f563f69eea9","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896c900f-3f22-11e6-8cb8-2bfed65906ba","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.IterableMap) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (factory == null) {\n                        throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n                    } \n                    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[777,16,778,779],"tindex":"896c9010-3f22-11e6-8cb8-f1facf2d973c","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[780,781],"tindex":"896cb721-3f22-11e6-8cb8-bd441442563c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[782],"tindex":"896cde32-3f22-11e6-8cb8-755ffc26d140","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl"},"failures":[783],"tindex":"896cde33-3f22-11e6-8cb8-edf6ba05ea87","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl"},"failures":[414,416],"tindex":"896cde34-3f22-11e6-8cb8-47edb919fcf0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896d0545-3f22-11e6-8cb8-e541deacc0d2","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.IterableMap) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (factory == null) {\n                        throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n                    } \n                    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896d0546-3f22-11e6-8cb8-d3e616411a68","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896d0547-3f22-11e6-8cb8-d758c4322c3a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896d2c58-3f22-11e6-8cb8-6b92ef4ea9b6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl"},"failures":[784],"tindex":"896d2c59-3f22-11e6-8cb8-5df05bd44e79","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[785,786,787,788],"tindex":"896d2c5a-3f22-11e6-8cb8-d713ed6ead8e","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896d536b-3f22-11e6-8cb8-e9dd8a121761","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[789],"tindex":"896d536c-3f22-11e6-8cb8-65ff75cc3c5a","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"896d536d-3f22-11e6-8cb8-8d915ee748f9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return get(java.util.List<K>.get(index));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[790,791,792,793,715,155,794,795,156,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,716,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,412,611,619,620,849,850,851],"tindex":"896e3dce-3f22-11e6-8cb8-31845e3c8207","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[852,853],"tindex":"896e64df-3f22-11e6-8cb8-bd6ed049487a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[0,75,89,90,92,1,93,94,96,2,100,101,105,106,107,108,109,110,80,83,84,85,86,87,308,309,310,311,312,314,319,320,321,322,323,324,325,330,854,855,856,857,5,858,859,860,6,861,594,862,863,864,595,596,865,597,598,599,600,601,602,334,336,341,347,348,352,353,354,355,356,357,358,359,362,363,364,365,366,367,368,369,374,375,376,381,382,386,387,388,389,390,392,393,396,397,398,399,400,401,402,403,408,426,427,429,430,431,434,436,439,440,444,445,446,447,448,449,458,466,467,468,469,470,472,473,476,477,478,479,480,481,482,483,488,500,501,502,503,504,506,507,510,511,512,513,514,515,516,517,522],"tindex":"896e8bf0-3f22-11e6-8cb8-af6520aec386","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl"},"failures":[866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891],"tindex":"896e8bf1-3f22-11e6-8cb8-53a8770207e5","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (coll == null) {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467326868718/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}