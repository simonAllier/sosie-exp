{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":388,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":339,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":272,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":150,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":163,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":225,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":53,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":222,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":333,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":618,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":246,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":435,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":249,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":279,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":241,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":436,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":627,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":399,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":157,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":353,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":12,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":395,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":559,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":560,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":114,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":356,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":251,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":260,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":101,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":593,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":349,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":364,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":191,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":421,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":341,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":315,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":581,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":189,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":327,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":539,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":573,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":307,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":413,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":244,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":326,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":544,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":306,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":566,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":479,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":204,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":473,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":103,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":451,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":537,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":403,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":401,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":545,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":179,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":397,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":438,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":208,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":519,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":3,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":464,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":294,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":489,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":521,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":177,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":231,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":600,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":148,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":324,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":62,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":131,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":551,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":467,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":590,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":389,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":531,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":386,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":355,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":105,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":480,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":255,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":455,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":299,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":571,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":89,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":606,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":137,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":598,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":271,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":588,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":130,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":187,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":604,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":16,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":416,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":50,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":318,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":624,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":626,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":583,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":481,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":273,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":510,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":45,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":501,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":291,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":193,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":374,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":427,"org.apache.commons.collections4.CollectionUtilsTest.union":23,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":607,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":425,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":408,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":505,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":24,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":608,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":257,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":31,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":394,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":323,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":617,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":14,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":472,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":393,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":535,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":487,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":200,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":284,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":423,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":320,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":199,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":274,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":370,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":484,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":117,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":210,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":405,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":439,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":404,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":628,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":252,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":563,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":112,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":171,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":494,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":113,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":534,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":456,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":565,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":574,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":91,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":303,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":330,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":507,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":476,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":468,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":485,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":613,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":300,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":242,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":459,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":354,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":512,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":11,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":548,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":605,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":43,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":441,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":317,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":265,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":115,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":540,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":245,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":385,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":367,"org.apache.commons.collections4.IteratorUtilsTest.testToList":55,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":490,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":264,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":517,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":615,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":431,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":387,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":313,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":35,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":253,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":620,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":347,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":205,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":275,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":549,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":447,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":145,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":504,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":382,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":553,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":332,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":173,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":520,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":334,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":555,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":259,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":161,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":578,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":156,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":596,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":602,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":579,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":609,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":422,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":198,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":221,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":514,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":460,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":229,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":572,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":477,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":498,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":116,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":381,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":132,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":283,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":420,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":78,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":557,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":577,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":357,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":445,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":54,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":622,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":207,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":129,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":268,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":508,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":568,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":585,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":160,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":335,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":527,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":532,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":203,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":240,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":196,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":282,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":17,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":176,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":458,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":513,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":304,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":378,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":6,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":219,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":597,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":523,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":528,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":5,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":561,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":192,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":442,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":232,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":155,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":426,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":197,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":107,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":623,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":292,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":21,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":340,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":108,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":550,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":502,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":547,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":491,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":293,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":263,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":215,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":351,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":289,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":587,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":391,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":29,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":185,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":372,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":352,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":344,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":109,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":254,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":314,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":212,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":582,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":478,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":243,"org.apache.commons.collections4.ListUtilsTest.testSelect":462,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":562,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":542,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":218,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":589,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":328,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":424,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":338,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":434,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":621,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":379,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":25,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":450,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":546,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":369,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":430,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":366,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":359,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":373,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":346,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":211,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":497,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":159,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":138,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":235,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":58,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":368,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":475,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":41,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":310,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":15,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":592,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":380,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":463,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":444,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":492,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":449,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":398,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":558,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":238,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":266,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":569,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":452,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":106,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":269,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":329,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":348,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":342,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":59,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":538,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":195,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":217,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":104,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":437,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":276,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":181,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":278,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":536,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":230,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":483,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":239,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":469,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":419,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":554,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":281,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":390,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":83,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":509,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":377,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":28,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":22,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":296,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":146,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":612,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":125,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":32,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":482,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":543,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":167,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":301,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":258,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":603,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":164},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"f1702344-2e9d-11e6-a2cf-a3cf09f09c61","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f170e695-2e9d-11e6-a2cf-f1a318bfd702","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if (coll == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().addAll(transform(coll));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[0],"tindex":"f1737ea6-2e9d-11e6-a2cf-e5955c436f13","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"f173a5b7-2e9d-11e6-a2cf-4535740bb9b6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[16,17,18,19,20,21,22,23,24,25],"tindex":"f173ccc8-2e9d-11e6-a2cf-dd080c991eaf","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f173ccc9-2e9d-11e6-a2cf-bdda33fc1fa9","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f173f3da-2e9d-11e6-a2cf-09ca7c453989","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"f173f3db-2e9d-11e6-a2cf-a5947e3df875","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[26],"tindex":"f1741aec-2e9d-11e6-a2cf-7dfc986febbd","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    final int int = size();\n                    if ((index < 0) || (index >= sz)) {\n                        throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n                    } \n                    final int int = ((int) + index) % (int);\n                    return E[][idx];\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[27],"tindex":"f17441fd-2e9d-11e6-a2cf-771fd8c5e66f","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[28],"tindex":"f17441fe-2e9d-11e6-a2cf-a9536eb6df95","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[29,30],"tindex":"f174b72f-2e9d-11e6-a2cf-958b48fff3f5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[31,32],"tindex":"f174de40-2e9d-11e6-a2cf-7db1c22772d2","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"f1750551-2e9d-11e6-a2cf-1d2895801912","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"f1750552-2e9d-11e6-a2cf-073d394c542a","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[51,52,53],"tindex":"f1752c63-2e9d-11e6-a2cf-6550559e1275","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[54,55,56],"tindex":"f1752c64-2e9d-11e6-a2cf-772da2c29f0f","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"f1755375-2e9d-11e6-a2cf-79fed1418e4f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[69,70,71,72,73,74],"tindex":"f1755376-2e9d-11e6-a2cf-67e618706bb1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[75],"tindex":"f1757a87-2e9d-11e6-a2cf-213a0cc316bd","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"f1757a88-2e9d-11e6-a2cf-ebfde31a1052","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"f175a199-2e9d-11e6-a2cf-99b00058c428","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f175a19a-2e9d-11e6-a2cf-3385c5a897e2","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[95,96],"tindex":"f175a19b-2e9d-11e6-a2cf-c7537f96032b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"f175c8ac-2e9d-11e6-a2cf-499d70a404ca","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[97,98,53,99,100],"tindex":"f175c8ad-2e9d-11e6-a2cf-87b0c6294c27","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"f175efbe-2e9d-11e6-a2cf-178feeb24cd1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"f175efbf-2e9d-11e6-a2cf-6bd77a7e4ae6","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[117,118],"tindex":"f17616d0-2e9d-11e6-a2cf-93ba275e297a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                        if (set.contains(obj)) {\n                            return set.remove(obj);\n                        } \n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[119],"tindex":"f1763de1-2e9d-11e6-a2cf-8b8e7bd9b225","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,103,104,106,107,108,110,111,112,113,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"tindex":"f1763de2-2e9d-11e6-a2cf-bba897e0062b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"f17664f3-2e9d-11e6-a2cf-a56cc8e4185f","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[207,208,209,210,211,212,213,29,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,119,230,231,232,233,234,235,236,237,238],"tindex":"f17664f4-2e9d-11e6-a2cf-891b758a91c4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    if ((java.util.Set<E>.contains(object)) == false) {\n                        super.add(index, object);\n                        java.util.Set<E>.add(object);\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f1768c05-2e9d-11e6-a2cf-9f52e12c04b5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[239],"tindex":"f1768c06-2e9d-11e6-a2cf-494c9f683e97","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index > 0) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f1768c07-2e9d-11e6-a2cf-a517d7c4b1f7","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[240],"tindex":"f176b318-2e9d-11e6-a2cf-f14496c80749","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[241],"tindex":"f176b319-2e9d-11e6-a2cf-2d14868edd1e","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[242],"tindex":"f176da2a-2e9d-11e6-a2cf-133d6ba2cf75","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f176da2b-2e9d-11e6-a2cf-b59d0b3f6141","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[1,2,3,4,5,243,6,244,245,7,8,246,9,10,11,247,12,13,14,15,248,249,250,251],"tindex":"f176da2c-2e9d-11e6-a2cf-e55d87ce1dff","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"f177013d-2e9d-11e6-a2cf-4bc4f047588f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"f177013e-2e9d-11e6-a2cf-3d92169fc118","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (end < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"f177284f-2e9d-11e6-a2cf-513824aabcde","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"f1772850-2e9d-11e6-a2cf-21f46b0c70f2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,78,281,282,283,284,285,286,287,288,289,290,291,292,293,294,33,34,295,296,297,298,299,300,301,302,303,304,305,306,307,308,47,48,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,85,326,327,328,329,330,331,332,333,334,335,336,337],"tindex":"f1772851-2e9d-11e6-a2cf-cb459ba53b03","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"f1774f62-2e9d-11e6-a2cf-8f439227ed8c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[338],"tindex":"f1777673-2e9d-11e6-a2cf-69eada227241","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == null) {\n                        return true;\n                    } else if (object instanceof java.util.Collection<?>) {\n                        return ((java.util.Collection<?>)(object)).isEmpty();\n                    } else if (object instanceof java.util.Map<?, ?>) {\n                        return ((java.util.Map<?, ?>)(object)).isEmpty();\n                    } else if (object instanceof java.lang.Object[]) {\n                        return (((java.lang.Object[])(object)).int) == 0;\n                    } else if (object instanceof java.util.Iterator<?>) {\n                        return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n                    } else if (object instanceof java.util.Enumeration<?>) {\n                        return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n                    } else {\n                        try {\n                            return (java.lang.reflect.Array.getLength(object)) == 0;\n                        } catch (final java.lang.IllegalArgumentException ex) {\n                            throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[339],"tindex":"f1777674-2e9d-11e6-a2cf-7b6330419cbe","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f1779d85-2e9d-11e6-a2cf-33195adbe4a9","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                {\n                    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"f1779d86-2e9d-11e6-a2cf-d3c9202d5ccf","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[340,341,342,343,344,345,346,347,348,349,350,351,352,353,1,2,354,3,4,5,243,355,6,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,7,8,246,9,10,11,247,394,12,395,13,396,397,14,15,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418],"tindex":"f177c497-2e9d-11e6-a2cf-e51225c3fa22","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[419],"tindex":"f177c498-2e9d-11e6-a2cf-532fa8553e25","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[],"tindex":"f177c499-2e9d-11e6-a2cf-edef6ba5bd69","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[27],"tindex":"f17839ca-2e9d-11e6-a2cf-e5573274add6","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"f17860db-2e9d-11e6-a2cf-978f264fc9a8","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"f17860dc-2e9d-11e6-a2cf-9b18f52187b8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f17860dd-2e9d-11e6-a2cf-9726fe03caea","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    if ((java.util.Set<E>.contains(object)) == false) {\n                        super.add(index, object);\n                        java.util.Set<E>.add(object);\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[342,344,351,352,1,2,3,4,5,243,355,6,360,361,362,363,367,371,373,374,375,376,378,386,389,390,391,392,7,8,246,9,10,11,247,394,12,13,14,15,401,402,403,404,405,406,407,410,411,414,415,416,417,418,248,420],"tindex":"f17887ee-2e9d-11e6-a2cf-950d5a57a0cc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"f17887ef-2e9d-11e6-a2cf-098a0578df78","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                        if (set.contains(obj)) {\n                            return set.remove(obj);\n                        } \n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"f178d610-2e9d-11e6-a2cf-d537951a1ae3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f178d611-2e9d-11e6-a2cf-bdb389689090","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[421,422,423,424,425,426,427],"tindex":"f178d612-2e9d-11e6-a2cf-4b9597fb9080","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"f178fd23-2e9d-11e6-a2cf-db5a88ea260d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[207,208,210,213,215,428,216,219,220,429,430],"tindex":"f178fd24-2e9d-11e6-a2cf-b99a91777b1c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[431],"tindex":"f178fd25-2e9d-11e6-a2cf-b912c44091eb","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f1792436-2e9d-11e6-a2cf-b73aa675b775","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[350,360],"tindex":"f1792437-2e9d-11e6-a2cf-87ef49dbeb77","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[432],"tindex":"f1792438-2e9d-11e6-a2cf-c9b1cb61bfe5","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"tindex":"f1794b49-2e9d-11e6-a2cf-eb0e91a9692d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[458],"tindex":"f1794b4a-2e9d-11e6-a2cf-ddaf27ff213a","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"f1794b4b-2e9d-11e6-a2cf-0d8abb0cfc1f","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (end < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f179725c-2e9d-11e6-a2cf-217ec5b09e7a","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[254,255,256,459,257,258,259,260,261,262,263,264,267,269,272,273,274,275,276,277,280,78,281,282,283,284,285,460,286,287,289,461],"tindex":"f179725d-2e9d-11e6-a2cf-4babab624066","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"f179725e-2e9d-11e6-a2cf-6b09b55a519d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"f179996f-2e9d-11e6-a2cf-7d994d130248","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"f1799970-2e9d-11e6-a2cf-f3fe7c2033d7","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == null) {\n                        return true;\n                    } else if (object instanceof java.util.Collection<?>) {\n                        return ((java.util.Collection<?>)(object)).isEmpty();\n                    } else if (object instanceof java.util.Map<?, ?>) {\n                        return ((java.util.Map<?, ?>)(object)).isEmpty();\n                    } else if (object instanceof java.lang.Object[]) {\n                        return (((java.lang.Object[])(object)).int) == 0;\n                    } else if (object instanceof java.util.Iterator<?>) {\n                        return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n                    } else if (object instanceof java.util.Enumeration<?>) {\n                        return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n                    } else {\n                        try {\n                            return (java.lang.reflect.Array.getLength(object)) == 0;\n                        } catch (final java.lang.IllegalArgumentException ex) {\n                            throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[462],"tindex":"f17a83d1-2e9d-11e6-a2cf-393154a971de","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[463,300,301,302,303,292,293,294,33,34,295,296,297,298,299,464,465,466,467,468,469,470,471,35,36,472,473,474,475,476,477,478,479,480,481,482,483,484,41,42,485,486,487,488,489,490,491,492,493,494,495,496,49,497,498,499,500,501,502,50,503,504,505,506,507,508,509,510,511,512],"tindex":"f17a83d2-2e9d-11e6-a2cf-5950e1fbfd34","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[513,339,514,515],"tindex":"f17aaae3-2e9d-11e6-a2cf-45cdde68e89c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"f17aaae4-2e9d-11e6-a2cf-61dd044b8634","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[516],"tindex":"f17ad1f5-2e9d-11e6-a2cf-0971c409ea55","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f17ad1f6-2e9d-11e6-a2cf-bd3a7e37f969","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    checkNotStarted();\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f17ad1f7-2e9d-11e6-a2cf-c5e58076d4f7","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    final int int = size();\n                    if ((index < 0) || (index >= sz)) {\n                        throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n                    } \n                    final int int = ((int) + index) % (int);\n                    return E[][idx];\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,79,539,540,541,542,543,544,545,546,547,548],"tindex":"f17ad1f8-2e9d-11e6-a2cf-37a6e853a16b","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"f17af909-2e9d-11e6-a2cf-f55e95fae283","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[549],"tindex":"f17af90a-2e9d-11e6-a2cf-8930c21e4d08","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[],"tindex":"f17b201b-2e9d-11e6-a2cf-f77449038715","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[550,95,551,552,553,96],"tindex":"f17b201c-2e9d-11e6-a2cf-876dc2e2d24b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"f17b201d-2e9d-11e6-a2cf-b7b073542872","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[554,555],"tindex":"f17b472e-2e9d-11e6-a2cf-0390ac57ee0b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"f17b472f-2e9d-11e6-a2cf-8d44f3b1e3ad","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if (coll == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().addAll(transform(coll));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[556,557,558],"tindex":"f17bbc60-2e9d-11e6-a2cf-6d776bd0b006","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"f17bbc61-2e9d-11e6-a2cf-8167f89a4f7c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f17c3192-2e9d-11e6-a2cf-bfbd771c9727","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f17c3193-2e9d-11e6-a2cf-35b233d57b6a","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[103,104,106,107,108,110,111,112,113,144,145,559,146,147,148,560,149,150,151,152,561,562,563,564,159,160,565,161,162,163,566,164,165,166,167,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,174,175,601,176,177,178,602,179,180,181,182,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,192,193,621,194,195,196,622,197,198,199,200,623,624,625,626],"tindex":"f17c3194-2e9d-11e6-a2cf-c9479dbfab5e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f17e2d65-2e9d-11e6-a2cf-4d6dc7113b52","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                {\n                    return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[627],"tindex":"f17e5476-2e9d-11e6-a2cf-2bbe14459099","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[628],"tindex":"f17e5477-2e9d-11e6-a2cf-4f3c1969cb80","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}