{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":236,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":323,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":676,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":829,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":611,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":670,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":527,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":563,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":1008,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":1006,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":810,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":132,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":321,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":383,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":723,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":718,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":658,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":843,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":244,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":755,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":405,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":756,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":681,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":757,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":728,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":7,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":470,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":602,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":943,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":963,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":350,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":699,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":922,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":597,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":499,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":240,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":998,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":281,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":651,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":278,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":390,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":206,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":641,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":139,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":779,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":451,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":1009,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":882,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":272,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":565,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":986,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":996,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":673,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":509,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":362,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":726,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":330,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":374,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":959,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":580,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":858,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":254,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":61,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":1011,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":424,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":458,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":537,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":291,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":852,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":526,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":189,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":731,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":237,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":717,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":952,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":353,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":195,"org.apache.commons.collections4.map.CompositeMapTest.testPut":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":294,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":192,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":141,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":11,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":589,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":961,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":360,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":252,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":924,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":976,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":454,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":787,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":808,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":610,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":147,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":549,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":346,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":103,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":121,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":612,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":491,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":492,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":540,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":125,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":633,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":848,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":712,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":686,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":430,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":425,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":791,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":744,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":784,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":270,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":837,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":802,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":407,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":24,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":116,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":920,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":547,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":431,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":432,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":433,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":43,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":821,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":761,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":812,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":556,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":830,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":645,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":905,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":937,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":982,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":69,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":874,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":329,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":737,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":495,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":798,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":123,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":66,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":739,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":174,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":592,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":904,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":14,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":290,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":507,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":283,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":997,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":671,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":948,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":916,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":626,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":914,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":603,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":473,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":373,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":307,"org.apache.commons.collections4.IteratorUtilsTest.testToList":1022,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":242,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":560,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":133,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":1017,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":349,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":840,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":15,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":394,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":519,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":518,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":493,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":517,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":816,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":345,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":725,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":991,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":950,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":214,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":697,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":190,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":361,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":558,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":844,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":340,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":230,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":909,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":765,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":385,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":25,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":215,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":386,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":573,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":839,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":486,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":800,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":792,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":112,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":41,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":747,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":455,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":913,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":995,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":163,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":630,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":960,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":74,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":624,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":621,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":598,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":1016,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":459,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":793,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":988,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":472,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":695,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":83,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":777,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":940,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":859,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":838,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":903,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":1021,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":2,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":80,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":529,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":408,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":85,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":945,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":954,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":418,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":973,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":76,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":623,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":467,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":664,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":317,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":468,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":469,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":354,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":295,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":539,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":764,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":746,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":989,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":572,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":741,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":441,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":34,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":341,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":151,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":971,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":1005,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":605,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":890,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":889,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":888,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":780,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":38,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":797,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":567,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":631,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":566,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":568,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":685,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":785,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":239,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":886,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":538,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":983,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":1010,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":322,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":807,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":286,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":1019,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":359,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":803,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":104,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":191,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":216,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":786,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":866,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":160,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":171,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":17,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":824,"org.apache.commons.collections4.list.TreeListTest.testBug35258":774,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":97,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":111,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":796,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":967,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":212,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":637,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":404,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":429,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":26,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":811,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":228,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":465,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":853,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":371,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":969,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":140,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":855,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":309,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":994,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":970,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":500,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":437,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":98,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":609,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":1,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":585,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":809,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":850,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":3,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":836,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":376,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":417,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":12,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":915,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":638,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":356,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":955,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":106,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":203,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":639,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":502,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":173,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":655,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":978,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":953,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":368,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":906,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":647,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":596,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":999,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":977,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":397,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":484,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":750,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":678,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":440,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":841,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":729,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":789,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":870,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":581,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":962,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":701,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":759,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":393,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":530,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":827,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":497,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":817,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":8,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":926,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":742,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":79,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":814,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":857,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":869,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":183,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":136,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":872,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":474,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":92,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":873,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":574,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":226,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":289,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":1020,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":180,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":513,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":86,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":657,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":508,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":928,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":980,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":698,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":339,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":137,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":845,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":709,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":835,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":20,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":619,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":389,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":0,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":758,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":258,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":990,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":650,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":477,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":692,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":794,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":993,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":933,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":400,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":868,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":250,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":902,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":823,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":901,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":251,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":885,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":483,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":415,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":562,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":457,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":842,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":42,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":221,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":813,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":427,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":677,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":413,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":617,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":463,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":964,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":979,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":863,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":917,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":261,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":260,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":402,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":876,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":170,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":528,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":663,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":760,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":372,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":871,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":938,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":5,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":128,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":667,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":703,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":398,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":672,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":745,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":561,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":63,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":634,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":480,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":1015,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":234,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":150,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":523,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":476,"org.apache.commons.collections4.map.CompositeMapTest.testGet":679,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":380,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":934,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":551,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":185,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":972,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":553,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":552,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":702,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":387,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":503,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":28,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":577,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":275,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":357,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":443,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":716,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":659,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":801,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":396,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":377,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":593,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":879,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":249,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":40,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":834,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":628,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":910,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":255,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":144,"org.apache.commons.collections4.list.TreeListTest.testRemove":771,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":819,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":665,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":488,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":487,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":241,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":795,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":957,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":489,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":781,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":878,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":662,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":860,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":436,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":642,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":434,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":625,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":919,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":782,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":546,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":613,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":942,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":196,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":719,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":799,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":143,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":263,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":826,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":806,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":693,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":898,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":897,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":896,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":521,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":188,"org.apache.commons.collections4.map.LRUMapTest.testClone":501,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":89,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":987,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":444,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":956,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":456,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":159,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":315,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":654,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":164,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":118,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":930,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":931,"org.apache.commons.collections4.list.TreeListTest.testListEquals":778,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":992,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":52,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":847,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":247,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":643,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":177,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":50,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":763,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":62,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":965,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":861,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":707,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":578,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":769,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":947,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":893,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":831,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":891,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":636,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":892,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":601,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":875,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":77,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":908,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":691,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":328,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":520,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":428,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":327,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":640,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":1001,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":825,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":342,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":846,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":271,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":615,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":683,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":877,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":682,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":688,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":748,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":766,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":935,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":632,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":939,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":595,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":460,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":506,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":461,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":735,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":146,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":545,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":975,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":591,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":722,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":944,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":223,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":627,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":738,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":175,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":388,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":648,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":575,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":399,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":409,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":966,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":229,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":401,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":184,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":571,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":570,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":569,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":384,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":564,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":202,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":1012,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":297,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":832,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":161,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":776,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":894,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":607,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":710,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":856,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":653,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":505,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":10,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":448,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":449,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":684,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":450,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":554,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":629,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":854,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":543,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":30,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":907,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":162,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":941,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":946,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":197,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":496,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":770,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":522,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":129,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":743,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":544,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":736,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":828,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":153,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":579,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":981,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":108,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":880,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":109,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":895,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":927,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":279,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":864,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":884,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":442,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":416,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":126,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":600,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":582,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":790,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":96,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":783,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":478,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":587,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":815,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":158,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":217,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":822,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":1003,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":1013,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":1014,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":804,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":72,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":899,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":101,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":282,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":732,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":113,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":588,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":911,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":652,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":355,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":656,"org.apache.commons.collections4.set.CompositeSetTest.testContains":833,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":599,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":512,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":576,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":768,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":936,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":590,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":266,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":929,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":724,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":331,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":479,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":660,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":35,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":772,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":524,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":689,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":694,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":849,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":87,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":201,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":211,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":193,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":333,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":733,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":674,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":754,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":352,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":299,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":78,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":644,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":985,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":867,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":93,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":55,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":713,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":57,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":56,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":734,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":504,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":675,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":391,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":19,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":749,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":325,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":818,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":727,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":142,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":308,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":881,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":363,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":84,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":923,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":1000,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":256,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":482,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":379,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":696,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":194,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":1007,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":127,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":721,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":887,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":1004,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":343,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":446,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":447,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":320,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":453,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":614,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":366,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":740,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":805,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":367,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":711,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":932,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":706,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":257,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":21,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":668,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":751,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":541,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":604,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":375,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":949,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":532,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":533,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":921,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":122,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":608,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":1018,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":95,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":951,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":542,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":414,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":720,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":865,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":439,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":616,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":918,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":984,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":618,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":958,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":767,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":395,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":292,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":32,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":516,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":622,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":1002,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":862,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":974,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":420,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":514,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":515,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":620,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":705,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":178,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":68,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":534,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":559,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":925,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":426,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":788,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":883,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":968,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":222,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":594,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":102,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":714,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":912,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":510,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":120},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[0,1,2],"tindex":"991195a5-3f0d-11e6-8e4b-01f2542e1cbc","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[3,4],"tindex":"99120ad6-3f0d-11e6-8e4b-a9a993cdd139","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"991231e7-3f0d-11e6-8e4b-0beff6a2ba5f","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991231e8-3f0d-11e6-8e4b-f9816a780167","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991258f9-3f0d-11e6-8e4b-3967a3b7c7cc","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,71,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"991258fa-3f0d-11e6-8e4b-0b1f51945b52","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[222,223],"tindex":"9912800b-3f0d-11e6-8e4b-65ab40c74613","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[224],"tindex":"9912800c-3f0d-11e6-8e4b-bda9faf92b9c","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9912a71d-3f0d-11e6-8e4b-9b916de86228","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl"},"failures":[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,93,94,95,284,285,96,286,287,288,289,290,291,292,293,97,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,98,99,313],"tindex":"9912ce2e-3f0d-11e6-8e4b-6bf76eada20c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl"},"failures":[314],"tindex":"9912ce2f-3f0d-11e6-8e4b-05136f91450d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9912f540-3f0d-11e6-8e4b-5551933ce3de","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl"},"failures":[224],"tindex":"99131c51-3f0d-11e6-8e4b-a31873243cb6","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((closures.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n                    } \n                    if ((closures.size()) == 0) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n                    int int = 0;\n                    for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                        cmds[(i++)] = closure;\n                    }\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n                    return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[224,315,316],"tindex":"99131c52-3f0d-11e6-8e4b-2760182ead28","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[317,318,319,320],"tindex":"99134363-3f0d-11e6-8e4b-397a54d9e1cc","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[321],"tindex":"99134364-3f0d-11e6-8e4b-77ea8af50e71","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99136a75-3f0d-11e6-8e4b-4bc16dfcd620","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[322],"tindex":"99136a76-3f0d-11e6-8e4b-69e0ec2abb8a","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"99136a77-3f0d-11e6-8e4b-fd012b186316","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtBinaryOperatorImpl"},"failures":[339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"99139188-3f0d-11e6-8e4b-95d034d71f99","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[385],"tindex":"9913b899-3f0d-11e6-8e4b-fb98ca22ae3d","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9913b89a-3f0d-11e6-8e4b-ef193256c23b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[242,243,245,246,247,250,252,255,256,288,289,291,292,293,295],"tindex":"9913b89b-3f0d-11e6-8e4b-0bad6ff72d4f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9913dfac-3f0d-11e6-8e4b-37c4a5abd161","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420],"tindex":"9913dfad-3f0d-11e6-8e4b-81132aaf698c","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9913dfae-3f0d-11e6-8e4b-45577680fa9f","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[316],"tindex":"991406bf-3f0d-11e6-8e4b-79aeb0aa7b64","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl"},"failures":[421],"tindex":"991406c0-3f0d-11e6-8e4b-137d8e7c4cc4","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991406c1-3f0d-11e6-8e4b-57c1a65196ce","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572],"tindex":"991406c2-3f0d-11e6-8e4b-ff7eb569e726","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[573],"tindex":"99142dd3-3f0d-11e6-8e4b-f7981540f856","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99142dd4-3f0d-11e6-8e4b-db156896fbc8","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl"},"failures":[574,575,576,577,578,579],"tindex":"99147bf5-3f0d-11e6-8e4b-abba303ffd08","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99147bf6-3f0d-11e6-8e4b-ff3dd1fe749b","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99147bf7-3f0d-11e6-8e4b-a16516581f2c","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[580,581,582,583],"tindex":"9914f128-3f0d-11e6-8e4b-27a9f899fe5b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    removeAllExpired(now());\n                    return super.containsValue(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9914f129-3f0d-11e6-8e4b-a16507b696e9","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9915183a-3f0d-11e6-8e4b-975ac88fd8a3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if (lengthInBits == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    while (true) {\n                        if ((current.int) <= (path.int)) {\n                            return current;\n                        } \n                        path = current;\n                        if (!(isBitSet(key, current.int, lengthInBits))) {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } else {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639],"tindex":"9915183b-3f0d-11e6-8e4b-ddef37be8ad7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[100,640,101,102,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,184,71,185,661,186,662,663,664,665,666,667,668,669,187,670,188,189,671,672,72,73,190,673,674,675,676,677,191,678,192],"tindex":"99153f4c-3f0d-11e6-8e4b-37512bb36882","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[679,680,681,682,683,684,685,686,47,48,49,50,51,52,53,687,688,54,55,56,57,689,690,58,59,691,692,693,60,694,695,61,696,697,698,699,62,63,64,65,700,66,67,701,68,69,70,702,703,704,705,706,707,708,709,710,711],"tindex":"99153f4d-3f0d-11e6-8e4b-a1c028949a47","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753],"tindex":"9915665e-3f0d-11e6-8e4b-835425085ebf","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            return addAll(size(), coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl"},"failures":[361,371,374,375,378,379,380,381,382,754,755,756,757,758,759,760,761,762,763,764,765],"tindex":"9915665f-3f0d-11e6-8e4b-cbe7a9230a88","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[602,608,609],"tindex":"99158d70-3f0d-11e6-8e4b-5db6ea5d33c6","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9915b481-3f0d-11e6-8e4b-239eede63354","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[766,767,768,769],"tindex":"9915b482-3f0d-11e6-8e4b-456839d95a78","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[770],"tindex":"9915b483-3f0d-11e6-8e4b-d90c2a3e064e","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9915b484-3f0d-11e6-8e4b-7519a366ee3d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9915db95-3f0d-11e6-8e4b-e531abe0c83c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[771,772,773,774,775,776,777,778,779,780,781,782,783,784,769,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803],"tindex":"9915db96-3f0d-11e6-8e4b-e148b7cf7702","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829],"tindex":"9915db97-3f0d-11e6-8e4b-5d58fab17654","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9915db98-3f0d-11e6-8e4b-8b82b3754120","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991602a9-3f0d-11e6-8e4b-63a564a05d04","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if (lengthInBits == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    while (true) {\n                        if ((current.int) <= (path.int)) {\n                            return current;\n                        } \n                        path = current;\n                        if (!(isBitSet(key, current.int, lengthInBits))) {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } else {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991602aa-3f0d-11e6-8e4b-27ce5b17ecac","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((closures.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n                    } \n                    if ((closures.size()) == 0) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n                    int int = 0;\n                    for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                        cmds[(i++)] = closure;\n                    }\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n                    return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[830],"tindex":"991629bb-3f0d-11e6-8e4b-a1935ed58a49","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[509,511,521,522],"tindex":"991629bc-3f0d-11e6-8e4b-795be448b3d4","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991650cd-3f0d-11e6-8e4b-df6d13bc3f18","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991650ce-3f0d-11e6-8e4b-3100c87d437a","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    removeAllExpired(now());\n                    return super.containsValue(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl"},"failures":[255],"tindex":"991677df-3f0d-11e6-8e4b-f39a6521dfe8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl"},"failures":[831],"tindex":"991677e0-3f0d-11e6-8e4b-936efc4216e8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"991677e1-3f0d-11e6-8e4b-35721263f289","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99169ef2-3f0d-11e6-8e4b-ff424827ec34","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[832,833,30,33,37,38,40,42,44,45,46,50,51,52,60,61,62,63,65,66,68,69,70],"tindex":"99169ef3-3f0d-11e6-8e4b-db901bc824f6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[834],"tindex":"99169ef4-3f0d-11e6-8e4b-a5a0f987371a","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[314],"tindex":"9916c605-3f0d-11e6-8e4b-cbc6ebf51448","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key5"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[835],"tindex":"9916c606-3f0d-11e6-8e4b-a3084180d28e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[836],"tindex":"9916c607-3f0d-11e6-8e4b-f50991de2a13","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[837,838,839,840,841,842,843,844,845,846,847,848],"tindex":"9916ed18-3f0d-11e6-8e4b-8dd7d0f981b6","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9916ed19-3f0d-11e6-8e4b-2163c87998f2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[804,849],"tindex":"9917142a-3f0d-11e6-8e4b-35a8bf3a6c38","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[850,851,852],"tindex":"9917142b-3f0d-11e6-8e4b-c757bd193051","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9917142c-3f0d-11e6-8e4b-23252b81e661","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl"},"failures":[853],"tindex":"9917142d-3f0d-11e6-8e4b-ad603fe577aa","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[593,605,610],"tindex":"99173b3e-3f0d-11e6-8e4b-516ae4f23ac5","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99173b3f-3f0d-11e6-8e4b-35f5f9f0243f","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[854],"tindex":"99173b40-3f0d-11e6-8e4b-9f3fb1f19abb","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99176251-3f0d-11e6-8e4b-597cbe924acf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99176252-3f0d-11e6-8e4b-1f5a2d0dcfe1","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[855],"tindex":"99176253-3f0d-11e6-8e4b-7f6d26e0fb4b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[854],"tindex":"99176254-3f0d-11e6-8e4b-018675f6b433","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,745,750,628,646,653,877,421,878,819,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,391,393,410],"tindex":"99178965-3f0d-11e6-8e4b-d720d1981527","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99178966-3f0d-11e6-8e4b-e7c3af6cc736","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[316],"tindex":"99178967-3f0d-11e6-8e4b-a3c197e2ba3c","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99178968-3f0d-11e6-8e4b-35f463f184f5","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9917b079-3f0d-11e6-8e4b-21ab518c1dc8","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936],"tindex":"9917b07a-3f0d-11e6-8e4b-bdf1d64db053","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[509,521,522],"tindex":"9917b07b-3f0d-11e6-8e4b-41fada40f125","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,223,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,876,969,970,971],"tindex":"9917b07c-3f0d-11e6-8e4b-81c208e11671","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[972],"tindex":"9917d78d-3f0d-11e6-8e4b-f76745d22842","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[973],"tindex":"9917d78e-3f0d-11e6-8e4b-37f03aa285a9","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[974,975,976,977,978,979,646,653,980,981,982,983,430,155,984,985,986,987,988,163,989,990,991,992,993,994,995,996,997,998,177,176,999,1000,174,1001,1002,175,1003,1004,1005,660,184,71,664,665,187,670,672,190,1006,1007,1008,1009],"tindex":"9917d78f-3f0d-11e6-8e4b-efc0fd143fa4","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[343,344,345,347,348,349,350,351,352,353,354,355,357,360,361,365,366,367,368,369,370,371,374,378,380,381,382,1010,1011,1012,1013,383,384],"tindex":"9917d790-3f0d-11e6-8e4b-e3e819135a42","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[713,1014,1015,720,1016,745,746,1017,752,753],"tindex":"9917fea1-3f0d-11e6-8e4b-35411e9e7402","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl"},"failures":[],"tindex":"9917fea2-3f0d-11e6-8e4b-d7bde9c8842a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"9917fea3-3f0d-11e6-8e4b-f14cd958a73b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[1018],"tindex":"991825b4-3f0d-11e6-8e4b-794c71f9bc3a","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[1019],"tindex":"991825b5-3f0d-11e6-8e4b-5ba06e59bba8","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[1020],"tindex":"99184cc6-3f0d-11e6-8e4b-abab468c1082","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99184cc7-3f0d-11e6-8e4b-8fc8a53d4029","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl"},"failures":[1021,666,1022],"tindex":"99184cc8-3f0d-11e6-8e4b-37c79ff0da5d","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}