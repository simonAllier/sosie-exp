{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":447,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":128,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":364,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":6,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":891,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":279,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":883,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":528,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":527,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":784,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":252,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":868,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":394,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":401,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":143,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":417,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":504,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":724,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":229,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":858,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":649,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":351,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":759,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":265,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":598,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":282,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":159,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":797,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":326,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":839,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":866,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":814,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":787,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":833,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":453,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":880,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":661,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":673,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":861,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":838,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":107,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":411,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":854,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":212,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":248,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":819,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":223,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":684,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":195,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":840,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":652,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":632,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":206,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":40,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":899,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":114,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":696,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":659,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":751,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":464,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":299,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":244,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":380,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":719,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":845,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":354,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":458,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":12,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":645,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":830,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":467,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":33,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":129,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":548,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":836,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":387,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":324,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":782,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":562,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":842,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":270,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":829,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":628,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":871,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":712,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":762,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":713,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":832,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":692,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":810,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":887,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":771,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":841,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":15,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":4,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":278,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":310,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":610,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":163,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":893,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":680,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":339,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":328,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":329,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":727,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":560,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":461,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":590,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":694,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":761,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":413,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":760,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":848,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":109,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":207,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":240,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":22,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":822,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":434,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":73,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":138,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":801,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":125,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":257,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":330,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":807,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":672,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":289,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":767,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":483,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":648,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":691,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":644,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":705,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":425,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":264,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":730,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":697,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":110,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":660,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":710,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":639,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":723,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":853,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":820,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":345,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":404,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":98,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":615,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":283,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":26,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":482,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":308,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":509,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":583,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":734,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":745,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":440,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":747,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":746,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":466,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":418,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":895,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":773,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":408,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":643,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":322,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":234,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":318,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":494,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":136,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":454,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":843,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":753,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":187,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":314,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":721,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":653,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":226,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":225,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":870,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":750,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":704,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":640,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":736,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":432,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":573,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":823,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":519,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":508,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":300,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":514,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":776,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":575,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":658,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":484,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":550,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":204,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":603,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":580,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":369,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":826,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":255,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":556,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":555,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":81,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":601,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":824,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":825,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":889,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":422,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":714,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":774,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":503,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":553,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":882,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":670,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":569,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":770,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":878,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":235,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":525,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":522,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":594,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":612,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":506,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":547,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":892,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":811,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":677,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":675,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":28,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":793,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":634,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":706,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":903,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":655,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":902,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":245,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":552,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":93,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":897,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":419,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":884,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":701,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":587,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":403,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":852,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":669,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":668,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":667,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":209,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":805,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":433,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":837,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":237,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":119,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":585,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":349,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":402,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":873,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":502,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":786,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":865,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":510,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":356,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":698,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":715,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":239,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":716,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":717,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":485,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":233,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":860,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":595,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":36,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":800,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":619,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":222,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":607,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":208,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":890,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":862,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":879,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":398,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":236,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":834,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":538,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":175,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":406,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":708,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":250,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":885,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":571,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":449,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":901,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":436,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":568,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":638,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":37,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":702,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":818,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":778,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":167,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":743,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":168,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":828,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":446,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":179,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":517,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":740,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":521,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":306,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":847,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":728,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":606,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":695,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":203,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":574,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":707,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":301,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":34,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":77,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":846,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":399,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":357,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":256,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":898,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":391,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":219,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":518,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":220,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":623,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":390,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":586,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":186,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":671,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":142,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":565,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":189,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":196,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":290,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":856,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":617,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":147,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":572,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":427,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":802,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":285,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":478,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":332,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":375,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":812,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":302,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":795,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":371,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":2,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":340,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":341,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":599,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":515,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":859,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":177,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":439,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":474,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":690,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":709,"org.apache.commons.collections4.CollectionUtilsTest.union":386,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":718,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":687,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":421,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":378,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":622,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":140,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":415,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":10,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":232,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":241,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":785,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":188,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":816,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":505,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":794,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":185,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":382,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":647,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":498,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":430,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":480,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":42,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":624,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":864,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":274,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":742,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":392,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":338,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":541,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":347,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":851,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":869,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":849,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":850,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":579,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":172,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":530,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":584,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":700,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":729,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":827,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":460,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":886,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":407,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":657,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":815,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":313,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":524,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":588,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":722,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":738,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":875,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":689,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":876,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":748,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":874,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":739,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":152,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":789,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":124,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":476,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":181,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":320,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":888,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":629,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":397,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":459,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":520,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":755,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":491,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":813,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":741,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":641,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":544,"org.apache.commons.collections4.map.SingletonMapTest.testClone":381,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":681,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":130,"org.apache.commons.collections4.CollectionUtilsTest.filter":276,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":304,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":512,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":808,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":855,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":872,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":693,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":726,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":863,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":744,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":213,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":699,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":608,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":570,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":281,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":8,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":367,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":389,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":139,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":246,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":591,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":798,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":376,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":166,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":492,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":844,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":452,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":60,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":682,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":92,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":763,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":426,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":238,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":379,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":171,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":775,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":783,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":720,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":479,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":611,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":686,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":465,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":582,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":780,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":18,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":792,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":3,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":481,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":88,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":284,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":566,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":609,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":303,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":799,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":554,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":500,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":857,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":790,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":563,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":469,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":731,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":441,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":578,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":294,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":197,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":772,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":368,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":27,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":113,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":266,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":170,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":654,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":288,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":122,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":867,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":627,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":490,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":424,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":683,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":428,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":779,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":462,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":539,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":597,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":360,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":600,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":596,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":900,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":412,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":768,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":765,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":78,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":613,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":614,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":162,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":537,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":149,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":821,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":543,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":271,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":273,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":272,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":593,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":201,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":881,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":877,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":529,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":831,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":41,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":769,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":894,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":662,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":749,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":450,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":317,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":370,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":251,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":14,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":806,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":423,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":642,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":666,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":416,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":896,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":190,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":674,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":904,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":559,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":545,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":758,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":804,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":131,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":796,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":835,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":817,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":146,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":287,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":523,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":224,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":463,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":473,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":395,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":777,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":488,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":133,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":592,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":803,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":754,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":526,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":117,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":158,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":21,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":558},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4],"tindex":"29e3689a-3f0e-11e6-873d-57d47b077aeb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"29e404db-3f0e-11e6-873d-35be466d551c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e404dc-3f0e-11e6-873d-ed88184821ba","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e42bed-3f0e-11e6-873d-0f6c4285eb7d","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl"},"failures":[22],"tindex":"29e42bee-3f0e-11e6-873d-738fe593d8a2","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e452ff-3f0e-11e6-873d-ad35f60e6415","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e45300-3f0e-11e6-873d-b92be224dffe","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,10,43,44,13,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,18,95,96,21,97,98,99,100,101,102,103,104,105,106,107],"tindex":"29e47a11-3f0e-11e6-873d-db1a7286fd14","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[108,109,110],"tindex":"29e47a12-3f0e-11e6-873d-191887ded641","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[111,112],"tindex":"29e4a123-3f0e-11e6-873d-e73eddd4aa92","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"29e4a124-3f0e-11e6-873d-ef975db18d1b","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl"},"failures":[142,143],"tindex":"29e4a125-3f0e-11e6-873d-9f6ae4ea1b32","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e4c836-3f0e-11e6-873d-db24650439af","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[144],"tindex":"29e4c837-3f0e-11e6-873d-f3bc695d7cc7","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e4ef48-3f0e-11e6-873d-3d7693111b6e","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[145],"tindex":"29e4ef49-3f0e-11e6-873d-83f76491a7f8","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e5165a-3f0e-11e6-873d-edbf0fa812e5","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e5165b-3f0e-11e6-873d-69f86f425487","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[146,147],"tindex":"29e53d6c-3f0e-11e6-873d-b1dfc6e0bb55","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[148],"tindex":"29e53d6d-3f0e-11e6-873d-51d20d839615","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll2.size())) {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl"},"failures":[149],"tindex":"29e53d6e-3f0e-11e6-873d-e3a39d1e4c85","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e5647f-3f0e-11e6-873d-b5f7125e4e45","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            if (normalMap == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[150,151,152,153],"tindex":"29e56480-3f0e-11e6-873d-15348ab22935","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e56481-3f0e-11e6-873d-a96bcfef8d4f","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e56482-3f0e-11e6-873d-e1bd31c02e77","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl"},"failures":[154],"tindex":"29e58b93-3f0e-11e6-873d-290ac1ee3b59","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e58b94-3f0e-11e6-873d-5de452fa3fb1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e58b95-3f0e-11e6-873d-699322b20c9d","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e58b96-3f0e-11e6-873d-8fe3a2838ed5","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e5b2a7-3f0e-11e6-873d-b70e535ea754","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,108,189,190,191,192,193,194,195,109,196,197,198,110,199,200,201,202,203,204,205,206],"tindex":"29e5b2a8-3f0e-11e6-873d-33a941a6a659","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e5b2a9-3f0e-11e6-873d-4fa9dd971ecd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl"},"failures":[207],"tindex":"29e5b2aa-3f0e-11e6-873d-b1c12240e59a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[208],"tindex":"29e5d9bb-3f0e-11e6-873d-91fd403d3126","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[],"tindex":"29e5d9bc-3f0e-11e6-873d-45c2a6df38a6","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[209],"tindex":"29e600cd-3f0e-11e6-873d-29dd5ae1f0db","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"tindex":"29e600ce-3f0e-11e6-873d-5334be5b66b1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e600cf-3f0e-11e6-873d-c76b7f658eb8","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e600d0-3f0e-11e6-873d-bf22d7c4cfe0","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[229,49,53,230,231,232],"tindex":"29e627e1-3f0e-11e6-873d-57417941a9d3","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e627e2-3f0e-11e6-873d-8324fa4506f0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e627e3-3f0e-11e6-873d-33e47ad21d03","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e64ef4-3f0e-11e6-873d-5f7fab187517","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e64ef5-3f0e-11e6-873d-e5213f1e63ad","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e64ef6-3f0e-11e6-873d-e9bbdba740d0","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e64ef7-3f0e-11e6-873d-73e45c803e27","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[233,234,24,25,235,236,237,238,239,240,241,242,243],"tindex":"29e67608-3f0e-11e6-873d-f91f01a17a4a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[244,245],"tindex":"29e67609-3f0e-11e6-873d-69f7f0acac04","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[246,247,248],"tindex":"29e6760a-3f0e-11e6-873d-9f826cd2d8b7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[210,211,249,212,213,214,250,215,216,217,218,251,252,253,254,221,222,223,224,225,255,226,256,257],"tindex":"29e6760b-3f0e-11e6-873d-9571c378b6d3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[258,259,260,261,262,263,264,265,266,267],"tindex":"29e69d1c-3f0e-11e6-873d-0b3159a69489","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e69d1d-3f0e-11e6-873d-5167673b52de","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e6c42e-3f0e-11e6-873d-91c082ea3373","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[268,269,270,271,272,273,274],"tindex":"29e6c42f-3f0e-11e6-873d-9ff18d89c7b2","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e6c430-3f0e-11e6-873d-51b2efbc1138","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e6c431-3f0e-11e6-873d-215833952ee0","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e6eb42-3f0e-11e6-873d-29019bc34e94","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[275,276,244,245],"tindex":"29e6eb43-3f0e-11e6-873d-83c4cb9d9ec6","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[277],"tindex":"29e6eb44-3f0e-11e6-873d-df13ac4ae907","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[159,164,165,168,170,173,174],"tindex":"29e6eb45-3f0e-11e6-873d-9da6f6ff5ee2","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl"},"failures":[278,279],"tindex":"29e71256-3f0e-11e6-873d-5b3e6eb2c05f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[280,281,282],"tindex":"29e71257-3f0e-11e6-873d-99e9e59880a8","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e71258-3f0e-11e6-873d-af3feb30e977","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e71259-3f0e-11e6-873d-e93ed3ffdc61","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[283,284,285,286],"tindex":"29e7396a-3f0e-11e6-873d-257ec9782eb9","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[287],"tindex":"29e7396b-3f0e-11e6-873d-d5c211adf4e8","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7396c-3f0e-11e6-873d-39e33fad55d6","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[288,23,24,25,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,236,325,326,327,328,329,330,331,332,238,239,333,334,335,336,337,338,339,340,341,342,343,344,345,242,243,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"29e7396d-3f0e-11e6-873d-55b6f6ff0160","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7607e-3f0e-11e6-873d-07a5f46584bc","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            if (normalMap == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[374],"tindex":"29e7607f-3f0e-11e6-873d-dddf56303bbc","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e76080-3f0e-11e6-873d-9718e7f89014","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e76081-3f0e-11e6-873d-c1ea24e23a85","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e76082-3f0e-11e6-873d-dd46532a7c7e","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e78793-3f0e-11e6-873d-bbb730aeafae","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e78794-3f0e-11e6-873d-af4e35a11d45","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[375,376,377,378,379],"tindex":"29e78795-3f0e-11e6-873d-0d1d71bc9648","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[380],"tindex":"29e78796-3f0e-11e6-873d-15c02ae5d5a3","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[381,382,383,384,385],"tindex":"29e7aea7-3f0e-11e6-873d-d3d5188dc20e","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[386,387],"tindex":"29e7aea8-3f0e-11e6-873d-ab81d9bd685e","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7aea9-3f0e-11e6-873d-1d005e4b436d","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[388,389,390],"tindex":"29e7aeaa-3f0e-11e6-873d-1deb36b90cca","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531],"tindex":"29e7d5bb-3f0e-11e6-873d-1f0d95d19acc","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7d5bc-3f0e-11e6-873d-21814d9ed26b","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7d5bd-3f0e-11e6-873d-81049a8215a1","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[532],"tindex":"29e7fcce-3f0e-11e6-873d-ad07649a574c","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7fccf-3f0e-11e6-873d-a7a35f167d93","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7fcd0-3f0e-11e6-873d-ed5f53e30f04","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[533,534,535,536,537,233,234,24,25,316,317,318,538,539,540,541,542,320,321,543,544,545,546,255,547,548,155,157,158,549,550,551,552,553,280,554,555,556,26,27,28,29,30,31,32,557,558,33,559,560,561,562,5,563,564,565,566,567,568,6,9,35,36,37,38,39,569,40,41,42,10,281,570,11,12,571,572,573,574,45,46,575,576,577,578,579,580,581,582,583,584,57,61,585,72,74,586,75,77,587,588,589,590,591,592,84,85,593,594,595,180,181,182,184,192,194,195,110,204,206,14,596,17,87,88,89,90,91,597,92,93,94,18,282,598,19,20,599,600,601,602,97,98,603,604,605,101,105,606],"tindex":"29e7fcd1-3f0e-11e6-873d-6b80d182c3e2","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e7fcd2-3f0e-11e6-873d-9f7bfc336e65","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[607,607,608,609,609,610,611,612,613,614,615],"tindex":"29e823e3-3f0e-11e6-873d-914a2f21abaf","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl"},"failures":[616,617,618,619,620,621,210,211,212,213,214,622,215,216,217,218,623,219,220,624,625,626,627,0,628,1,629,2,3,4,630,546,631,221,222,223,224,225,632,226,633,634,227,228,635,636,547,548,637],"tindex":"29e823e4-3f0e-11e6-873d-6f4fc56bb98a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e823e5-3f0e-11e6-873d-37af06b5431e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl"},"failures":[638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,279,682],"tindex":"29e84af6-3f0e-11e6-873d-d9aa6d411985","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherOffsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e84af7-3f0e-11e6-873d-533282f6221a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl"},"failures":[683,258,259,684,685,260,686,687,261,688,689,690,262,691,692,263,693,694,695,264,265,696,697,698,699,266,267,700,701,233,702,703,704,705,23,706,707,234,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,24,25,727,316,317,318,728,729,730,731,541,732,733,734,735,319,736,737,542,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,320,321,757,758,759,630,760,546,631,221,222,761,223,224,225,255,632,226,762,763,764,765,633,634,227,228,766,767,768,635,769,770,771,636,772,547,548,637,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,280,554,799,555,800,556,801,802,26,803,804,805,27,806,28,807,808,29,30,31,32,557,809,810,558,811,812,33,813,814,815,816,817,818,819,382,820,821,581,822,823,383,824,825,826,827,828,829,830,831,72,832,833,834,73,835,836,837,838,839,840,74,841,842,843,844,586,845,846,847,848,849,850,851,852,853,854,855,856,75,857,858,859,76,860,861,862,863,864,865,77,866,867,868,587,78,869,870,871,872,873,874,875,876,877,878,879,880,881,593,882,883,884,885,886,887,888,889,890,891,594,892,893,894,895,595,896,897,898,899,144],"tindex":"29e89918-3f0e-11e6-873d-6126b5d195da","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[900],"tindex":"29e89919-3f0e-11e6-873d-250152401d8a","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[901],"tindex":"29e8991a-3f0e-11e6-873d-5d0987b1da34","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e8991b-3f0e-11e6-873d-5d67177d348b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29e8c02c-3f0e-11e6-873d-87e68dccba4a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[902,903,45,46,904,97,98],"tindex":"29e8c02d-3f0e-11e6-873d-db71da99bd24","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467319316458/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}