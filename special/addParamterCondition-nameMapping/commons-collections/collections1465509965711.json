{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":376,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":694,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":791,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":695,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":816,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":512,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":577,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":232,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":404,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":693,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":691,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":805,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":298,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":383,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":653,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":657,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":659,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":658,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":562,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":423,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":786,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":219,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":696,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":664,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":513,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":555,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":380,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":684,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":410,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":721,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":11,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":69,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":192,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":725,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":252,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":738,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":826,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":261,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":761,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":755,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":113,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":158,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":547,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":333,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":116,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":763,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":724,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":774,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":387,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":502,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":639,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":121,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":478,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":31,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":796,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":377,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":783,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":426,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":554,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":18,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":732,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":330,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":678,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":75,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":459,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":460,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":753,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":127,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":780,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":224,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":398,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":574,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":741,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":530,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":358,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":681,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":503,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":79,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":521,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":401,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":556,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":90,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":25,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":708,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":230,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":636,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":535,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":605,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":785,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":514,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":806,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":243,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":583,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":553,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":494,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":835,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":170,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":710,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":86,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":350,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":777,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":424,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":815,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":414,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":800,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":180,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":578,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":572,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":118,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":373,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":436,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":336,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":836,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":375,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":560,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":833,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":571,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":570,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":569,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":793,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":321,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":824,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":668,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":246,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":525,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":370,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":582,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":533,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":445,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":573,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":501,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":66,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":306,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":634,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":123,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":157,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":99,"org.apache.commons.collections4.ListUtilsTest.testPartition":834,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":14,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":610,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":622,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":752,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":94,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":117,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":67,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":168,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":601,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":720,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":821,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":342,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":327,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":736,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":722,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":238,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":647,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":794,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":811,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":697,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":279,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.map.HashedMapTest.testClone":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":112,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":366,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":215,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":223,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":273,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":772,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":338,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":558,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":596,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":739,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":144,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":728,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":285,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":301,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":35,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":166,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":580,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":85,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":538,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":762,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":537,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":539,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":379,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":532,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":495,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":795,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":798,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":743,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":421,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":91,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":74,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":162,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":290,"org.apache.commons.collections4.list.TreeListTest.testBug35258":61,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":531,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":425,"org.apache.commons.collections4.map.LinkedMapTest.testClone":353,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":84,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":305,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":319,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":487,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":509,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":773,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":457,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":797,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":488,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":437,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":528,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":662,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":441,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":799,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":504,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":430,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":590,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":431,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":790,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":830,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":591,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":44,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":775,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":191,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":665,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":439,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":254,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":292,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":674,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":672,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":190,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":137,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":683,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":482,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":597,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":169,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":534,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":688,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":272,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.map.LRUMapTest.testLRU":549,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":77,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":767,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":239,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":689,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":626,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":782,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":831,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":326,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":623,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":819,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":153,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":119,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":727,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":378,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":365,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":48,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":212,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":199,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":751,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":265,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":185,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":455,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":776,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":154,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":818,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":613,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":492,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":543,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":384,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":256,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":464,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":750,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":480,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":297,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":15,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":715,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":723,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":640,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":131,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":520,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":82,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":152,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":206,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":703,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":381,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":354,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":308,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":745,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":101,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":337,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":625,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":325,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":604,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":505,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":656,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":803,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":823,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":654,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":655,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":106,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":309,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":827,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":784,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":419,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":194,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":470,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":709,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":392,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":391,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":237,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":289,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":612,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":295,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":687,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":621,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":682,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":792,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":374,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":300,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":707,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":766,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":122,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":233,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":650,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":200,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":758,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":461,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":768,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":462,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":631,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":734,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":611,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":497,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":348,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":616,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":648,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":255,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":406,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":667,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":274,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":507,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":744,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":0,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":189,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":314,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":705,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":499,"org.apache.commons.collections4.CollectionUtilsTest.union":740,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":89,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":500,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":385,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":155,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":208,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":21,"org.apache.commons.collections4.list.TreeListTest.testRemove":58,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":160,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":779,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":149,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":83,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":382,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":663,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":714,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":518,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":517,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":229,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":450,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":363,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":444,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":172,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":394,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":704,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.map.LRUMapTest.testClone":548,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":789,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":544,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":275,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":524,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":677,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":638,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":679,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":607,"org.apache.commons.collections4.list.TreeListTest.testListEquals":68,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":201,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":726,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":454,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":198,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":765,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":825,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":719,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":801,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":193,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":80,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":808,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":486,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":737,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":747,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":788,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":416,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":402,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":733,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":57,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":39,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":820,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":92,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":103,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":205,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":128,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":104,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":599,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":624,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":95,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":165,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":760,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":735,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":618,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":140,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":141,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":142,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":369,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":542,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":652,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":541,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":600,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":628,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":540,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":523,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":251,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":43,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":427,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":34,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":176,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":614,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":258,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":742,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":588,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":589,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":222,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":770,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":771,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":491,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":711,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":334,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":617,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":407,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":38,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":447,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":564,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":828,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":730,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":493,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":809,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":245,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":409,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":269,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":293,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":642,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":643,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":644,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":754,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":71,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":813,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":557,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":362,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":802,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":630,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":440,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":812,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":508,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":598,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":340,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":822,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":666,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":620,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":264,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":397,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":699,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":769,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":59,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":234,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":810,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":807,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":42,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":318,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":316,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":133,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":135,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":435,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":660,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":429,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":817,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":29,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":167,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":415,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":690,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":731,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":637,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":641,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":357,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":592,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":718,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":804,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":778,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":156,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":368,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":829,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":675,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":692,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":837,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":526,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":565,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":585,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":280,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":93,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":584,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":669,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":670,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":388,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":181,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":163,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":713,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":474,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":349,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":220,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":814,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":417,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":36,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":411,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":226,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":271,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":579,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":125,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":748,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":324,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":214,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":124,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":568,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":339,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":566,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":651,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":567,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":184,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":178,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":313,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":787,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":3,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":476,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":247,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":496,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":602,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":76,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":608,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":749,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":759,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":552,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":629,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":151,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":262,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":27},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"5cbca83f-2e8e-11e6-b135-a9e1f3260b59","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"5cbdb8b0-2e8e-11e6-b135-11e97ed84b85","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"5cbddfc1-2e8e-11e6-b135-ebc69d94c9e4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:235","type":"CtBinaryOperatorImpl","sourcecode":"put == null"},"failures":[],"tindex":"5cbddfc2-2e8e-11e6-b135-8bc84238d59f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"5cbe06d3-2e8e-11e6-b135-7933cccced71","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[47],"tindex":"5cbe2de4-2e8e-11e6-b135-b55029dd2277","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"5cbf1845-2e8e-11e6-b135-bdd90127e2c6","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[48,49,50,51,52,53,54,55,56],"tindex":"5cbf3f56-2e8e-11e6-b135-730db102e676","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"5cbf6667-2e8e-11e6-b135-d5c9bbcc1bb0","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"5cbf8d78-2e8e-11e6-b135-fd8260c0ace5","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            if (key2 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n                    return key1 == key2;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"5cc077d9-2e8e-11e6-b135-2fac6e011c5f","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"5cc077da-2e8e-11e6-b135-5d7a9fcdf695","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"5cc09eeb-2e8e-11e6-b135-23fdf131f40c","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[122,123],"tindex":"5cc09eec-2e8e-11e6-b135-f522822a6bb7","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[124,125,126,127,128,129],"tindex":"5cc09eed-2e8e-11e6-b135-f5341bdc9125","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start2 - end2) > (end1 - start1)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"end1","end1":"start2","start2":"start1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"5cc0c5fe-2e8e-11e6-b135-e13a881bb2cc","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[178],"tindex":"5cc0ed0f-2e8e-11e6-b135-3387e5c162f1","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) == 0"},"failures":[179],"tindex":"5cc0ed10-2e8e-11e6-b135-8b61efc1d4c1","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5cc11421-2e8e-11e6-b135-8595de4724ce","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[179],"tindex":"5cc11422-2e8e-11e6-b135-87e8d0797321","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[180],"tindex":"5cc33703-2e8e-11e6-b135-5dadce10c89c","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5cc4e4b4-2e8e-11e6-b135-971f5419d89c","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[181],"tindex":"5cc4e4b5-2e8e-11e6-b135-2b081de6619c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[182,183],"tindex":"5cc4e4b6-2e8e-11e6-b135-9f7ae72368d9","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5cc50bc7-2e8e-11e6-b135-7bbeb3a98c5d","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[184],"tindex":"5cc50bc8-2e8e-11e6-b135-81f03aea19d8","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[185,186,187,188,189,190,191,192,193,194,195,196,197,198],"tindex":"5cc50bc9-2e8e-11e6-b135-910321d6b290","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[199],"tindex":"5cc532da-2e8e-11e6-b135-17a9f9dd748c","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[],"tindex":"5cc532db-2e8e-11e6-b135-9163d4c2ab8f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[200],"tindex":"5cc532dc-2e8e-11e6-b135-536efefe819b","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5cc559ed-2e8e-11e6-b135-6d866b3ef5f0","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"tindex":"5cc559ee-2e8e-11e6-b135-13c421df9252","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"5cc580ff-2e8e-11e6-b135-2ff3f85c7b70","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[216,217],"tindex":"5cc58100-2e8e-11e6-b135-a38c63c80b61","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"5cc58101-2e8e-11e6-b135-775b5f4074ce","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[218],"tindex":"5cc58102-2e8e-11e6-b135-9fa4ac9c1144","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"5cc5a813-2e8e-11e6-b135-8799b819a76d","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[219,220,221],"tindex":"5cc64454-2e8e-11e6-b135-15175145e774","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"5cc66b65-2e8e-11e6-b135-8d2008ba6169","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[277,278,279,280],"tindex":"5cc66b66-2e8e-11e6-b135-f5546de0c2b2","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"5cc69277-2e8e-11e6-b135-5ba7a88330d3","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"5cc69278-2e8e-11e6-b135-e77dd49fa099","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[281],"tindex":"5cc69279-2e8e-11e6-b135-351f59ea018e","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5cc6b98a-2e8e-11e6-b135-d1c2f228633d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[282,283],"tindex":"5cc6b98b-2e8e-11e6-b135-65e12c9ff0d5","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[284,285],"tindex":"5cc6e09c-2e8e-11e6-b135-713ad1b1677c","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[286],"tindex":"5cc6e09d-2e8e-11e6-b135-2fba49d3b252","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"5cc6e09e-2e8e-11e6-b135-e975cea103fa","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5cc707af-2e8e-11e6-b135-6b5feef221c6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"5cc707b0-2e8e-11e6-b135-93aeb1fc248c","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298,11,12,13,15,16,17,18,19,20,21,299,300,301,302,303,304,305,306,22,23,24,25,307,26,308,27,28,309,310,311,312,313,314,315,316,36,37,38,40,41,42,43,44,45,46,317,318,319,320,321,322,323,324,325,326,327,328,329],"tindex":"5cc707b1-2e8e-11e6-b135-8b50d8ba3c5f","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"5cc72ec2-2e8e-11e6-b135-2710a080b8fb","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[20,45,251,264,330,331,332,333,334,335,336,337,338],"tindex":"5cc7f213-2e8e-11e6-b135-4b544e962fc0","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"5cc7f214-2e8e-11e6-b135-35e91ef29293","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(lengthInBits)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[339,340,341,342,343,344,345,346,347,348,349,350,351,352,283,353,354,355,356,357,358,359,360,361,121,98,99,100,101,103,104,105,106],"tindex":"5cc81925-2e8e-11e6-b135-79f8507fe84e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[362,363],"tindex":"5cc81926-2e8e-11e6-b135-d9ab4c510582","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"5cc84037-2e8e-11e6-b135-b9ac0e3bce27","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"5cc84038-2e8e-11e6-b135-7914d0126df1","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,201,382,202,203,383,204,205,384,385,206,207,386,387,208,209,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,210,423,211,212,424,213,214,425,426,215,427,428,429,430,431,432,433,195,434,435,436,196,437,438,439,440,441,442,443],"tindex":"5cc88e59-2e8e-11e6-b135-df466f3f02de","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[444,445,446,447,448,449,450,5],"tindex":"5cc88e5a-2e8e-11e6-b135-a50e66ee8ea0","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[451,339,452,340,341,453,454,455,222,223,224,225,226,342,227,228,456,457,229,230,458,459,460,461,462,463,464,465,466,467,231,343,344,468,345,469,470,471,232,233,234,235,236,346,237,238,472,473,239,240,474,475,476,477,478,479,480,481,482,483,241,347,348,484,309,485,486,487,488,489,490,491,492,349,493,494,495,496,497,498,499,500,501,502,503,350,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,351,352,529,530,283,353,531,242,243,532,533,534,244,245,246,247,248,354,249,250,535,536,251,252,537,538,539,540,541,542,543,544,545,546,253,355,356,547,548,549,550,551,552,553,554,555,556,557,558,559,560,254,255,561,562,563,256,257,258,259,260,261,262,263,564,565,264,265,566,567,568,569,570,571,572,573,574,575,266,267,268,576,357,358,577,578,579,269,270,271,272,273,359,274,580,581,582,583,275,584,585,586,587,588,589,590,591,592,593,276,360,361,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631],"tindex":"5cc8b56b-2e8e-11e6-b135-9787e93250e8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[632,633],"tindex":"5cc951ac-2e8e-11e6-b135-c959ca10900f","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[634,635],"tindex":"5cc978bd-2e8e-11e6-b135-1b63f942d8f4","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,330,668,669,670,671,672,673,674,675],"tindex":"5cc978be-2e8e-11e6-b135-2d4a1eb29815","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[487],"tindex":"5cc99fcf-2e8e-11e6-b135-efb50ac31b33","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5cc99fd0-2e8e-11e6-b135-dfcbcc020708","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"5cc9c6e1-2e8e-11e6-b135-d9112f1f4319","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[676],"tindex":"5cc9c6e2-2e8e-11e6-b135-e3b7cfcf5c2b","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"5cc9c6e3-2e8e-11e6-b135-032e7f0c20b5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(size(), coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[677,678],"tindex":"5cc9c6e4-2e8e-11e6-b135-a53f3a06e93d","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[679,680,681],"tindex":"5cc9edf5-2e8e-11e6-b135-639f9fdef53d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"5cc9edf6-2e8e-11e6-b135-e18ffc953b8b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[682,683,684,685,93,101,104,113,114],"tindex":"5cca1507-2e8e-11e6-b135-e19b86948c48","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[686],"tindex":"5cca1508-2e8e-11e6-b135-6d00a2525d1d","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[687,688],"tindex":"5cca1509-2e8e-11e6-b135-db43d92e0778","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[657,658,659,660,672,673,674,675],"tindex":"5cca3c1a-2e8e-11e6-b135-932ea61fdee9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,201,382,202,203,383,204,205,384,385,206,207,386,387,208,209,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,409,411,412,413,414,415,416,417,418,419,420,421,422,210,423,211,212,424,213,214,425,426,215,427,428,429,430,431,432,433,195,434,435,436,196,437,438,439,440,441,442,443],"tindex":"5cca3c1b-2e8e-11e6-b135-cdde0b33bc1e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,323,706,707,708,709,710,711,712,713,714,715,716,717,718,719,324,720,721,722,723,325,724,725,726,727,728,729,730,731,732,733,734,735,736,737],"tindex":"5cca632c-2e8e-11e6-b135-a54c615e1c1f","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[738],"tindex":"5cca632d-2e8e-11e6-b135-252911d2a6f2","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[284,739],"tindex":"5cca632e-2e8e-11e6-b135-03295a9371ad","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[248,250,543,544,260,263,572,573],"tindex":"5cca8a3f-2e8e-11e6-b135-2db7cf4e3b3e","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"5cca8a40-2e8e-11e6-b135-cb33bc80e6a8","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[740,741],"tindex":"5cca8a41-2e8e-11e6-b135-a7ce9348833b","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[486],"tindex":"5ccab152-2e8e-11e6-b135-df3ae6e9be6d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"5ccab153-2e8e-11e6-b135-03de982ad125","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[742],"tindex":"5ccad864-2e8e-11e6-b135-5db34e81c8e0","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"5ccad865-2e8e-11e6-b135-95391575a4f0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[445,447,4,5],"tindex":"5ccad866-2e8e-11e6-b135-ef9f2b3cc5a4","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758],"tindex":"5ccc8617-2e8e-11e6-b135-11ebf78ffd70","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"5ccc8618-2e8e-11e6-b135-15ce41e4fb81","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5cccad29-2e8e-11e6-b135-a1b280712835","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[759,760,761,762,763,764,765,766,0,1,767,768,769,770,771,772,773,774,775,776,777,778,2,779,780,781,782,783,784,3,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,4,5,803,804,805,806,807,808,809,810,811,812,813,814,815,6,7,816,817,818,819,820,821,822,823,824,825,826,827,828,8,9,829,830,831,832,833],"tindex":"5cccad2a-2e8e-11e6-b135-d1a11cc13ab4","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[834],"tindex":"5cccad2b-2e8e-11e6-b135-77fd2f08ab02","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if ((size % 2) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[835],"tindex":"5cccd43c-2e8e-11e6-b135-816be358286e","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"5cccfb4d-2e8e-11e6-b135-afdaa6520122","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"5cccfb4e-2e8e-11e6-b135-55ecae59c1d3","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"5cccfb4f-2e8e-11e6-b135-8ff0f7ccb861","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            if (key2 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n                    return key1 == key2;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5ccd2260-2e8e-11e6-b135-afedb253c9ad","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[836,298,837],"tindex":"5ccd2261-2e8e-11e6-b135-7340cf99868e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[492],"tindex":"5ccd2262-2e8e-11e6-b135-8b6458dde423","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}