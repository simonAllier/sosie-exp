{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":326,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":83,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":194,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":390,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":539,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":631,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":880,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":59,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":748,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":743,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":692,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":604,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":511,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":513,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":512,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":162,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":884,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":754,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":377,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":417,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":647,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":927,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":940,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":657,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":485,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":125,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":789,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":665,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":795,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":639,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":637,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":801,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":67,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":329,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":400,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":804,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":71,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":228,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":630,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":408,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":316,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":839,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":207,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":931,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":248,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":751,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":368,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":919,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":361,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":116,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":229,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":781,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":476,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":346,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":651,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":825,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":103,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":370,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":216,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":545,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":905,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":597,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":817,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":890,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":655,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":295,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":936,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":810,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":490,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":612,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":342,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":933,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":7,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":794,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":152,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":88,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":444,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":709,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":112,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":729,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":93,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":442,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":133,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":438,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":675,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":872,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":625,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":435,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":45,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":203,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":814,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":855,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":738,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":805,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":822,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":426,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":44,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":107,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":682,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":453,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":628,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":793,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":686,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":843,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":863,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":859,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":830,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":478,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":917,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":671,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":939,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":115,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":756,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":60,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":899,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":532,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":424,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":861,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":862,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":894,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":788,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":812,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":914,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":260,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":333,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":578,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":759,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":447,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":853,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":99,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":786,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":818,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":199,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":80,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":650,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":391,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":516,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":382,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":856,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":363,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":595,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":852,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":668,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":192,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":602,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":536,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":868,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":273,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":272,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":769,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":325,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":375,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":271,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":848,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":381,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":380,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":445,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":889,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":913,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":926,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":750,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":837,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":491,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":592,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":773,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":302,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":406,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":902,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":359,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":416,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":440,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":713,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":29,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":383,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":684,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":161,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":806,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":785,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":723,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":247,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":766,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":587,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":910,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":824,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":343,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":555,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":173,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":938,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":560,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":847,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":337,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":746,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":347,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":362,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":204,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":832,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":888,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":258,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":465,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":72,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":573,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":834,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":138,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":702,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":548,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":500,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":26,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":76,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":932,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":857,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":283,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":318,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":544,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":355,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":552,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":356,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":833,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":357,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":113,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":656,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":139,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":653,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":901,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":765,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":762,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":147,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":528,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":184,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":373,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":915,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":885,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":851,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":3,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":256,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":251,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":731,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":531,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":23,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":697,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":599,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":405,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":425,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":461,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":436,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":313,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":646,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":712,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":908,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":252,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":736,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":654,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":323,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":106,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":419,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":827,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":464,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":352,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":421,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":918,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":670,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":740,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":799,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":172,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":433,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":674,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":30,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":728,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":661,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":892,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":663,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":662,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":119,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":97,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":923,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":845,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":397,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":237,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":733,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":486,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":672,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":63,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":719,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":468,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":495,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":688,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":858,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":916,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":2,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":459,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":69,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":197,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":259,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":407,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":770,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":897,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":369,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":527,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":1,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":755,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":5,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":267,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":680,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":787,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":9,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":922,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":549,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":449,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":95,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":763,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":846,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":86,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":800,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":364,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":598,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":502,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":714,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":589,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":374,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":580,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":904,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":649,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":860,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":94,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":703,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":930,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":379,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":149,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":928,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":244,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":434,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":469,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":608,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":521,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":721,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":458,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":457,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":782,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":281,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":791,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":477,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":221,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":921,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":429,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":171,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":242,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":798,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":611,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":934,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":869,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":538,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":935,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":345,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":366,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":561,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":40,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":510,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":836,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":276,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":508,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":509,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":541,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":840,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":332,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":865,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":820,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":285,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":452,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":91,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":696,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":777,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":19,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":110,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":694,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":160,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":929,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":620,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":618,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":711,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":547,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":557,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":909,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":385,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":898,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":871,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":286,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":100,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":170,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":200,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":764,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":537,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":725,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":471,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":784,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":877,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":596,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":842,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":809,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":92,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":893,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":676,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":168,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":154,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":565,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":556,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":275,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":463,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":559,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":501,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":249,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":569,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":489,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":530,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":222,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":741,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":211,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":819,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":297,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":685,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":828,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":32,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":695,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":292,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":404,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":617,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":131,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":689,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":609,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":245,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":572,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":774,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":174,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":797,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":613,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":176,"org.apache.commons.collections4.list.TreeListTest.testRemove":677,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":250,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":213,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":601,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":829,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":912,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":101,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":427,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":46,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":567,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":683,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":27,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":739,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":262,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":878,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":621,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":700,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":808,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":387,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":0,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":183,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":393,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":89,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":182,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":181,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":431,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":903,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":193,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":708,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":315,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":196,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":475,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":467,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":802,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":607,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":772,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":867,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":813,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":900,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":838,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":783,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":53,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":941,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":811,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":314,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":177,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":293,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":105,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":190,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":265,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":577,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":306,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":367,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":322,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":826,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":886,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":849,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":895,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":296,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":629,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":515,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":309,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":717,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":734,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":66,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":767,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":87,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":883,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":796,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":389,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":925,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":348,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":606,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":349,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":705,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":704,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":142,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":747,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":339,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":760,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":882,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":230,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":231,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":232,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":690,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":591,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":582,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":583,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":506,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":410,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":473,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":409,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":581,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":141,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":266,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":907,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":737,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":558,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":41,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":462,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":317,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":518,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":394,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":395,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":807,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":137,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":924,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":350,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":634,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":879,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":448,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":240,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":870,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":33,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":841,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":881,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":15,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":188,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":209,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":636,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":823,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":529,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":480,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":481,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":482,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":681,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":780,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":11,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":742,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":645,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":775,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":78,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":876,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":68,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":875,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":17,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":821,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":673,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":77,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":850,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":233,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":117,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":757,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":311,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":831,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":937,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":835,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":874,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":488,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":718,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":470,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":90,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":624,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":308,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":749,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":579,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":745,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":328,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":776,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":920,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":134,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":543,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":586,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":75,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":61,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":320,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":28,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":687,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":896,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":224,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":779,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":584,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":648,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":225,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":778,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":261,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":667,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":487,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":660,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":84,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":268,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":257,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":574,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":238,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":701,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":37,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":640,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":873,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":707,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":758,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":517,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":214,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":474,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":479,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":398,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":768,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":575,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":58,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":752,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":669,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":195,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":246,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":25,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":815,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":590,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":722,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":844,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":854,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":864,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":866,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":911,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":340,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":720,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":803,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":730,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":887,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":493,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":761,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":494,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":792,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":790,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":615,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":208,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":371,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":135,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":771,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":627,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":64,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":289,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":253,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":691,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":891,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":603,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":698,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":79,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":642,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":710,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":136,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":744,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":526,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":392,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":310,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":553,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":568,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":753,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":652,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":816,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":20,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":290,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":505,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":570,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":906,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":535,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":264,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":466,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":679,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":365,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":241,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":522},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"52cdd297-39f5-11e6-af39-bfb5672c3795","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"52cf8048-39f5-11e6-af39-d78c4cc305fb","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"52cf8049-39f5-11e6-af39-f7292be993b6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits == 0) {\n                {\n                    final int int = offsetInBits + lengthInBits;\n                    if (offsetLength > (lengthInBits(key))) {\n                        throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n                    } \n                    if (offsetLength == 0) {\n                        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n                    } \n                    return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"52cfa75a-39f5-11e6-af39-e1a2dcc1edb6","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"52d0b8cb-39f5-11e6-af39-73a54052c34d","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[71],"tindex":"52d0dfdc-39f5-11e6-af39-d1adcde20a72","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[72],"tindex":"52d0dfdd-39f5-11e6-af39-e5fc9e9fca56","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"52d0dfde-39f5-11e6-af39-e36a20c7ab3f","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"52d106ef-39f5-11e6-af39-6b8036605abf","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[111],"tindex":"52d106f0-39f5-11e6-af39-35fbc1b00c94","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final K K = java.util.List<K>.get(index);\n                    return put(key, value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[112],"tindex":"52d106f1-39f5-11e6-af39-4163c1c4016f","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isEmpty())"},"failures":[],"tindex":"52d12e02-39f5-11e6-af39-7d386ab53c8f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"52d15513-39f5-11e6-af39-f974d8c0f534","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[113,114,115,116,117,118],"tindex":"52d15514-39f5-11e6-af39-33aa47d9d301","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[119,120,121,122,123,124,125],"tindex":"52d17c25-39f5-11e6-af39-4d136c67f17a","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"52d17c26-39f5-11e6-af39-95f3e365645b","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[168],"tindex":"52d1a337-39f5-11e6-af39-3fccbdcbe626","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"52d1a338-39f5-11e6-af39-ef93a36b0bdb","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"52d1ca49-39f5-11e6-af39-71a8407151e3","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"52d1ca4a-39f5-11e6-af39-7d9ca8ae3515","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[317,318,319,320],"tindex":"52d1f15b-39f5-11e6-af39-5df0f55717bb","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"52d302cc-39f5-11e6-af39-8b2d9d9a776e","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[321,322],"tindex":"52d302cd-39f5-11e6-af39-dd1ff219e075","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[323],"tindex":"52d329de-39f5-11e6-af39-2f311141f47e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"52d350ef-39f5-11e6-af39-431d9785dd3d","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"52d350f0-39f5-11e6-af39-c1cf7c8236fe","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[324],"tindex":"52d350f1-39f5-11e6-af39-6948c73ee32d","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"52d37802-39f5-11e6-af39-07cdf740bf5b","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[325,326],"tindex":"52d37803-39f5-11e6-af39-1989a4bbffef","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"52d37804-39f5-11e6-af39-5f43f7dcfde9","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[327,328,329,330,331,332,333,334,335],"tindex":"52d39f15-39f5-11e6-af39-e573047ee502","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"tindex":"52d39f16-39f5-11e6-af39-b7164b75e13d","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[366,367,368,369,370],"tindex":"52d3ed37-39f5-11e6-af39-135250942916","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"52d41448-39f5-11e6-af39-0d51faefc48f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[371],"tindex":"52d41449-39f5-11e6-af39-5d0d6c9b2a79","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[128,129,130,146,153,154,156,159,160,163,164,165,166,167,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,339,340,341,346,351,355,356,358,359,360,361,362,363,364,365,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473],"tindex":"52d43b5a-39f5-11e6-af39-972ac4fc4e83","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"tindex":"52d525bb-39f5-11e6-af39-8313f25d1533","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"52d54ccc-39f5-11e6-af39-4d8f55c97b04","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[32,515],"tindex":"52d54ccd-39f5-11e6-af39-0b87d1d2777b","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[516],"tindex":"52d59aee-39f5-11e6-af39-e5f35f2692cf","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[126,127,132,133,135,136,137,140,142,145,146,160,163,164,165,166,167,517,518,519,520,521,522,523,524,379,384,385,386,387,388,389,525,526,527,528,529,530,531,532,393,398,399,400,401,402,403,533,534,535,536,537,538,539,540,408,413,414,415,416,417,418,541,542,543,544,545,546,547,548,549,454,459,460,461,462,463,464,550,551,466,552,553,554,555,556,557,558,559,471,560,561,562,563,564,565],"tindex":"52d59aef-39f5-11e6-af39-9fdc0727ab78","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[566,567],"tindex":"52d5c200-39f5-11e6-af39-03e01c887e3e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"52d5c201-39f5-11e6-af39-f96ff68c3bc1","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"52d61022-39f5-11e6-af39-d71de68feb7e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[568,569,570,571],"tindex":"52d61023-39f5-11e6-af39-afb263e15bd7","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[572],"tindex":"52d61024-39f5-11e6-af39-b33a73ce4115","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[],"tindex":"52d65e45-39f5-11e6-af39-5d232f12fb11","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((trueClosure == null) || (falseClosure == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"falseClosure","trueClosure":"trueClosure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"52d65e46-39f5-11e6-af39-35b4bffee977","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[573],"tindex":"52d65e47-39f5-11e6-af39-03f7878b97c8","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[574,575,576,367,577,578,368,579,580,581,582,583,584,585,586,587],"tindex":"52d68558-39f5-11e6-af39-770b99f12d9d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[588,589,113,114,590,591,592,593,594,595,596,325,326,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,115,116,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,117,118,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676],"tindex":"52d68559-39f5-11e6-af39-c1541b202d70","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[677,678,679,680,681,682,683,684,685,686],"tindex":"52d6ac6a-39f5-11e6-af39-d99eee591333","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index > 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775],"tindex":"52d6fa8b-39f5-11e6-af39-9183a28a6efe","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"52d796cc-39f5-11e6-af39-d9a70f88be19","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"52d7bddd-39f5-11e6-af39-67016eb0bae6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"52d7bdde-39f5-11e6-af39-775a35440f4a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"52d7bddf-39f5-11e6-af39-ed81be470fc6","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[776],"tindex":"52d7e4f0-39f5-11e6-af39-7d4f72408578","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"52d7e4f1-39f5-11e6-af39-613b89aec796","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[777,778,779],"tindex":"52d7e4f2-39f5-11e6-af39-5b565ca26445","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[780,781,782,783,784,785,786,787,570,788,571,789,790,791,792],"tindex":"52d80c03-39f5-11e6-af39-874f76cf56f0","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"52d80c04-39f5-11e6-af39-454d4bb4663b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[793,404,794,795],"tindex":"52d80c05-39f5-11e6-af39-559cce671949","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"52d85a26-39f5-11e6-af39-9192363a1224","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[796,673,797,798,799,800],"tindex":"52d88137-39f5-11e6-af39-47019d295704","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"52d88138-39f5-11e6-af39-d5b7714a9d8d","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[801],"tindex":"52d88139-39f5-11e6-af39-6d54cf0a7b64","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[207,802,803,804,304,541],"tindex":"52d8a84a-39f5-11e6-af39-63e517d88fcb","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[805,806,807,808,780,809,810,570],"tindex":"52d8a84b-39f5-11e6-af39-93338b8adc34","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857],"tindex":"52d8cf5c-39f5-11e6-af39-8f47bef7ef2e","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[858],"tindex":"52d8f66d-39f5-11e6-af39-6184d23a59b9","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[859,777,860,778,779,861,862,863],"tindex":"52d8f66e-39f5-11e6-af39-55539aab5388","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"52d8f66f-39f5-11e6-af39-4bb4924205f5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final K K = java.util.List<K>.get(index);\n                    return put(key, value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[607,864,653,865],"tindex":"52d91d80-39f5-11e6-af39-ab07e3f98275","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[866,867,868,869],"tindex":"52d91d81-39f5-11e6-af39-dfeca543edf3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[870],"tindex":"52d91d82-39f5-11e6-af39-ebdef025f56b","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[737,871,872,739,873,874,875,876,877,742,878,744,745,879,746,747,748,750,751,880,758,881,759,760,762,763,764,765,766,767,768,769,770,771],"tindex":"52d94493-39f5-11e6-af39-c12f07d4500b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"52d96ba4-39f5-11e6-af39-37a006539087","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"52d9e0d5-39f5-11e6-af39-11e9da1ec2a8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[474,475,476,477,478,882,479,480,481,482,883,884,885,886,887,888,889,483,484,485,486,487,890,488,489,490,491,492,493,494,495,496,497,891,892,498,893,894,895,896,499,500,501,502,503,897,504,505,506,507,508,509,510,511,512,513,898,899,514,900,901,902],"tindex":"52da5606-39f5-11e6-af39-c782be2284fe","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[903],"tindex":"52da5607-39f5-11e6-af39-c7ce2da4d12c","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[904,905,906,907,908,909,910,911,912,913,914,915,916,917],"tindex":"52da7d18-39f5-11e6-af39-c773fb8a98ca","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[887,888,889,491,495,496,918,919,891,892,498,893,894,895,920,896,507,921,922,898,899,514,900,901,902],"tindex":"52db6779-39f5-11e6-af39-ad640eda560d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"52dbb59a-39f5-11e6-af39-fd8d970c8018","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[923],"tindex":"52dbb59b-39f5-11e6-af39-df77c2cae4ac","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[780,781,782,783,784,785,786,787,570,788,571,789,791,792,924,925,926,927,928],"tindex":"52dbdcac-39f5-11e6-af39-2f632bd6af96","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[929,930,931],"tindex":"52dbdcad-39f5-11e6-af39-0bef683110f5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"52dbdcae-39f5-11e6-af39-25ff1b083b45","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"52dc03bf-39f5-11e6-af39-93d13874f9d4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"52dc03c0-39f5-11e6-af39-f1ac4d46f419","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[531,532],"tindex":"52dc03c1-39f5-11e6-af39-097e2be3ca14","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"52dc03c2-39f5-11e6-af39-cf1f13549469","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[932],"tindex":"52dc2ad3-39f5-11e6-af39-57506ab2187f","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"52dc2ad4-39f5-11e6-af39-93e9817c6921","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits == 0) {\n                {\n                    final int int = offsetInBits + lengthInBits;\n                    if (offsetLength > (lengthInBits(key))) {\n                        throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n                    } \n                    if (offsetLength == 0) {\n                        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n                    } \n                    return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"52dc2ad5-39f5-11e6-af39-f3dde4170ea8","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"52dc2ad6-39f5-11e6-af39-21b853633ab2","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map == null) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[903,933],"tindex":"52dc51e7-39f5-11e6-af39-e302e04c0841","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"52dc51e8-39f5-11e6-af39-efe262043d0d","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (a.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"52dcc719-39f5-11e6-af39-2f979609ae56","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[934,935,525,526,936,527,528,529,937,530,531,532,393,938,939,940,941],"tindex":"52dcc71a-39f5-11e6-af39-9b1b4d0efcc4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}