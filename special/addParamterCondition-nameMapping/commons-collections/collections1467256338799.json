{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":38,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":659,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":932,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1059,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":57,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":265,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":1043,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":716,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":315,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":610,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":875,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":361,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":1112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":467,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":1134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":400,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":717,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":322,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":548,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":507,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":881,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":1096,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":829,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":657,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":902,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":1125,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":637,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":77,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":744,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":718,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":580,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":193,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":687,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":365,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":812,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":216,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":425,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":64,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":228,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":355,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":761,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":794,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":409,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":11,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":191,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":535,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":1138,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":656,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":763,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":564,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":964,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":165,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":266,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":839,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":1075,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":505,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":200,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":45,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":253,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":984,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":796,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":978,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":508,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":841,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":190,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":302,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":867,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":142,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":401,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":1120,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":299,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":440,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalFullCollectionExists":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":341,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":501,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":518,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":120,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":950,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":977,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":1032,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":809,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":1010,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":169,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":356,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":294,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":113,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":334,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":769,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":942,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":877,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":1131,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":846,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":269,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":673,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":541,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":218,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":669,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":819,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":816,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":930,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":415,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":464,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":95,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":20,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":920,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":1069,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":390,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":304,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":921,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":1073,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":1000,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":247,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":799,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":790,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":874,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":579,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":442,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":578,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":801,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":371,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":536,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":575,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":757,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":815,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":800,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":354,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":554,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":899,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":337,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":939,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":722,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":947,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":342,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":1028,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":24,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":16,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":515,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":617,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":776,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":1136,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":36,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":968,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":452,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":384,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":955,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":675,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":907,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":448,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":313,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":261,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":357,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":880,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":1044,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":1003,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":916,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":765,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":746,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":686,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":286,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":223,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":1090,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":756,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":595,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":235,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":60,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":182,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":207,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":806,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":32,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":584,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":1053,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":672,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":344,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":885,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":1006,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":251,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":696,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":943,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":870,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1057,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":929,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":1040,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":521,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":1036,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":471,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":414,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":527,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":729,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":480,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":353,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":1039,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":711,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":441,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":842,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":913,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":85,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":310,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":456,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":701,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":386,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":546,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":973,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":774,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":552,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":551,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":798,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":1018,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":447,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":789,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":634,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":683,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":962,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":404,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":243,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":666,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":898,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":762,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":1119,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":662,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":709,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":700,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":562,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":296,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":506,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":416,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":162,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":571,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":577,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":1013,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":553,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":340,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":435,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":399,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":684,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":861,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":1114,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":949,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":906,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":1088,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":3,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":144,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":821,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":213,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":891,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":109,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":309,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":931,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":1055,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":993,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":719,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":972,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":1072,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":27,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":509,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":163,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":893,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":9,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":70,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":982,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":489,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":187,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":959,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":376,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":987,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":103,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":249,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":188,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":640,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":915,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":72,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":925,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":681,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":665,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":745,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":1087,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1065,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":737,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":917,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":503,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":1015,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":957,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":293,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":413,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":782,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":124,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":735,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":980,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":122,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":370,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":570,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":1068,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":1062,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":1083,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":111,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":131,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":647,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":76,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":177,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":205,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":1106,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":1100,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":96,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":840,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":635,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":644,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":990,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":561,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":836,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":596,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":1031,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":1034,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":1102,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":155,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":455,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":688,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":407,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":285,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":667,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":37,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":268,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":19,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":305,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":569,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":900,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":1123,"org.apache.commons.collections4.list.TreeListTest.testBug35258":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":123,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":432,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":430,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":117,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":589,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":952,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":347,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":363,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":866,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":1095,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":382,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":706,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":1033,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":591,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":590,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":704,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":912,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":217,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":487,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":759,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":222,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":748,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":1109,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":1098,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":239,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":316,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":1035,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":233,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":1014,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":449,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":479,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":474,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":574,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":754,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":327,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":1004,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":970,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":802,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":868,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":692,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":105,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":887,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":492,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":884,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":1118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":626,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":785,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":438,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":75,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":679,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":823,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":520,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":159,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":563,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":1094,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":78,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.map.LRUMapTest.testLRU":539,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":784,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":234,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":847,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":1022,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":248,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":661,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":755,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":82,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":864,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":586,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":224,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":323,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":496,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":876,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":971,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":1002,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":420,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":974,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":1127,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":911,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":935,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":198,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":317,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":212,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":791,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":771,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":431,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":919,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":511,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":772,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":1077,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":469,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":979,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":818,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":690,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":47,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":545,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":813,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":119,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":237,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":314,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":642,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":1001,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":1129,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":260,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":145,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":855,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":550,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":387,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":869,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":645,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":934,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":475,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":481,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":320,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":462,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":312,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":649,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":453,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":1061,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":624,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":332,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":478,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":214,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":350,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":1137,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":910,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":705,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":171,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":599,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":28,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":862,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":311,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":908,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1058,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":468,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":652,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":650,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":697,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":1104,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":1108,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":703,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":359,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":1024,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":787,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":760,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":67,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":345,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":781,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":961,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":1041,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":502,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":767,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":483,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":1132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":795,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":965,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":59,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":878,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":856,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":408,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":825,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":1092,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":83,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":126,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":945,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":998,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":777,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":633,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalEmptyCollectionExists":612,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":1139,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":92,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":631,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":641,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":702,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":398,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":824,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":1105,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":832,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":897,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":358,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":1048,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":422,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":555,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":788,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":1007,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":766,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":482,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":86,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":495,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":1122,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":726,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":805,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":225,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":178,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":844,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":967,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":764,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":434,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":999,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":750,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":778,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":1020,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":391,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":859,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":848,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":450,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":1005,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":393,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":392,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":195,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":608,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":423,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":524,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":283,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":671,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":905,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":1089,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":710,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":620,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":643,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":297,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":896,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":68,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":668,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":1103,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":845,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":894,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":1126,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":167,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":157,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":944,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":1079,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":104,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":860,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":953,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":632,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":1016,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":560,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":339,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":775,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":786,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":369,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":628,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":537,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":488,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":465,"org.apache.commons.collections4.list.TreeListTest.testRemove":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":221,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":646,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":321,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":873,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":264,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":411,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":995,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":168,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":983,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":116,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":954,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":1097,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":13,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":752,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":985,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":1008,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":598,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":1023,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":597,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":14,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":863,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":383,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":270,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":817,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":834,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1093,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":1029,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":708,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":366,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":1011,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":208,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":220,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":301,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":179,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":254,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":638,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":792,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":557,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":886,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":529,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":994,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":1117,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":1135,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":1115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":250,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":547,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":852,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":1116,"org.apache.commons.collections4.ListUtilsTest.testSubtract":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":601,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":325,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":693,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":288,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":780,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":909,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":770,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":1071,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":803,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":245,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":720,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":568,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":491,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":1086,"org.apache.commons.collections4.list.TreeListTest.testListEquals":10,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":137,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":410,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":461,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":1030,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":1111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":367,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":858,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":938,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":810,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":843,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":963,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":1037,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":937,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":1027,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":892,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":114,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":922,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":1081,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":43,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":619,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":326,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":1070,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":627,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":1107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":451,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":740,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1084,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":951,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":958,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":797,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":712,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":1026,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":335,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":146,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1076,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":443,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":1121,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":1060,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":272,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":936,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":903,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":1130,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":559,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":8,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":738,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":1099,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":814,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":460,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":793,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":751,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":1067,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":252,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":329,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":498,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":734,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":838,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":426,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":731,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":811,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":996,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":629,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":513,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":651,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":747,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1085,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1064,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":128,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":497,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":566,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":1066,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":600,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":379,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":176,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":992,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":26,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":721,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":360,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":889,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":975,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":1025,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":523,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":333,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":125,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":530,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":282,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1082,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":850,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":1113,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":98,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMakeMap":607,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":280,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":768,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":143,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":621,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":271,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":585,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":197,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":1017,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":558,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":732,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":336,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":691,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":822,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":826,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":378,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":966,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":807,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":594,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":923,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":828,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":444,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":88,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":699,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":1124,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":872,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":948,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":895,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":918,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":883,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":808,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":84,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":727,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":1074,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":107,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":15,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":927,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":730,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":674,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":308,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":670,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":291,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":543,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":976,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":707,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":1038,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":724,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":988,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":90,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":946,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":139,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":830,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":827,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":926,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":956,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":241,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":753,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":960,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":1052,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":476,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":164,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":494,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":1133,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":486,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":648,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":997,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":677,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":1091,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":615,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":986,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":1101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":46,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":130,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":63,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":820,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":981,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":849,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":372,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":50,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":680,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":685,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":924,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":1045,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":742,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":1012,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":281,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":276,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":833,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":853,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":625,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":381,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":664,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":663,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":258,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":694,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":933,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":904,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":206,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":639,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":1021,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":298,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":194,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":723,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":890,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":267,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":533,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":185,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":331,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":40,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":229,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":473,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":1042,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":349,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":418,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":991,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":779,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":871,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":136,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1063,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":71,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":1050,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":1049,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":466,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":940,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":969,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":695,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":831,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":1009,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":236,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":655,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":783,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":1054,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":989,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":364,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":854,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":303,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":166,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":914,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":865,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":888,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":1080,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":203,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":183,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":1051,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1056,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":636,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":928,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":713,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":275,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSimpleSerialization":611,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":623,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":437,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":374,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":901,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":262,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":295,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":424,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":485,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":728,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":362,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":412,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":528,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":154,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":417,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":714,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":715,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":1,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":1110,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":132,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":540,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":121,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":1128,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":421,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":654,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":1078,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":300,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":941,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":1019,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":593,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":232,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":882,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":879,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":1047,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":1046,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":343,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":436,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":490,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":21,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":141,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":837,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":804,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":725,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":512,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":682,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":857,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":246},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0,1,2,3],"tindex":"74337fd6-3e70-11e6-aba4-318a67216e52","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"7433cdf7-3e70-11e6-aba4-396e9483618d","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"7433cdf8-3e70-11e6-aba4-a7254a94efae","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"7433f509-3e70-11e6-aba4-07e5bfaa71b5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry != null) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"74341c1a-3e70-11e6-aba4-d9d44ec57eb2","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"74341c1b-3e70-11e6-aba4-6fc4ed56d661","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"74341c1c-3e70-11e6-aba4-656da5de1d80","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits == 0) {\n                {\n                    if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                        throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n                    } \n                    final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n                    return key.startsWith(s1);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[57],"tindex":"7434432d-3e70-11e6-aba4-07c3e86fcf8e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"7434432e-3e70-11e6-aba4-9be839a9b70e","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[58,59,60,61,62,63,64,65,66],"tindex":"7434432f-3e70-11e6-aba4-c78174a3f028","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"74346a40-3e70-11e6-aba4-e52fc5227ba8","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[67],"tindex":"74346a41-3e70-11e6-aba4-3d658a6236ac","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[68],"tindex":"74346a42-3e70-11e6-aba4-2149e50c24ef","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[69],"tindex":"74349153-3e70-11e6-aba4-1f33f68787eb","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start < end) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"74349154-3e70-11e6-aba4-6bdbc113d4c4","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"74349155-3e70-11e6-aba4-319a31886f48","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"74349156-3e70-11e6-aba4-d336d35a7938","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[97],"tindex":"7434b867-3e70-11e6-aba4-d1243b90124f","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[98],"tindex":"7434b868-3e70-11e6-aba4-ad5f9be62f73","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[99,100,101,58,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"7434b869-3e70-11e6-aba4-bb3980a8b0e5","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"7434b86a-3e70-11e6-aba4-f5fe271bd451","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key != null) {\n                        final char[] char[] = key.toString().toCharArray();\n                        for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                            chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                        }\n                        return new java.lang.String(chars);\n                    } \n                    return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[406,407,408],"tindex":"7434df7b-3e70-11e6-aba4-7173e5618577","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[409,410,411,412,413,171,172,173,174,175,176,414,177,415,416,178,179,417,180,181,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,241,439,440,242,441,442,443,444,243,244,445,245,446,447,448,246,449,450,247,451,248,452,249,453,454,250,455,251],"tindex":"7434df7c-3e70-11e6-aba4-216f586dd3df","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[456,457,458,459,460,461,462,463,464,465,466,467,468,469,118,119,120,121,122,123,124,127],"tindex":"7434df7d-3e70-11e6-aba4-9bc6b9e9ff93","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[470,471,472],"tindex":"7434df7e-3e70-11e6-aba4-092446cf9fa7","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"7435068f-3e70-11e6-aba4-79dd01f6185f","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index > 0) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[473],"tindex":"74350690-3e70-11e6-aba4-cf5fdef42e70","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[474],"tindex":"74350691-3e70-11e6-aba4-537369b712e9","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[475],"tindex":"74350692-3e70-11e6-aba4-b9b658674daa","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[476],"tindex":"74352da3-3e70-11e6-aba4-a9b5d662be7b","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[394,477,478,479,480,481,482,483],"tindex":"74352da4-3e70-11e6-aba4-19da740174b0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"74352da5-3e70-11e6-aba4-93936f33a8b3","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((b.size()) != (a.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[484,485,486,17],"tindex":"74352da6-3e70-11e6-aba4-619dd897770f","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"743554b7-3e70-11e6-aba4-83e02447ec80","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"743554b8-3e70-11e6-aba4-1d30bd940892","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[61,65],"tindex":"743554b9-3e70-11e6-aba4-8b9abee3aa36","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[487],"tindex":"74357bca-3e70-11e6-aba4-cbce87b335f1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"74357bcb-3e70-11e6-aba4-6d423af158cf","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"74357bcc-3e70-11e6-aba4-2b873c794b1f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[487,488],"tindex":"74357bcd-3e70-11e6-aba4-e1c9db1197dd","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"74357bce-3e70-11e6-aba4-0b5d4e58984d","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"74357bcf-3e70-11e6-aba4-5ba8e5889aa9","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"74357bd0-3e70-11e6-aba4-5725773445ef","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"7435a2e1-3e70-11e6-aba4-3bb510b60e8b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[489,490,491,492,493,494,495,496,497,366,367,368,384,391,392,394,397,398,401,402,403,404,405,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,478,519,520,521,522,523,524,525,526,527,528,529,530,531,479,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,480,553,554,555,556,557,558,559,560,561,562,563,564,565,566,481,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,348,597,598,599,600,601,602,603,604,605,606],"tindex":"7435a2e2-3e70-11e6-aba4-65b3948ffde5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7435a2e3-3e70-11e6-aba4-93b58b7b2131","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[607,300,301,302,303,304,305,608,306,609,307,308,309,610,310,311,611,612,613],"tindex":"7435c9f4-3e70-11e6-aba4-5523d4753dbb","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[614],"tindex":"7435c9f5-3e70-11e6-aba4-1179286428a5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[464,466,615,616,617,618,619,620,621,622],"tindex":"7435c9f6-3e70-11e6-aba4-95a061c279e9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663],"tindex":"7435c9f7-3e70-11e6-aba4-17192027b57b","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[664,68,665,666,667,668,476,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692],"tindex":"7435c9f8-3e70-11e6-aba4-ed224e57d9c8","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7435f109-3e70-11e6-aba4-9ff44b57efa2","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[693,694,695,696,697,698,699,700,701,702,703],"tindex":"7435f10a-3e70-11e6-aba4-d37f049d9979","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[704,705],"tindex":"7435f10b-3e70-11e6-aba4-c7a6986350d0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"7435f10c-3e70-11e6-aba4-af7f7f80c403","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"7435f10d-3e70-11e6-aba4-efe7e306fa2d","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[706],"tindex":"7435f10e-3e70-11e6-aba4-0717998c3845","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtBinaryOperatorImpl","sourcecode":"((set.size()) > 0) || ((list.size()) > 0)"},"failures":[707,708],"tindex":"7436181f-3e70-11e6-aba4-5d49bd755a0a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (((set.size()) > 0) || ((list.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"74361820-3e70-11e6-aba4-f5c1e3bfc8b6","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"74361821-3e70-11e6-aba4-5dd5e56bc887","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"74361822-3e70-11e6-aba4-67a02700c92e","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits == 0) {\n                {\n                    if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                        throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n                    } \n                    final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n                    return key.startsWith(s1);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[709,710,711,712,713],"tindex":"74363e33-3e70-11e6-aba4-b14626d7aba7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[477,482],"tindex":"74363e34-3e70-11e6-aba4-4176aed8ed90","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"74363e35-3e70-11e6-aba4-2d4d21f4058f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[714,715,2],"tindex":"74363e36-3e70-11e6-aba4-df50712f3df2","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[716],"tindex":"74366547-3e70-11e6-aba4-854033a58d3d","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"74366548-3e70-11e6-aba4-a1cc8c363379","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[717],"tindex":"74366549-3e70-11e6-aba4-6d84ff783840","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"7436654a-3e70-11e6-aba4-11ada84e4e57","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"7436654b-3e70-11e6-aba4-3d7054988731","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[67],"tindex":"7436654c-3e70-11e6-aba4-5f9beef68f81","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[615,718],"tindex":"74368c5d-3e70-11e6-aba4-e9f036bde0b2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[719],"tindex":"74368c5e-3e70-11e6-aba4-3934348a1527","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"74368c5f-3e70-11e6-aba4-2123d4654f7f","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"74368c60-3e70-11e6-aba4-4bc668fef792","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[720],"tindex":"7436b371-3e70-11e6-aba4-9536a71c0675","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (c == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[721,722,723,724,707,725,726,727],"tindex":"7436b372-3e70-11e6-aba4-53c592ecb11a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[728],"tindex":"7436b373-3e70-11e6-aba4-f5a0d6312174","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7436b374-3e70-11e6-aba4-ab525c00bd41","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[729],"tindex":"7436b375-3e70-11e6-aba4-731a0b4914e0","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[730],"tindex":"7436b376-3e70-11e6-aba4-01e4be89210a","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7436da87-3e70-11e6-aba4-4d943fd72eff","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[731,732,733,734],"tindex":"7436da88-3e70-11e6-aba4-63d3ef9baa20","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[735],"tindex":"7436da89-3e70-11e6-aba4-d3431f3c8af3","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,671,670,674,685,675,676,677,678,679,680,681,682,683,684,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045],"tindex":"7436da8a-3e70-11e6-aba4-5d904a1a46d8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7437019b-3e70-11e6-aba4-c157ecddbb48","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1046,1047,1048],"tindex":"7437019c-3e70-11e6-aba4-69d8e644c3d9","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"7437019d-3e70-11e6-aba4-7f611433f09d","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (key != null) {\n                        final char[] char[] = key.toString().toCharArray();\n                        for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                            chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                        }\n                        return new java.lang.String(chars);\n                    } \n                    return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"7437019e-3e70-11e6-aba4-7b56e060c428","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[171,172,173,174,175,176,177,416,1049,1050,1051,1052,1053],"tindex":"7437019f-3e70-11e6-aba4-73df07970d37","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112],"tindex":"743728b0-3e70-11e6-aba4-7baca99c936e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[1113,475,1114,588],"tindex":"743728b1-3e70-11e6-aba4-f1f82e276c93","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,252,1127,1128,253,1129,1130,1131,254,255,1132,256,1133,1134,257,258,1135,259,1136],"tindex":"743728b2-3e70-11e6-aba4-cfbcac1c8245","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"743728b3-3e70-11e6-aba4-5b0eaefb40b5","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[1137],"tindex":"743728b4-3e70-11e6-aba4-e13b60551429","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1138,1132,1139],"tindex":"74374fc5-3e70-11e6-aba4-fb45479cca09","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"74374fc6-3e70-11e6-aba4-f5226d80a839","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[1113,1114],"tindex":"74374fc7-3e70-11e6-aba4-09e7385407e2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"74374fc8-3e70-11e6-aba4-3f2080213341","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"74374fc9-3e70-11e6-aba4-4bbb2de0263e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359115/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}