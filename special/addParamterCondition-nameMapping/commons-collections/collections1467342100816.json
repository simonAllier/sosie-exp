{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":656,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":131,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":488,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":567,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":421,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":319,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":341,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":310,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":529,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":58,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":259,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":526,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":155,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":75,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":195,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":354,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":592,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":400,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":69,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":595,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":605,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":138,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":137,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":666,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":80,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":468,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":297,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":696,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":600,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":515,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":663,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":552,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":699,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":622,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":606,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":112,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":302,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":505,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":452,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":692,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":707,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSimpleSerialization":267,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":291,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":688,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":324,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":731,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":284,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":417,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":398,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":106,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":693,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":216,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":679,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":343,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":554,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":615,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":28,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":9,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":472,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":508,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":431,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":178,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":372,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":669,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":668,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":150,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":493,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":153,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":320,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":416,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":664,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":185,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":425,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesClearChangesMap":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":281,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":292,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":596,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":363,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":525,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":610,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":474,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":97,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":318,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":441,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":339,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":387,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":83,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":420,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":263,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":479,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":300,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":657,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":698,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":451,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":358,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":116,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":221,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":315,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":176,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":288,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":755,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":396,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":144,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":591,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":424,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":274,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":536,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":466,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":162,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":727,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":173,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":121,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":56,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":67,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":350,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":327,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":445,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullKey":246,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":717,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":8,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":741,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":397,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":17,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":674,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":146,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":667,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":430,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":645,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":190,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":44,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEmptyMapCompatibility":247,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":662,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":380,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":11,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":627,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":282,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":225,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":602,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":227,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":236,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":361,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":96,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":642,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":509,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":677,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":734,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":143,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":661,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":721,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":18,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":347,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":19,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":334,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":470,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":557,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":556,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":333,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFullMapCompatibility":249,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":369,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":125,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":713,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":49,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":245,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":355,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":360,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":671,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":684,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":546,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":582,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":123,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":584,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":110,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":496,"org.apache.commons.collections4.map.LRUMapTest.testClone":462,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":570,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":514,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":124,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":460,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":560,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":589,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":543,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":647,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":193,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":471,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":241,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":467,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":1,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":89,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":385,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":41,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":728,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":722,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":91,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":7,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":348,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":571,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":697,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":174,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":598,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":751,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":422,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":2,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveAll":243,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":750,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":27,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":127,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":654,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":710,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":141,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":708,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":61,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":593,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":285,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":338,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":681,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":165,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":456,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapHashCode":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":37,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":745,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":15,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":486,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":158,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":484,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":161,"org.apache.commons.collections4.map.LRUMapTest.testReset":450,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":501,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":690,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":730,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":678,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":26,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":346,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":624,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":177,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":623,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":156,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":569,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":100,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":365,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":651,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":548,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":371,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":202,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":438,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":463,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":293,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":308,"org.apache.commons.collections4.map.LinkedMapTest.testReset":538,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":473,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":576,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":597,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":748,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":57,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":294,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":87,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":504,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":197,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":631,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":332,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":390,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":74,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":223,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":211,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":13,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetClearChangesMap":235,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":90,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":289,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":384,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":489,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":644,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":278,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":507,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMakeMap":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":650,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":739,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":388,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":36,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":566,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":394,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":405,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":558,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":565,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":564,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":196,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":342,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":21,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":160,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRetainAll":261,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testCanonicalEmptyCollectionExists":266,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":568,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":406,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":367,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":23,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":531,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":273,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":499,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":646,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":321,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":535,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":260,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":307,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":111,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":435,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":46,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":436,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":625,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":437,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":330,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":198,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":317,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":753,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":383,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":295,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":683,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":614,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":370,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":276,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":237,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":612,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":476,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":749,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":497,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":98,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":95,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":109,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":268,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":575,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":331,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":30,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":147,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":449,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":118,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":754,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":454,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":402,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":517,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":157,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":335,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":492,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":686,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":119,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullValue":240,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":368,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":148,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":234,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":233,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":232,"org.apache.commons.collections4.SetUtilsTest.testHashCode":752,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":634,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":694,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":215,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":562,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":561,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":298,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":563,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":626,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":510,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":659,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":547,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":453,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":534,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":550,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":395,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveAll":254,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":715,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":583,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":621,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":152,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":695,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":393,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":50,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":175,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":120,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":344,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":733,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":24,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":107,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":208,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":574,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":386,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":313,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":528,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":540,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":203,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":213,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":613,"org.apache.commons.collections4.map.LinkedMapTest.testClone":542,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":76,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":579,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":299,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":723,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":506,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":738,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":620,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":16,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":286,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":48,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":257,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":184,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":375,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":357,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":746,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":712,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":66,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":85,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":518,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":619,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":464,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":608,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":458,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":709,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":732,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":168,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":702,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":516,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":200,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":743,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":716,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":151,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":689,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":64,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":628,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":630,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":725,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":629,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":703,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":189,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testCanonicalFullCollectionExists":264,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":440,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":555,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":258,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":101,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":220,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":735,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":79,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":345,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":711,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":179,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":251,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":34,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":675,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":603,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":4,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":377,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":301,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":33,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":429,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":43,"org.apache.commons.collections4.CollectionUtilsTest.find":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":604,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":714,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":229,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":477,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":465,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRetainAll":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":159,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":433,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":133,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":432,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":586,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":132,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":218,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":519,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":729,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":325,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":373,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":665,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":427,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":587,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":328,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":105,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":676,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":502,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":530,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":188,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":549,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":102,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":520,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":594,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":442,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":81,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":747,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":312,"org.apache.commons.collections4.map.LRUMapTest.testLRU":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":691,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":687,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":737,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsSelfHashCode":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":329,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":115,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":322,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":242,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":392,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":423,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":35,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":94,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":399,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":389,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":480,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":426,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":719,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":54,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":617,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":411,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":205,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":224,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":459,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":611,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":585,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":53,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":253,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":483,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":142,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":511,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":418,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":481,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":482,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":649,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":736,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":455,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":637,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":701,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":283,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":407,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":413,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":461,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":742,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":239,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":314,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":311,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":381,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":382},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"2259d5e5-3f38-11e6-9b77-7b99e3ade961","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225a7226-3f38-11e6-9b77-f11c38680c5e","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[47,48,49,50,51],"tindex":"225a7227-3f38-11e6-9b77-2b6411d36dda","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[52],"tindex":"225a9938-3f38-11e6-9b77-953a4c1c824e","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225a9939-3f38-11e6-9b77-851ca0e9eab2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl"},"failures":[53,54,55,56,57,58],"tindex":"225ac04a-3f38-11e6-9b77-7baa084e8a16","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start2 - end2) > (start2 - start1)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"start2","end1":"start2","start2":"start1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[59,60,61,62],"tindex":"225ae75b-3f38-11e6-9b77-5d675eef3488","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225b0e6c-3f38-11e6-9b77-574d58c8d7cc","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225b0e6d-3f38-11e6-9b77-739f20d42dd1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"225b0e6e-3f38-11e6-9b77-15372259d58e","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[106],"tindex":"225b357f-3f38-11e6-9b77-995ae85032a4","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[49],"tindex":"225b3580-3f38-11e6-9b77-e3f5e6ce23f9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[107],"tindex":"225b5c91-3f38-11e6-9b77-d1573746f797","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225b5c92-3f38-11e6-9b77-51e0a58eaf14","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl"},"failures":[108,108,109,109,110],"tindex":"225b5c93-3f38-11e6-9b77-cf7ed1c6c50a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225b83a4-3f38-11e6-9b77-1d7c92e17a1c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225b83a5-3f38-11e6-9b77-0fccbc65db46","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225baab6-3f38-11e6-9b77-a3571377af0a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[111],"tindex":"225baab7-3f38-11e6-9b77-e9df9dadba7f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225baab8-3f38-11e6-9b77-dbb241bf32a3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"225bd1c9-3f38-11e6-9b77-ef2b8037d7d8","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                        {\n                            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                                return true;\n                            } \n                            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n                            } \n                            if ((obj instanceof java.util.Map) == false) {\n                                return false;\n                            } \n                            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                            if ((int) != (other.size())) {\n                                return false;\n                            } \n                            if ((int) > 0) {\n                                java.lang.Object java.lang.Object = null;\n                                switch (int) {\n                                    case 3 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                    case 2 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                    case 1 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                }\n                            } \n                            return true;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225bf8da-3f38-11e6-9b77-5d2376ac463d","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225bf8db-3f38-11e6-9b77-0d32779e36ff","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl"},"failures":[129],"tindex":"225bf8dc-3f38-11e6-9b77-3b7519e636ac","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225bf8dd-3f38-11e6-9b77-e90cce4005fe","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[130,131],"tindex":"225c1fee-3f38-11e6-9b77-ebb86f33f2ad","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[132,133,134,135,136,137,138,139],"tindex":"225c1fef-3f38-11e6-9b77-2b9d751e62eb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225c1ff0-3f38-11e6-9b77-5157a8547e41","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225c4701-3f38-11e6-9b77-1521b2df2e07","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[140],"tindex":"225c4702-3f38-11e6-9b77-35db21d44d0f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[141,142],"tindex":"225c4703-3f38-11e6-9b77-692a67fbc2a4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225c4704-3f38-11e6-9b77-8118d8fd2dfa","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[143,144,145,146],"tindex":"225c6e15-3f38-11e6-9b77-3bcb81b9aa13","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[147],"tindex":"225c9526-3f38-11e6-9b77-61170fad018c","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[148,149],"tindex":"225c9527-3f38-11e6-9b77-87274b2a3008","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[150,151,27,152,153,154],"tindex":"225c9528-3f38-11e6-9b77-edc016f9dddb","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl"},"failures":[],"tindex":"225c9529-3f38-11e6-9b77-7d750cf62cec","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225cbc3a-3f38-11e6-9b77-27cb83f289ee","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,132,133,134,184,185,186,187,188,189,190,191,135,192,193,194,195,196],"tindex":"225cbc3b-3f38-11e6-9b77-71a24c929b29","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[108,108,197,109,109,110,198,199,200,201,202],"tindex":"225ce34c-3f38-11e6-9b77-cbc9507866a5","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225ce34d-3f38-11e6-9b77-0d391eb49869","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl"},"failures":[203],"tindex":"225d0a5e-3f38-11e6-9b77-455bdf228b3b","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225d0a5f-3f38-11e6-9b77-d1b81734bf53","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225d0a60-3f38-11e6-9b77-fb5ff57b2d12","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[204,205,206,207],"tindex":"225d0a61-3f38-11e6-9b77-8546d2806061","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[208],"tindex":"225d0a62-3f38-11e6-9b77-c3d67bc3405e","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[209,210],"tindex":"225d3173-3f38-11e6-9b77-992b563c03b6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225d3174-3f38-11e6-9b77-df9a84b4f16b","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[130,131,211,212],"tindex":"225d3175-3f38-11e6-9b77-87df81ca065e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl"},"failures":[213,214,215,216,217,218],"tindex":"225d5886-3f38-11e6-9b77-d7cbc3475450","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225d5887-3f38-11e6-9b77-df00b1b347c9","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[219],"tindex":"225d5888-3f38-11e6-9b77-2dce7a2638f1","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"225d5889-3f38-11e6-9b77-1bb3917f7c1c","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225d7f9a-3f38-11e6-9b77-39b1f2e74796","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225d7f9b-3f38-11e6-9b77-9b24dccf958a","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225d7f9c-3f38-11e6-9b77-2fe5b7388b82","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                        {\n                            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                                return true;\n                            } \n                            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n                            } \n                            if ((obj instanceof java.util.Map) == false) {\n                                return false;\n                            } \n                            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                            if ((int) != (other.size())) {\n                                return false;\n                            } \n                            if ((int) > 0) {\n                                java.lang.Object java.lang.Object = null;\n                                switch (int) {\n                                    case 3 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                    case 2 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                    case 1 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                }\n                            } \n                            return true;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl"},"failures":[118,122,271,272],"tindex":"225da6ad-3f38-11e6-9b77-3d1bf79d6278","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225da6ae-3f38-11e6-9b77-1bf219e1b7c7","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,114,115,117,118,119,121,124,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"225da6af-3f38-11e6-9b77-813f9cf6c501","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379],"tindex":"225dcdc0-3f38-11e6-9b77-09bedeb445fb","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[380,381,273,382,274,383,384,385,386,387,388,389,390,391,392,393,394,275,395,396,397,398,399,400,401,276,402,277,403,404,405,406,407,408,409,410,411,412,413,414,278,415,416,417,418,419,420,421,422,423,424,114,115,116,117,118,119,120,425,121,426,122,427,428,123,124,429,430,431,432,433,434,435,436,437,271,438,439,272,440,441,442,443,444,445,446,447,448,449,450,451,452,143,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,306,307,471,308,309,310,472,473,311,474,475,312,476,477,313,314,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,315,316,511,317,318,319,512,513,320,514,321,515,516,322,323,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,146,540,541,145,144,542,543,544,545,546,547,548,549,550,335,336,551,337,338,339,552,553,340,554,555,341,556,557,342,343,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"225dcdc1-3f38-11e6-9b77-b90d840806b1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[587],"tindex":"225df4d2-3f38-11e6-9b77-3f080a741180","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[588,589,590,591],"tindex":"225df4d3-3f38-11e6-9b77-f17ff27e33ac","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl"},"failures":[592],"tindex":"225df4d4-3f38-11e6-9b77-ff4c5cef223d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225df4d5-3f38-11e6-9b77-31b028f977e1","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616],"tindex":"225df4d6-3f38-11e6-9b77-eddd2a5355dc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225e1be7-3f38-11e6-9b77-cf1a99dfacb2","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                        {\n                            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                                return true;\n                            } \n                            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n                            } \n                            if ((obj instanceof java.util.Map) == false) {\n                                return false;\n                            } \n                            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                            if ((int) != (other.size())) {\n                                return false;\n                            } \n                            if ((int) > 0) {\n                                java.lang.Object java.lang.Object = null;\n                                switch (int) {\n                                    case 3 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                    case 2 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                    case 1 :\n                                        if ((other.containsKey(K)) == false) {\n                                            return false;\n                                        } \n                                        otherValue = other.get(K);\n                                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                                            return false;\n                                        } \n                                }\n                            } \n                            return true;\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[617],"tindex":"225e42f8-3f38-11e6-9b77-fd4b8efa0ec0","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[618],"tindex":"225e42f9-3f38-11e6-9b77-259f7cd7b919","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl"},"failures":[619,620],"tindex":"225e42fa-3f38-11e6-9b77-1d1b1efd3119","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (parentOfSubtree == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"parentOfSubtree"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[621,622],"tindex":"225e42fb-3f38-11e6-9b77-85a2e1fd3961","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[623,624,625,626,627,628,629,630,631,632,633,634,635,636,637],"tindex":"225e6a0c-3f38-11e6-9b77-07766a49433d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[622,638,639,640,641,642],"tindex":"225e6a0d-3f38-11e6-9b77-f1e0d7062e11","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[643,644,645,646],"tindex":"225e6a0e-3f38-11e6-9b77-0123798f04e4","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[647],"tindex":"225e6a0f-3f38-11e6-9b77-57deaa673eec","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl"},"failures":[648,649,47,48,650,651,652,653,654,655,209,656,657,658,659,660,661,593,594,595,596,597,598,599,662,600,663,601,49,664,602,603,665,666,667,668,669,670,671,672,673,210,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,50,51,689,690,691,692,693,694,695,696,608,609,697,610,611,612,613,698,614,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718],"tindex":"225e9120-3f38-11e6-9b77-8da8bcebea95","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225e9121-3f38-11e6-9b77-d7bd0bb57c4e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[719],"tindex":"225e9122-3f38-11e6-9b77-bdf4484358ca","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225e9123-3f38-11e6-9b77-3723474a49d8","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[587],"tindex":"225eb834-3f38-11e6-9b77-4ff7a9869236","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[720,721,643,722,723,724,725,726,6,10,727,728,729,730,644,731,732,733,645,734],"tindex":"225eb835-3f38-11e6-9b77-d37ca40be53a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[52],"tindex":"225eb836-3f38-11e6-9b77-4590af2d834f","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl"},"failures":[],"tindex":"225eb837-3f38-11e6-9b77-93c5845df26d","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(lengthInBits)) {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225edf48-3f38-11e6-9b77-b1cfaa6b1d6c","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225edf49-3f38-11e6-9b77-0b5bf227396f","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225edf4a-3f38-11e6-9b77-378cfbfefdea","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[735,736,737,738,739,740,741,742,743],"tindex":"225edf4b-3f38-11e6-9b77-5f034cb1fec3","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[744,745],"tindex":"225edf4c-3f38-11e6-9b77-6327523e6c50","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[746,747],"tindex":"225f065d-3f38-11e6-9b77-7fa62f838fa0","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[748,749,750,751],"tindex":"225f065e-3f38-11e6-9b77-e76edfb88cf1","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225f065f-3f38-11e6-9b77-5b773f2f0432","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225f0660-3f38-11e6-9b77-cd7b4d5e88c8","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object instanceof java.util.Iterator<?>) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return decorated().remove(object, count);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225f0661-3f38-11e6-9b77-ad529937850d","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl"},"failures":[752],"tindex":"225f2d72-3f38-11e6-9b77-05383a85f9da","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[753],"tindex":"225f2d73-3f38-11e6-9b77-79c3c831003b","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[754],"tindex":"225f2d74-3f38-11e6-9b77-bffe3c44eddd","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[755],"tindex":"225f5485-3f38-11e6-9b77-55d78dc6bd07","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225f5486-3f38-11e6-9b77-fdd4ac82da10","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object instanceof java.util.Iterator<?>) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return decorated().remove(object, count);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225f5487-3f38-11e6-9b77-3b49471f8c65","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"225f5488-3f38-11e6-9b77-9dd6dd8e9a59","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object instanceof java.util.Iterator<?>) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467337612573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return decorated().remove(object, count);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}