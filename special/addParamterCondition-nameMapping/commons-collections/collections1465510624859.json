{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":739,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":644,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":517,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":300,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":226,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":504,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":502,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":399,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSerializeDeserializeThenCompare":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":747,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":116,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":293,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":777,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":608,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":430,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":703,"org.apache.commons.collections4.CollectionUtilsTest.get":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":624,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":330,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":232,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":774,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":713,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":195,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":699,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":721,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":598,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":349,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":154,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":743,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":258,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":694,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":770,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":375,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":390,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":559,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":480,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":509,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":437,"org.apache.commons.collections4.ListUtilsTest.testEquals":530,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":662,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":114,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":756,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":639,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":684,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":95,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":748,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":707,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":225,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":0,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":740,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":711,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":345,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":306,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":591,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":656,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":671,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":602,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":350,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":652,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":303,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":575,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":283,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":157,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":659,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":152,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":153,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":151,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":264,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":337,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":731,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":32,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":767,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":681,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":212,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":351,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":419,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":203,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":589,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":422,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":564,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":372,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":34,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":727,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":755,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":317,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":344,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":551,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":53,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":162,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":184,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":586,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":548,"org.apache.commons.collections4.CollectionUtilsTest.get1":573,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":706,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":620,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":465,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":500,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":301,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":724,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":745,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":365,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":792,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":36,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":426,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":448,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":447,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":158,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":446,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":406,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":486,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":629,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":106,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":519,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":407,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":102,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":316,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":358,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":567,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":611,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":329,"org.apache.commons.collections4.map.LinkedMapTest.testReset":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":394,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":144,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":180,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":292,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":546,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":91,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":508,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":483,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":776,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":658,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":780,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":789,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":625,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":615,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":405,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":72,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":101,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":231,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":145,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":648,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":514,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.map.HashedMapTest.testClone":216,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":712,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":521,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":709,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":263,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":601,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":791,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":484,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":645,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":691,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":308,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":424,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":635,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":520,"org.apache.commons.collections4.SetUtilsTest.testHashCode":782,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":595,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":314,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":380,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":379,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":381,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":220,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":742,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":176,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":702,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":392,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":391,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":457,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":710,"org.apache.commons.collections4.map.LinkedMapTest.testClone":348,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":167,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":604,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":568,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":168,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":431,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":726,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":237,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":507,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":771,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":210,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":185,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":717,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":370,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":720,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":718,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":105,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":683,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":319,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":626,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":728,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":427,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":685,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":610,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":80,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":408,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":99,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":590,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":476,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":140,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":660,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":609,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":307,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":334,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":599,"org.apache.commons.collections4.map.LRUMapTest.testLRU":341,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":535,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":549,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":234,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":164,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":594,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":57,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":592,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":741,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":223,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":734,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":129,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":715,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":705,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":613,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":143,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":173,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":751,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":287,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":248,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":557,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":510,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":565,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":245,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":543,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":160,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":686,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":560,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":462,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":784,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":783,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":759,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":119,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":753,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":754,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":367,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":138,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":772,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":369,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":773,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":186,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":104,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":606,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":107,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":218,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":291,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":762,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":761,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":141,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":229,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":83,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":452,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":402,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":311,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":42,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":43,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":553,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":41,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":155,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":39,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":518,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":790,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":333,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":612,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":545,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":134,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":787,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":738,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":563,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":677,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":284,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":368,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":537,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":732,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":286,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":285,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":65,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":576,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":187,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":50,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":255,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":377,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":428,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":571,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":469,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":312,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":189,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":178,"org.apache.commons.collections4.CollectionUtilsTest.union":680,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":760,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":262,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":752,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":84,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":757,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":529,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":515,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":744,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":150,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":200,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":199,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":600,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":633,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":627,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":354,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":765,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":764,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":454,"org.apache.commons.collections4.map.LRUMapTest.testClone":340,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":20,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":640,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":230,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":481,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":318,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":378,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":412,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":429,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":206,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":584,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":654,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":607,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":389,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":78,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":750,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":260,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":494,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":544,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":775,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":166,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":668,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":778,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":188,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":228,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":605,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":653,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":11,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":769,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":663,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":387,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":539,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":472,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":98,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":749,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":100,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":650,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":58,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":86,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":52,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":736,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":512,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":647,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":384,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":62,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":71,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":376,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":383,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":88,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":714,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":289,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":272,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":630,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":48,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":461,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":522,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":115,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":433,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":577,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":325,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":326,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":657,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":51,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":470,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":163,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":47,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":440,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":174,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":236,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":693,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":309,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":661,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":131,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":493,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":423,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":786,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":729,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":697,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":617,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":310,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":464,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":257,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":54,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":33,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":247,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":346,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":673,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":133,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":511,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":265,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":222,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":682,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":631,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":675,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":398,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":689,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":40,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":704,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":688,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":723,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":716,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":479,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":1,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":698,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":785,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":24,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":432,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":299,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":332,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":725,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":646,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":491,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":768,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":672,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":579,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":532,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":411,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":87,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":208,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":634,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":501,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":404,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":324,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":458,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":779,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":623,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":315,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":534,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":667,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":794,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":239,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":746,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":415,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":439,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":695,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":267,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":788,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":305,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":489,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToString":566,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":302,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":558,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":313,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":77,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":342,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":708,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":655,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":665,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":497,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":416,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":170,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":443,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":444,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":550,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":241,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":364,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":79,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":438},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"e59e5a85-2e8f-11e6-b881-792819f3e162","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[],"tindex":"e59f1dd6-2e8f-11e6-b881-61813b22bcc5","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[],"tindex":"e59f1dd7-2e8f-11e6-b881-2586cb55121a","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[],"tindex":"e59f44e8-2e8f-11e6-b881-e583f52dbd9a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"e59f6bf9-2e8f-11e6-b881-3d3961323247","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"e59f930a-2e8f-11e6-b881-0f5ba4211a3c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:123","type":"CtBinaryOperatorImpl","sourcecode":"(array.length) > 0"},"failures":[1,2,3,4,5,6,7,8],"tindex":"e59fba1b-2e8f-11e6-b881-339154d261fb","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"object","length":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[9],"tindex":"e59fba1c-2e8f-11e6-b881-61e06c255a1b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[10],"tindex":"e59fe12d-2e8f-11e6-b881-17dbebbec909","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 == null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e5a0083e-2e8f-11e6-b881-f733d172d5cf","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Integer"},"failures":[11,12,13,14,15],"tindex":"e5a02f4f-2e8f-11e6-b881-878b82c517b4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value instanceof java.lang.Integer) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"e5a02f50-2e8f-11e6-b881-bfb65e230488","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[36,37],"tindex":"e5a05661-2e8f-11e6-b881-4988379fcea4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"e5a05662-2e8f-11e6-b881-a9260a1d2828","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[38,39],"tindex":"e5a07d73-2e8f-11e6-b881-7bb5636be6a5","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                {\n                    if (key == null) {\n                        return null;\n                    } \n                    return super.getEntry(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[40],"tindex":"e5a07d74-2e8f-11e6-b881-91621aedec14","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[],"tindex":"e5a0a485-2e8f-11e6-b881-eb2254a08b8a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index == (-1)) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[41,42,43,44,45,46],"tindex":"e5a0cb96-2e8f-11e6-b881-c75b4bdab093","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[47],"tindex":"e5a0cb97-2e8f-11e6-b881-515d6c907de9","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start == 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,38,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,39,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,10,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396],"tindex":"e5a0f2a8-2e8f-11e6-b881-43a71561294c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if (newCapacity == 0) {\n        {\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n            if (newCapacity <= oldCapacity) {\n                return ;\n            } \n            if ((int) == 0) {\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n            } else {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                (int)++;\n                for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                    if (entry != null) {\n                        oldEntries[i] = null;\n                        do {\n                            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            final int int = hashIndex(entry.int, newCapacity);\n                            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                            newEntries[index] = entry;\n                            entry = next;\n                        } while (entry != null );\n                    } \n                }\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"newCapacity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[397],"tindex":"e5a167d9-2e8f-11e6-b881-675f893fbcc5","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[38,39],"tindex":"e5a167da-2e8f-11e6-b881-21f817487796","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl","sourcecode":"(cacheSize) == 0"},"failures":[],"tindex":"e5a18eeb-2e8f-11e6-b881-79592fcb2e4e","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (bitIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[308,314,328,331],"tindex":"e5a18eec-2e8f-11e6-b881-dd5a436717ce","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","b":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:128","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"e5a1b5fd-2e8f-11e6-b881-bd72e64c5d36","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"k"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e5a1dd0e-2e8f-11e6-b881-87e079acc452","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[412],"tindex":"e5a1dd0f-2e8f-11e6-b881-0fc4d721198c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"e5a20420-2e8f-11e6-b881-11e3dfd87f6b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (!(obj == null ? obj == null : o1.equals(o2))) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"obj","o2":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[413,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,173,171,172,414,166,167,168,169,10,415,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,218,219,221,222,224,225,226,227,229,231,232,233,234,235,239,240,241,242,243,244,245,248,249,252,253,254,255,256,416,258,417,418,257,259,260,261,263,264,266,267,268,269,271,273,274,275,276,277,281,282,283,284,285,286,287,290,291,294,295,296,297,298,299,419,300,301,302,304,305,307,308,309,310,312,314,315,316,317,318,322,323,324,325,326,327,328,331,332,335,336,337,338,339,341,420,342,343,344,345,421,422,423,424,425,426,340,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,346,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,351,352,457,348,355,356,357,358,359,361,362,364,365,366,367,369,371,372,373,374,375,379,380,381,382,383,384,385,388,389,392,393,394,395,396],"tindex":"e5a20421-2e8f-11e6-b881-2b36e1de06d8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[458,459,460,461],"tindex":"e5a22b32-2e8f-11e6-b881-f98698417163","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[462,463],"tindex":"e5a22b33-2e8f-11e6-b881-41583e60f2b7","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[464],"tindex":"e5a25244-2e8f-11e6-b881-fd59a1ba8626","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl","sourcecode":"(x.getLeft(dataElement)) != null"},"failures":[465,466,467,468,469,470,471],"tindex":"e5a25245-2e8f-11e6-b881-a9710a3e14bb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e5a27956-2e8f-11e6-b881-e3f42dafc8b7","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[472],"tindex":"e5a27957-2e8f-11e6-b881-19b9e00c2c04","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == coll) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[473,474,475,476,477,478,479,480,481,482,174,175,176,192,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522],"tindex":"e5a27958-2e8f-11e6-b881-5b65e425b4c2","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e5a2a069-2e8f-11e6-b881-e5166830dd41","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtBinaryOperatorImpl","sourcecode":"(!(nextCalled)) || (removed)"},"failures":[],"tindex":"e5a2a06a-2e8f-11e6-b881-29596785f230","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if ((!forceInclusive) || forceInclusive) {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"forceInclusive","nextCalled":"forceInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[523],"tindex":"e5a2a06b-2e8f-11e6-b881-cb3f57fb85b6","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[524,525,526,527,528,529],"tindex":"e5a2a06c-2e8f-11e6-b881-29b90e035e0e","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[530],"tindex":"e5a2c77d-2e8f-11e6-b881-23cf7e754104","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list2 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtBinaryOperatorImpl","sourcecode":"current == tree"},"failures":[],"tindex":"e5a2c77e-2e8f-11e6-b881-bbf1b2bc7a1b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"h","tree":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[173,414,166],"tindex":"e5a2ee8f-2e8f-11e6-b881-b34efe1d4495","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[531,532,533,534,535,536],"tindex":"e5a2ee90-2e8f-11e6-b881-cd497d639d3e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572],"tindex":"e5a315a1-2e8f-11e6-b881-577dee250458","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:349","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection) {\n    if ((compositeCollection == null) || (compositeCollection == null)) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"compositeCollection","b":"compositeCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[573],"tindex":"e5a315a2-2e8f-11e6-b881-438dfca0886a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object != null) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"e5a33cb3-2e8f-11e6-b881-7bc78fc68635","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"e5a33cb4-2e8f-11e6-b881-f50c5cc41000","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[574,575,576,577],"tindex":"e5a363c5-2e8f-11e6-b881-838351cd1782","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtBinaryOperatorImpl","sourcecode":"retval > 0"},"failures":[],"tindex":"e5a363c6-2e8f-11e6-b881-d3dc043d1eb5","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end > 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"end"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[578],"tindex":"e5a363c7-2e8f-11e6-b881-c53996916228","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtVariableReadImpl","sourcecode":"hasNext"},"failures":[],"tindex":"e5a363c8-2e8f-11e6-b881-1102dad88cc3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"e5a38ad9-2e8f-11e6-b881-538f7b82ff86","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e5a38ada-2e8f-11e6-b881-9910cb8b64d8","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                {\n                    if (key == null) {\n                        return null;\n                    } \n                    return super.getEntry(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e5a38adb-2e8f-11e6-b881-8f5f16485d77","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"e5a3b1ec-2e8f-11e6-b881-0b5b0c7c7ff7","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(indexRelativeToMe)) {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"indexRelativeToMe"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[],"tindex":"e5a3b1ed-2e8f-11e6-b881-59ef4bd25c46","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"e5a3b1ee-2e8f-11e6-b881-f5783246a0d5","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[437,454,455],"tindex":"e5a3d8ff-2e8f-11e6-b881-d1c89fb188b3","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[11,12,579,13,14],"tindex":"e5a3d900-2e8f-11e6-b881-d33f2ecb5bf3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e5a3d901-2e8f-11e6-b881-0ba6bf7847c1","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == coll) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[580,581,582,583,584,585,586,587,588,589],"tindex":"e5a3d902-2e8f-11e6-b881-7d448a9d1d73","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtFieldReadImpl","sourcecode":"hasNext"},"failures":[590,591,592,593,594,595,596,597,598,599,600,601],"tindex":"e5a40013-2e8f-11e6-b881-1182c213aea8","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasNext":"reverse"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[602],"tindex":"e5a40014-2e8f-11e6-b881-3b7c828af838","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[603],"tindex":"e5a42725-2e8f-11e6-b881-cfccb30b5849","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtBinaryOperatorImpl","sourcecode":"cur == cursor"},"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"e5a42726-2e8f-11e6-b881-e144bca18387","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == cursor) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor","cur":"cursor"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[671,672,673,467,37,468,674,469,470,471],"tindex":"e5a44e37-2e8f-11e6-b881-0d2cf57729f9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[675],"tindex":"e5a44e38-2e8f-11e6-b881-81a68e1ae2da","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"e5a44e39-2e8f-11e6-b881-d9ca2b134591","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[397],"tindex":"e5a4754a-2e8f-11e6-b881-03aff82fb990","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[676,677],"tindex":"e5a4754b-2e8f-11e6-b881-212225646083","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"e5a4754c-2e8f-11e6-b881-19e00a4a6c3c","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if (inputCollection instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[678],"tindex":"e5a49c5d-2e8f-11e6-b881-3d5eaa1c95a6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"e5a49c5e-2e8f-11e6-b881-e9a242720dc8","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[679,680,681,682],"tindex":"e5a49c5f-2e8f-11e6-b881-e1078b41cd95","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"e5a49c60-2e8f-11e6-b881-d9067bfed1ea","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[683],"tindex":"e5a4c371-2e8f-11e6-b881-f37528c6a007","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[684,685,686,687,688,689],"tindex":"e5a4c372-2e8f-11e6-b881-f5fb864dafa7","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[690],"tindex":"e5a4c373-2e8f-11e6-b881-bdcd9c5a2dfe","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[214,691,215,692],"tindex":"e5a4ea84-2e8f-11e6-b881-052e4ebcf859","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[693,694,695,696,697,465,698,11,12,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,466,579,736,13,14,737,15,738,36,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,671,755,756,757,672,758,759,760,761,762,763,764,765,766,673,767,768,467,37,769,770,468,674,469,470,471],"tindex":"e5a4ea85-2e8f-11e6-b881-93ae427b084d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e5a51196-2e8f-11e6-b881-6b40ba93643e","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[666,771],"tindex":"e5a51197-2e8f-11e6-b881-d92a5cda17f4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value != null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"e5a538a8-2e8f-11e6-b881-6b6f3c309277","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:109","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            decorated().putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[772,773,304,305,306,307,308,309,310,312,314,317,318,774,775,776],"tindex":"e5a538a9-2e8f-11e6-b881-a5daf47be409","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"e5a538aa-2e8f-11e6-b881-f5bb7e2ec7bb","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[777],"tindex":"e5a55fbb-2e8f-11e6-b881-892035f9c687","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[778],"tindex":"e5a55fbc-2e8f-11e6-b881-59da1bbbc58e","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"e5a55fbd-2e8f-11e6-b881-f3b357857726","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[779,780,38,472,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,39,781,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"e5a586ce-2e8f-11e6-b881-819e5cafe161","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:470","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode < 0) {\n        {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(org.apache.commons.collections4.map.AbstractReferenceMap.this , next , hashCode , key , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"e5a586cf-2e8f-11e6-b881-dbb2c6ed6fea","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:204","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor(final int fromIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(fromIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>(org.apache.commons.collections4.list.CursorableLinkedList.this , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[782],"tindex":"e5a586d0-2e8f-11e6-b881-99735b867bb0","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[783],"tindex":"e5a5ace1-2e8f-11e6-b881-dd86157dd5cf","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[784],"tindex":"e5a5ace2-2e8f-11e6-b881-8f9b7ec4c49e","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if ((coll.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[693,694,695,696,697,465,698,11,12,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,466,579,736,13,14,737,15,738,36,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,671,755,756,757,672,758,759,760,761,762,763,764,765,766,673,767,768,467,37,769,770,468,674,469,470,471],"tindex":"e5a5ace3-2e8f-11e6-b881-95b6a67d1ed0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o.getClass().isArray()) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[785,786,787,788,789,790,791,792,793,794],"tindex":"e5a5d3f4-2e8f-11e6-b881-474785b1721a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"e5a5d3f5-2e8f-11e6-b881-cf23746e96cf","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"e5a5d3f6-2e8f-11e6-b881-375779792f55","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index == index) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"e5a5d3f7-2e8f-11e6-b881-33daddbb247e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if ((k instanceof java.util.Map) == false) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"k"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[608,609,612,613,614,621,622,623,624,625,632,633,634,604,639,658],"tindex":"e5a5fb08-2e8f-11e6-b881-61a714b74ca8","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:532","type":"CtMethodImpl","sourcecode":"protected void nodeInserted(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            } else if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == node) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            } else {\n                boolean = false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}