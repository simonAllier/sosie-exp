{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":110,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":43,"org.apache.commons.collections4.SetUtilsTest.testEquals":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":112,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":69,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":57,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":20,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":101,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":98,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":107,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":31,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":81,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":30,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":59},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4fc3b6ba-2e70-11e6-ad9a-61c8afa2eb0e","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list2 instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"4fc4a11b-2e70-11e6-ad9a-7bf65d0b8460","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (transformerFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformerFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"4fc4c82c-2e70-11e6-ad9a-5762d9cadc0d","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[0],"tindex":"4fc4c82d-2e70-11e6-ad9a-ef7a696a6524","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[1,2],"tindex":"4fc58b7e-2e70-11e6-ad9a-e9c796aef7e5","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[3,4],"tindex":"4fc5b28f-2e70-11e6-ad9a-0f99857d89cc","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"4fc5d9a0-2e70-11e6-ad9a-81e3cada9f06","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index >= index) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"4fc600b1-2e70-11e6-ad9a-f9aae06a0c69","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[5,6],"tindex":"4fc7d572-2e70-11e6-ad9a-4f7b2b85c0d8","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[7,8],"tindex":"4fc7fc83-2e70-11e6-ad9a-ada7add452fc","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[9],"tindex":"4fc84aa4-2e70-11e6-ad9a-2104aaf829d9","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"4fc898c5-2e70-11e6-ad9a-c3434d43bd4f","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY)) != null"},"failures":[],"tindex":"4fc8bfd6-2e70-11e6-ad9a-51d8e54ea751","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((from.getLeft(dataElement)) != null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"from","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"4fc90df7-2e70-11e6-ad9a-17ee6cd75bf3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1281","type":"CtMethodImpl","sourcecode":"private void insertValue(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> newNode) throws java.lang.IllegalArgumentException {\n    if (newNode == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n            while (true) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(newNode.getValue(), node.getValue());\n                if (cmp == 0) {\n                    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (newNode.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n                } else if (cmp < 0) {\n                    if ((node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setLeft(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                } else {\n                    if ((node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setRight(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"newNode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[107],"tindex":"4fc9d148-2e70-11e6-ad9a-05f88d70ba3d","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"4fc9d149-2e70-11e6-ad9a-1bbaf5e2b6b7","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 == null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"4fc9f85a-2e70-11e6-ad9a-93c480ef814a","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(i)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"i"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[138,0,139],"tindex":"4fca1f6b-2e70-11e6-ad9a-4d743699049a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[140,141,142,143],"tindex":"4fca1f6c-2e70-11e6-ad9a-2500a7d25173","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[144],"tindex":"4fca467d-2e70-11e6-ad9a-bf4a1a1b026b","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[145],"tindex":"4fca6d8e-2e70-11e6-ad9a-abd18c901ea2","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"set2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[146,147],"tindex":"4fca6d8f-2e70-11e6-ad9a-8b3185ef72c5","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if (a.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":22,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}