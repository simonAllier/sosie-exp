{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":28,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":136,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":100,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":7,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":81,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":29,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":12,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":24,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":47,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":38,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":32,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":108,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":133,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":63,"org.apache.commons.collections4.list.TreeListTest.testRemove":124,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":117,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":166,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":159,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":161,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":127,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":128,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":78,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":101,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":134,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":21,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":4,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":149,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":89,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":35,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":77,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":2,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":80,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":60,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":34,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":69,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":25,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":103,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":168,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":116,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":121,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":62,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":113,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":48,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":53,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":72,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":120,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":164,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":141,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":139,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":73,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":86,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":45,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":59,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":132,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":75,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":18,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":15,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":129,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":96,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":114,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":143,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":176,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":105,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":26,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":147,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":67,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":11,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":87,"org.apache.commons.collections4.list.TreeListTest.testBug35258":125,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":122,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":93,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":74,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":88,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":17,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":151,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":56,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":118,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":85},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"7d45a579-2e70-11e6-88f2-4b3351a0fcfe","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[106,107],"tindex":"7d46b6ea-2e70-11e6-88f2-536a03aaf182","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"7d46b6eb-2e70-11e6-88f2-df96d318e3fc","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[122],"tindex":"7d46ddfc-2e70-11e6-88f2-93bee980eea8","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[123],"tindex":"7d46ddfd-2e70-11e6-88f2-f754a57aac17","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"7d47050e-2e70-11e6-88f2-2de5aee5c5d4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"7d472c1f-2e70-11e6-88f2-5fda40cf3183","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"7d472c20-2e70-11e6-88f2-691a057a978b","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"7d475331-2e70-11e6-88f2-f16ed2eab03b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"7d477a42-2e70-11e6-88f2-5dbbcae6b219","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"7d47a153-2e70-11e6-88f2-7d121772d3ca","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[138],"tindex":"7d47a154-2e70-11e6-88f2-2bfad9431cae","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[139,140,141,142,143,144,145,146,147,148,149,150,138,151,152,153,154,155,156,157],"tindex":"7d47c865-2e70-11e6-88f2-c73527fd6844","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"7d497616-2e70-11e6-88f2-594ec6deabbe","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtBinaryOperatorImpl","sourcecode":"h == (root)"},"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"7d499d27-2e70-11e6-88f2-c9a327ebda61","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h","h":"h"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":15,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}