{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":166,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":264,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":0,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":313,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":23,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":174,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":69,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":125,"org.apache.commons.collections4.CollectionUtilsTest.get":2,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":180,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":181,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":74,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":143,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":327,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":256,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":235,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":409,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":202,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":422,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":367,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":103,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":297,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":384,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":251,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":175,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":311,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":129,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":293,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":406,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":379,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":79,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":182,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":357,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":356,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":32,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":12,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":232,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":257,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":353,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":78,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":234,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":335,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":248,"org.apache.commons.collections4.CollectionUtilsTest.union":415,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":197,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":282,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":13,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":249,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":214,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":333,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":47,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":273,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":200,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":10,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":171,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":348,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":269,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":268,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":390,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":298,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":245,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":276,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":97,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":53,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":254,"org.apache.commons.collections4.CollectionUtilsTest.get1":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":128,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":177,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":374,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":331,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":423,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":102,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":258,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":165,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":4,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":389,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":106,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":176,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":363,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":237,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":231,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":159,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":38,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":275,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":418,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":343,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":222,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":318,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":340,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":299,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":322,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":57,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":110,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":398,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":399,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":400,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":339,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":15,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":292,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":210,"org.apache.commons.collections4.map.HashedMapTest.testClone":284,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":134,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":342,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":381,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":244,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":217,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":304,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":382,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":94,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":95,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":96,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":387,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":6,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":246,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":124,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":116,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":414,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":219,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":329,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":77,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":315,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":132,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":336,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":261,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":274,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":242,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":240,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":148,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":305,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":425,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":145,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":138,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":118,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":139,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":401,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":88,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":93,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":371,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":405,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":198,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":186,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":404,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":278,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":105,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":420,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":99,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":230,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":396,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":85,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":395,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":84,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":82,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":83,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":218,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":1,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":307,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":243,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":380,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":120,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":338,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":378,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":302,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":375,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":227,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":168,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":59,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":326,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":156,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":137,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":127,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":253,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":229,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":46,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":332,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":281},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:709","type":"CtBinaryOperatorImpl","sourcecode":"bucket >= (buckets.length)"},"failures":[0,1,2,3,4,5,6,7],"tindex":"7d13e778-2eba-11e6-a800-87db62b892c2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bucket":"index","buckets":"object","length":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[8,9],"tindex":"7d14f8e9-2eba-11e6-a800-5b582f9a2fa5","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[10,11,12,13],"tindex":"7d14f8ea-2eba-11e6-a800-1d26e54aa585","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[14],"tindex":"7d15470b-2eba-11e6-a800-11ddecde0fc6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"7d15470c-2eba-11e6-a800-2586c49203cf","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"7d156e1d-2eba-11e6-a800-eb885421a838","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[36,37,38,39,40,41,42,43,44],"tindex":"7d15952e-2eba-11e6-a800-bf8a79825c07","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"7d15bc3f-2eba-11e6-a800-57a7f853f05b","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[45],"tindex":"7d15bc40-2eba-11e6-a800-65b7e02f5b46","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[46,47],"tindex":"7d15e351-2eba-11e6-a800-71ff5893ff22","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"7d15e352-2eba-11e6-a800-3ba12fcdc421","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7d160a63-2eba-11e6-a800-c10d77ff160b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"7d163174-2eba-11e6-a800-c70682eb5a00","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Double) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"7d163175-2eba-11e6-a800-2bc62fdc453c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[],"tindex":"7d165886-2eba-11e6-a800-0346b4dfb8bd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (!(prior.isEmpty())) {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"prior"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"7d167f97-2eba-11e6-a800-0509e36d5078","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[],"tindex":"7d16a6a8-2eba-11e6-a800-f1aa9217a463","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"7d16a6a9-2eba-11e6-a800-575b2d6d8543","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:99","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength resolve(final int value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(value)) {\n        {\n            switch (value) {\n                case 0 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 1 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 2 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                default :\n                    throw new java.lang.IllegalArgumentException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[48],"tindex":"7d16cdba-2eba-11e6-a800-4d0dc8d75d13","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[49,50,51,52,53,54,55],"tindex":"7d16f4cb-2eba-11e6-a800-090727b9729a","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[],"tindex":"7d16f4cc-2eba-11e6-a800-597516d30a83","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"7d171bdd-2eba-11e6-a800-d1b7277c13ec","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof org.w3c.dom.NodeList) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[97,98,99,100,101,102,103,104,105,106],"tindex":"7d171bde-2eba-11e6-a800-3968e820b71f","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[107],"tindex":"7d1742ef-2eba-11e6-a800-9945ad5726d6","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[108],"tindex":"7d1742f0-2eba-11e6-a800-dbb9786db5a9","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"7d1742f1-2eba-11e6-a800-017294813bc6","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7d176a02-2eba-11e6-a800-dfaafbf573a0","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[109,110],"tindex":"7d176a03-2eba-11e6-a800-6f8f266b63cf","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl","sourcecode":"index >= (size)"},"failures":[],"tindex":"7d176a04-2eba-11e6-a800-3974371920d1","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index >= index) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[111],"tindex":"7d176a05-2eba-11e6-a800-d5e24d6fa97f","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"7d179116-2eba-11e6-a800-dda4680876ea","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index == 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"7d179117-2eba-11e6-a800-e3cfad114d40","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"7d17b828-2eba-11e6-a800-d56b551311bf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"7d17b829-2eba-11e6-a800-6d4826425cbb","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(size)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"size"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"7d17df3a-2eba-11e6-a800-372dac6cac8e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[208,209,210,211],"tindex":"7d17df3b-2eba-11e6-a800-a3ee365bfb73","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[212],"tindex":"7d17df3c-2eba-11e6-a800-ddb219042d2e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7d18064d-2eba-11e6-a800-a390d8b455b9","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[213,214,215],"tindex":"7d18064e-2eba-11e6-a800-8f4895695c6c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl","sourcecode":"proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,212,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412],"tindex":"7d182d5f-2eba-11e6-a800-0f51e79c5df4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:535","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode > hashCode) {\n        {\n            return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashCode","proposedCapacity":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[413,414],"tindex":"7d182d60-2eba-11e6-a800-b3fe47d8d637","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[415,416,417],"tindex":"7d185471-2eba-11e6-a800-4f99f099599a","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"7d185472-2eba-11e6-a800-bb1737711661","method":{"position":"org.apache.commons.collections4.map.LinkedMap:293","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<K> listIterator(final int fromIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(fromIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(super.listIterator(fromIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[418,235,419,420,421,422],"tindex":"7d185473-2eba-11e6-a800-d998617612eb","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"7d187b84-2eba-11e6-a800-a3f75ecab2d3","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7d187b85-2eba-11e6-a800-4d1ad33ea974","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:219","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value1 == value2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[423,424],"tindex":"7d187b86-2eba-11e6-a800-dd3f96fe52ec","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[425],"tindex":"7d18a297-2eba-11e6-a800-0f7592872d1f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"7d18a298-2eba-11e6-a800-d13f924d04a3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":49,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}