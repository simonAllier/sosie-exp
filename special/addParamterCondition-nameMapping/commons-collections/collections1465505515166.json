{"failureDictionary":{"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalEmptyCollectionExists":27,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":18,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":23,"org.apache.commons.collections4.SetUtilsTest.testEmptyIfNull":29,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":30,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":5,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":0,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":26,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":16,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":21,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":1,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":12,"org.apache.commons.collections4.SetUtilsTest.testEquals":31,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":2,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":19,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":8,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":14,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToString":20,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testComparator":6,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsSelfHashCode":24,"org.apache.commons.collections4.SetUtilsTest.testHashCode":32,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":3,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":9,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":7,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":17,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":4,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":10,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":13,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":22,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCanonicalFullCollectionExists":28},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl","sourcecode":"entry == (header)"},"failures":[],"tindex":"0001d70f-2e84-11e6-a249-8d73ad19360c","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == entry) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"00030f90-2e84-11e6-a249-35c4e7b6a691","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"000336a1-2e84-11e6-a249-9599c8d3a67e","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>"},"failures":[0,1,2,3,4,5],"tindex":"00035db2-2e84-11e6-a249-f3aaa6313070","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"000384c3-2e84-11e6-a249-079f071f2c83","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"0003abd4-2e84-11e6-a249-d7d37d2a9558","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection == null) || (inputCollection == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"inputCollection","b":"inputCollection"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":6,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}