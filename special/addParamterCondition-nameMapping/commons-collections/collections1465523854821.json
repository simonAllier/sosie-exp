{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":42,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":627,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":628,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":447,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":81,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":205,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":626,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":624,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":741,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":794,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":912,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":689,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":735,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":532,"org.apache.commons.collections4.CollectionUtilsTest.collect":839,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":899,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":822,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":809,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":250,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":484,"org.apache.commons.collections4.CollectionUtilsTest.get":817,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":170,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":629,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":931,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":930,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":494,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":448,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":502,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":185,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":0,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":528,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":474,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":608,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":865,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":472,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":656,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":47,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":918,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":579,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":775,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":763,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":821,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":661,"org.apache.commons.collections4.CollectionUtilsTest.select":31,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":837,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":852,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":560,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":803,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":209,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":224,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":89,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":259,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":902,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":321,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":704,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":760,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.CollectionUtilsTest.intersection":36,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":660,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":719,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":542,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":757,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":434,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":302,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":533,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":403,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":708,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":827,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":488,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":603,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":715,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":384,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":83,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":776,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":137,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":525,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":858,"org.apache.commons.collections4.map.CompositeMapTest.testPut":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":492,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":96,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":581,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":237,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":147,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":668,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":679,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":540,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":847,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":297,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":908,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":596,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":184,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":356,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":144,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":824,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":888,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":895,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":889,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":890,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":595,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":721,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":569,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":469,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":755,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":361,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":362,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":360,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":177,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":871,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":512,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":774,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":555,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":465,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":180,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":140,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":160,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":801,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":829,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":304,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":778,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":435,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":456,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":771,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":378,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":558,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":239,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":728,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":815,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":751,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":642,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":612,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":884,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":206,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":597,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":733,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":508,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":777,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":451,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":830,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":938,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":190,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":8,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":51,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":737,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":236,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":919,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":782,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":428,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":255,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":644,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":915,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":695,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":123,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":371,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":437,"org.apache.commons.collections4.CollectionUtilsTest.get1":819,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":3,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":805,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":487,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":70,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":476,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":860,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":84,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":854,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":142,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":675,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":773,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":639,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":522,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":616,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":505,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":685,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":617,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":9,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":503,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":530,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":785,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":199,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":886,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":524,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":243,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":276,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":275,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":274,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":587,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":602,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":820,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":716,"org.apache.commons.collections4.map.LRUMapTest.testReset":231,"org.apache.commons.collections4.CollectionUtilsTest.exists":796,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":313,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":903,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":701,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":750,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":28,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":578,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":460,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":519,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":710,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":192,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":324,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":598,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":169,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":245,"org.apache.commons.collections4.map.LinkedMapTest.testReset":182,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":924,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":768,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":674,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":260,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":353,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":898,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":944,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":420,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":298,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":279,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":613,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":220,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":687,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":105,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":655,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":876,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":672,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":308,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":657,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":390,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":630,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":354,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":913,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":793,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":383,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":593,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":318,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":937,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":319,"org.apache.commons.collections4.map.HashedMapTest.testClone":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":614,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":493,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":877,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":490,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":767,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":870,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":885,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":468,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":149,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":599,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":808,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":241,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":100,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":30,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":664,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":615,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":713,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":788,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":155,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":214,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":213,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":24,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":215,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":379,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":806,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":527,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":191,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":33,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":429,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":483,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":17,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":470,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":94,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":722,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":225,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":700,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":682,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":183,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":491,"org.apache.commons.collections4.ListUtilsTest.testSelect":16,"org.apache.commons.collections4.map.LinkedMapTest.testClone":186,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":726,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":746,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":745,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":422,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":444,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":588,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":600,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":848,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":316,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":317,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":882,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":836,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":424,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":904,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":507,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":396,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":246,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":233,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":699,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":463,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":511,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":736,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":933,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":939,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":438,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":498,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":204,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":335,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":749,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":501,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":500,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":499,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":920,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":312,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":850,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":905,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":159,"org.apache.commons.collections4.CollectionUtilsTest.find":818,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":509,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":247,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":947,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":765,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":113,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":756,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":34,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":53,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":621,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":306,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":349,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":408,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":101,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":193,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":798,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":148,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":174,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":762,"org.apache.commons.collections4.map.LRUMapTest.testLRU":232,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":620,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":859,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":702,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":393,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":622,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":935,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":127,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":270,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":526,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":382,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":941,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":515,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":242,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":486,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":734,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":730,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":267,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":571,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":868,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":887,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":464,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":117,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":352,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":419,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":278,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":536,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":732,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":894,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":407,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":845,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":404,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":369,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":813,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":649,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":574,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":658,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":787,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":692,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":707,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":743,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":546,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":56,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":455,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":575,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":339,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":683,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":326,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":538,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":636,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":635,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":539,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":201,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":26,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":833,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":753,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":347,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":301,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":780,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":686,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":792,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":108,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":659,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":742,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":299,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":676,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":573,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":914,"org.apache.commons.collections4.CollectionUtilsTest.transform2":790,"org.apache.commons.collections4.CollectionUtilsTest.transform1":789,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":481,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":844,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":946,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":314,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":739,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":377,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":942,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":549,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":897,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":916,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":548,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":693,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":350,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":283,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":388,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":779,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":73,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":116,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":688,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":152,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":727,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":795,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":77,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":364,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":333,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":786,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":85,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":173,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":200,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":125,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":343,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":523,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":641,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":945,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":380,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":691,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":747,"org.apache.commons.collections4.map.CompositeMapTest.testGet":18,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":521,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":891,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":69,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":609,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":893,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":892,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":135,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":670,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":825,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":120,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":414,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":13,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":211,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":563,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":800,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":442,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":64,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":638,"org.apache.commons.collections4.CollectionUtilsTest.union":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":431,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":7,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":181,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":869,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":537,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":98,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":543,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":75,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":358,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":529,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":611,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":359,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":72,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":709,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":454,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":648,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":453,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":834,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":452,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":855,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":883,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":866,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":5,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":553,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":551,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":637,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":761,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":82,"org.apache.commons.collections4.map.LRUMapTest.testClone":244,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":389,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":158,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":212,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":607,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":723,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":300,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":781,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":459,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":921,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":405,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":584,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":770,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":812,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":811,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":223,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":111,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":828,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":535,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":867,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":49,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":1,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":653,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":857,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":421,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":740,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":856,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":840,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":673,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":68,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":562,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":44,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":87,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":835,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":586,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":478,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":849,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":929,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":559,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":591,"org.apache.commons.collections4.CollectionUtilsTest.filter":797,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":22,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":669,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":928,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":21,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":346,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":221,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":783,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":592,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":292,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":305,"org.apache.commons.collections4.ListUtilsTest.testHashCode":863,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":534,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":307,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":567,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":11,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":880,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":128,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":759,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":293,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":671,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":838,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":940,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":122,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":54,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":518,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":67,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":694,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":218,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":132,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":210,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":217,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":458,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":906,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":208,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":934,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":295,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":495,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":896,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":843,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":879,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":712,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":605,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":118,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":59,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":27,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":322,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":29,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":254,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":826,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":165,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":166,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":901,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":909,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":875,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":14,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":925,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":418,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":645,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":121,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":467,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":640,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":684,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":564,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":372,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":264,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":878,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":724,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":666,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":427,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":395,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":802,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":471,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":150,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":594,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":618,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":846,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":922,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":923,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":482,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":340,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":831,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":582,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":810,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":240,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":832,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":134,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":86,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":510,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":475,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":102,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":814,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":151,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":748,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":804,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":58,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":62,"org.apache.commons.collections4.set.CompositeSetTest.testContains":12,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":862,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":124,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":764,"org.apache.commons.collections4.CollectionUtilsTest.isFull":799,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":266,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":406,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":189,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":823,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":554,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":842,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":342,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":917,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":632,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":816,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":872,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":381,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":690,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":703,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":40,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":714,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":619,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":572,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":90,"org.apache.commons.collections4.CollectionUtilsTest.reverse":841,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":881,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":504,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":497,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":766,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":50,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":907,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":711,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":623,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":667,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":253,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":91,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":731,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":139,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":729,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":138,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":351,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":652,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":772,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":556,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":544,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":610,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":344,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":861,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":294,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":853,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":461,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":585,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":769,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":163,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":936,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":289,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":864,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":577,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":720,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":545,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":156,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":873,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":557,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":647,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":398,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":417,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":932,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":479,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":874,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":146,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":725,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":143,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":154,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":910,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":110,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":234,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":654,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":744,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":489,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":943,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":273,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":784,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":717,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":426,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":272,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":911,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":400,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":198,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":436,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":926,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":112,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":927,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":296,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":46,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":261,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":754},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"b34a3256-2eae-11e6-bbf6-25bb0cc753a1","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6],"tindex":"b34b1cb7-2eae-11e6-bbf6-9f7bfae4ef7d","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n                    return super.remove(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b34b1cb8-2eae-11e6-bbf6-5512b71ba41e","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[7],"tindex":"b34b43c9-2eae-11e6-bbf6-f1fbae1a1fa9","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[8],"tindex":"b34b6ada-2eae-11e6-bbf6-03530313cb05","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[9],"tindex":"b34b6adb-2eae-11e6-bbf6-cffad42e2123","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"b34b91ec-2eae-11e6-bbf6-93729285d318","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[17],"tindex":"b34bb8fd-2eae-11e6-bbf6-db6ad414c2d9","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b34bb8fe-2eae-11e6-bbf6-654911dc0030","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"b34be00f-2eae-11e6-bbf6-ed5002468bf3","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[42],"tindex":"b34c0720-2eae-11e6-bbf6-ad9e4c738601","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"b34c0721-2eae-11e6-bbf6-8969342c4794","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b34c2e32-2eae-11e6-bbf6-ed0875a8ee8d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,8,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"b34c5543-2eae-11e6-bbf6-0964e0b2ecac","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b34c7c54-2eae-11e6-bbf6-011a3c37f87b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[470],"tindex":"b34ca365-2eae-11e6-bbf6-3f1f3122d824","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                {\n                    if (sortedMap == null) {\n                        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n                    } \n                    return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {                    };\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b34cca76-2eae-11e6-bbf6-c9e4cdd17bed","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b34cca77-2eae-11e6-bbf6-cda0a89e7775","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry == null) {\n                {\n                    return entry.getValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,42,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565],"tindex":"b34cf188-2eae-11e6-bbf6-bfc0780e4627","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[566,567,568,569],"tindex":"b34d1899-2eae-11e6-bbf6-8d74e2cbac76","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"b34d189a-2eae-11e6-bbf6-b96bb2e73992","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (node == null) {\n                        throw new java.lang.NullPointerException(\"Node must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[570],"tindex":"b34d3fab-2eae-11e6-bbf6-2722ba1ecde4","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"b34d3fac-2eae-11e6-bbf6-2737f4ddf613","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[571],"tindex":"b34d3fad-2eae-11e6-bbf6-8baf0b40cb1e","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"b34d66be-2eae-11e6-bbf6-0ba1910b81e5","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"b34d66bf-2eae-11e6-bbf6-65680ade8b07","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"b34d66c0-2eae-11e6-bbf6-355724f6b61b","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (node == null) {\n                        throw new java.lang.NullPointerException(\"Node must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[572],"tindex":"b34d8cd1-2eae-11e6-bbf6-cd1dece5a820","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[573],"tindex":"b34d8cd2-2eae-11e6-bbf6-d53256745d12","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[574],"tindex":"b34d8cd3-2eae-11e6-bbf6-31077fe6c8a4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b34db3e4-2eae-11e6-bbf6-7fccd2063adc","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b34db3e5-2eae-11e6-bbf6-57b8a2acdd8f","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620],"tindex":"b34db3e6-2eae-11e6-bbf6-e7411a800d61","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[621],"tindex":"b34ddaf7-2eae-11e6-bbf6-d3a341dde96f","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"b34ddaf8-2eae-11e6-bbf6-a12fc0572331","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"b34ddaf9-2eae-11e6-bbf6-8f61e4aa84c6","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673],"tindex":"b34ddafa-2eae-11e6-bbf6-41756291bd19","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b34e020b-2eae-11e6-bbf6-a71a753d25ae","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"b34e020c-2eae-11e6-bbf6-5f38ae166a99","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                {\n                    if (sortedMap == null) {\n                        throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n                    } \n                    return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {                    };\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"b34e020d-2eae-11e6-bbf6-d787a31076de","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtBinaryOperatorImpl","sourcecode":"(count <= 0) || (closure == null)"},"failures":[674],"tindex":"b34e291e-2eae-11e6-bbf6-cbf9982ead39","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if ((count <= 0) || (closure == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count","closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b34e291f-2eae-11e6-bbf6-db6a90f39e3e","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[675],"tindex":"b34e2920-2eae-11e6-bbf6-695e98672184","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b34e5031-2eae-11e6-bbf6-cfb5543f0dcf","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"b34e5032-2eae-11e6-bbf6-1f0b14be7dd2","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[676],"tindex":"b34e5033-2eae-11e6-bbf6-1b42fc6bd123","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b34e7744-2eae-11e6-bbf6-27ba5d5475ca","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[505,557,677,678,679,680,681,682,683,684,685,686,687,688,573,689,690,691,692,693,694,695,696,697,698,699,700,701,10,11,12,13,14,15,702,703,704,16,17,705,171,630,222,280,706,324,366,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,407,741,742,743,458,18,19,20,21,22,23,24,25,744,63,64,74,77,78,79,86,87,88,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,97,782,783,784,785,786,787,26,788,789,790,27,791,28,29,792,793,794,795,796,797,798,799,800,801,30,802,31,621,803,804,805,806,32,807,808,809,810,811,812,813,814,815,33,816,817,818,819,34,820,35,36,821,822,823,37,824,825,826,827,828,829,830,831,832,38,833,834,835,836,837,838,839,39,840,841,842,843,844,845,846,847,848,849,850,851,852,853,40,854,855,41,856,857,858,859,860,861,862],"tindex":"b34e9e55-2eae-11e6-bbf6-078903bbe8c0","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[863],"tindex":"b34e9e56-2eae-11e6-bbf6-4f44c312e41b","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b34ec567-2eae-11e6-bbf6-257c3001d617","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,768,897,898,899,900,901,902,903,904],"tindex":"b34ec568-2eae-11e6-bbf6-d31ade113d85","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[783],"tindex":"b34ec569-2eae-11e6-bbf6-df4a0ac9ad0d","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[905],"tindex":"b34eec7a-2eae-11e6-bbf6-455d55094509","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[842],"tindex":"b34eec7b-2eae-11e6-bbf6-1f61eaaf7b49","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"b34eec7c-2eae-11e6-bbf6-fbe427ec90fe","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[906,907],"tindex":"b34f138d-2eae-11e6-bbf6-f13d744accb8","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[418,419,420,421],"tindex":"b34f138e-2eae-11e6-bbf6-8ba569a1ad3d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b34f3a9f-2eae-11e6-bbf6-2501961b56b0","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[31],"tindex":"b34f3aa0-2eae-11e6-bbf6-e775986953f6","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[908,906,909,910,911,907,912],"tindex":"b34f3aa1-2eae-11e6-bbf6-91b2147af589","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"b34f61b2-2eae-11e6-bbf6-e5301dbd43a2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[913],"tindex":"b34f61b3-2eae-11e6-bbf6-c5f1818e4e43","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[914,915,916,677,917,918,919,678,920],"tindex":"b34f61b4-2eae-11e6-bbf6-b54a2f8445c8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[165,176,216,227,274,285,318,329,360,371,401,412,452,463,891,901],"tindex":"b34f61b5-2eae-11e6-bbf6-3fe89848fccc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:862","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[921,908],"tindex":"b34f88c6-2eae-11e6-bbf6-83755b24aba6","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[922,923,924,925,926,927,928,929],"tindex":"b34f88c7-2eae-11e6-bbf6-e9fd38f6bbd1","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[930,847,850],"tindex":"b34fafd8-2eae-11e6-bbf6-d9820710f713","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[931,932,933],"tindex":"b34fafd9-2eae-11e6-bbf6-a1586572833c","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[934,935,936,937],"tindex":"b34fafda-2eae-11e6-bbf6-8bf747e3f6dc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[37],"tindex":"b34fafdb-2eae-11e6-bbf6-ef03e1f87d1d","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[938,939],"tindex":"b34fd6ec-2eae-11e6-bbf6-a57176415dee","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"b34fd6ed-2eae-11e6-bbf6-4d24f86fbeaf","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[98],"tindex":"b34fd6ee-2eae-11e6-bbf6-2194626195fc","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[940,941,942],"tindex":"b34ffdff-2eae-11e6-bbf6-e73f5c49d859","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b34ffe00-2eae-11e6-bbf6-fdcc180fe6e2","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b34ffe01-2eae-11e6-bbf6-2d6171892700","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[813],"tindex":"b3502512-2eae-11e6-bbf6-e3f50db27f6a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[145,146,148,149,150,153,158,162,163,164,165,166,167,176,195,196,198,199,200,203,205,208,209,213,214,215,216,217,218,227,253,254,256,257,258,261,263,266,267,271,272,273,274,275,276,285,380,381,383,384,385,388,390,393,394,398,399,400,401,402,403,412,431,432,434,435,436,439,441,444,445,449,450,451,452,453,454,463,464,465,870,871,873,874,875,878,880,883,884,888,889,890,891,892,893,901],"tindex":"b3502513-2eae-11e6-bbf6-9599228af06c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[943],"tindex":"b3504c24-2eae-11e6-bbf6-1bf9d3bda3f2","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[944,945],"tindex":"b3504c25-2eae-11e6-bbf6-47f57e5e1333","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[946],"tindex":"b3507336-2eae-11e6-bbf6-07eae30d6e24","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"b3507337-2eae-11e6-bbf6-91ea7cbc260f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:857","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (boolean) {\n                return false;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getKey();\n            final java.lang.Object java.lang.Object = getValue();\n            return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b3507338-2eae-11e6-bbf6-d7c904799e8d","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"b3507339-2eae-11e6-bbf6-91bb11bec572","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b3509a4a-2eae-11e6-bbf6-41cdd3e17b2f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"b3509a4b-2eae-11e6-bbf6-dfa4a6467ab9","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"b3509a4c-2eae-11e6-bbf6-1b342109fd9d","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"b3509a4d-2eae-11e6-bbf6-0106378452ab","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b350c15e-2eae-11e6-bbf6-9d3173ac970f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n                    return super.remove(key);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"b350c15f-2eae-11e6-bbf6-4f170fdbe1f1","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"b350c160-2eae-11e6-bbf6-f7dd0b5e6dbb","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end == start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[418],"tindex":"b350e871-2eae-11e6-bbf6-afb919bf2e13","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[947],"tindex":"b350e872-2eae-11e6-bbf6-afe3c6c511d4","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[106,125,172,223,281,325,367,408,459,897],"tindex":"b350e873-2eae-11e6-bbf6-b75029a13f16","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b3510f84-2eae-11e6-bbf6-2fb7e7746833","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"b3510f85-2eae-11e6-bbf6-7f90e25f2545","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[10,11,12,13,14,15,18,19,20,21,22,23,24,25,29,30,32,809,35,36,39,40],"tindex":"b3513696-2eae-11e6-bbf6-5320ed357fb5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"b3513697-2eae-11e6-bbf6-d7d9f91faa1d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"b3513698-2eae-11e6-bbf6-777b1b489596","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry == null) {\n                {\n                    return entry.getValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"b3515da9-2eae-11e6-bbf6-9d2226c7317f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}