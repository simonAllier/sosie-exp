{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":448,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":283,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":339,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":215,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":371,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":340,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":77,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":513,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":471,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":472,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":195,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":329,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":328,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":408,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":412,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":414,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":378,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":413,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":330,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":525,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":247,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":117,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":553,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":508,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":24,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":545,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":424,"org.apache.commons.collections4.CollectionUtilsTest.get":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":338,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":491,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":56,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":419,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":386,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":133,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":319,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":323,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":558,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":541,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":411,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":522,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":197,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":409,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":26,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":156,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":244,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":259,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":32,"org.apache.commons.collections4.CollectionUtilsTest.select":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":303,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":159,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":359,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":110,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":486,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":320,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.CollectionUtilsTest.intersection":506,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":176,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":470,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":465,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":264,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":137,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":377,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":496,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":285,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":518,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":365,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":257,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":256,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":255,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":218,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":266,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":69,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":130,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":335,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":198,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":405,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":366,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":391,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":536,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":446,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":84,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":354,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":478,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":437,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":87,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":350,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":54,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":15,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":231,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":402,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":436,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":422,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":299,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":529,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":105,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":106,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":68,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":390,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":33,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":65,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":236,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":59,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.CollectionUtilsTest.union":505,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":549,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":466,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":246,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":509,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":80,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":34,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":280,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":201,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":166,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":520,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":546,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":566,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":181,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":274,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":302,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":379,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":418,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":454,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":8,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":368,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":432,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":200,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":252,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":128,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":127,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":228,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":126,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":482,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":456,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":559,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":27,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":300,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":370,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":276,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":404,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":81,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":82,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":83,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":477,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":548,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":554,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":115,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":425,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":148,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":352,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":376,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":250,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":20,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":297,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":153,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":445,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":261,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":369,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":12,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":325,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":253,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":240,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":557,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":163,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":438,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":429,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":533,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":155,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":469,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":226,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":364,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":455,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":332,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":475,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":295,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":374,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":275,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":528,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":241,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":567,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":220,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":392,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":493,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":360,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":74,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":542,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":237,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":66,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":452,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":121,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":120,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":119,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":420,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":517,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":457,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":221,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":476,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":311,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":500,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":177,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":348,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":243,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":92,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":251,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":551,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":100,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":99,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":114,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":447,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":407,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":7,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":347,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":400,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":544,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":515,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":213,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":459,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":0,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":268,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":85,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":492,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":401,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":431,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":494,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":562,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":441,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":79,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":55,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":514,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":232,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":288,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":298,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":367,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":495,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":433,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":355,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":171,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":262,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":239,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":233,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":235,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":316,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":73,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":209,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":116,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":481,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":349,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":341,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":507,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":205,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":125,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":439,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":138,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":277,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":304,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":86,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":434,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":321,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":382,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":383,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":358,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":543,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":443,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":333,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":501,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":502,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":13,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":161,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":565,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":248,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":260,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":178,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":389,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":270,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":417,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":4,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":301,"org.apache.commons.collections4.ListUtilsTest.testSelect":488,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":313,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":547,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":519,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":142,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":511,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":167,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":263,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":440,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":307,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":510,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":62,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":292,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":353,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":550,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":428,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":539,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":281,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":168,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":112,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":326,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":388,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":310,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":245,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":467,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":384,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":449,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":421,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":537,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":28,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":375,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":380,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":530,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":30,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":72,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":185,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":199,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":284,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":342,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":563,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.CollectionUtilsTest.find":61,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":273,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":561,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":556,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":387,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":60,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":372,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":3,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":238,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":287,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":521,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":531,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":396,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":211,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":504,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":393,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":395,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":278,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":430,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":249,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":11,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":336,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":140,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":306,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":71,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":444,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":212,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":318,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":314,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":487,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":560,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":269,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":290,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":75,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":461,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":57,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":462,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":427,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":324,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":145,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":512,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":194,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":362,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":361,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":490,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":224,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":293,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":406,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":463,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":254,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":265,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":464,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":499,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":267,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":162,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":327,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":555,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":45,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":523,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":219,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":450,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":258},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"b5bfcccb-2eab-11e6-84f4-2bec2b540ef3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b5c0b72c-2eab-11e6-84f4-b74f797bff42","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[54,55,56],"tindex":"b5c0b72d-2eab-11e6-84f4-3b7e3b787190","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index > 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"b5c0de3e-2eab-11e6-84f4-e3c1aa330cbf","method":{"position":"org.apache.commons.collections4.list.PredicatedList:137","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.PredicatedList<E>(sub , org.apache.commons.collections4.Predicate<? super E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[57],"tindex":"b5c0de3f-2eab-11e6-84f4-e971a9121fbd","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index == (-1)) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b5c10550-2eab-11e6-84f4-b172ac6611c1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[58,59],"tindex":"b5c10551-2eab-11e6-84f4-77f6965ea1c5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value instanceof java.lang.Long) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[],"tindex":"b5c12c62-2eab-11e6-84f4-bf22ec4f6cad","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[60],"tindex":"b5c15373-2eab-11e6-84f4-abcef760768f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"b5c15374-2eab-11e6-84f4-7bee6b179340","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b5c17a85-2eab-11e6-84f4-496f7af680ee","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"b5c17a86-2eab-11e6-84f4-2de57cec6aed","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[61],"tindex":"b5c1a197-2eab-11e6-84f4-a164bf0ec40b","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[62],"tindex":"b5c1c8a8-2eab-11e6-84f4-5fc99aa71618","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"b5c1c8a9-2eab-11e6-84f4-938b4fe45d38","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[79],"tindex":"b5c1efba-2eab-11e6-84f4-f58f91ee2d56","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"b5c216cb-2eab-11e6-84f4-3d1485aaf354","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"b5c23ddc-2eab-11e6-84f4-edadc58b4ed8","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return decorated().retainAll(coll);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[110,111,112],"tindex":"b5c23ddd-2eab-11e6-84f4-3fe2cf89b6a9","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[113],"tindex":"b5c264ee-2eab-11e6-84f4-1939e9097f10","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[2,6],"tindex":"b5c264ef-2eab-11e6-84f4-09b706ed1e30","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"b5c28c00-2eab-11e6-84f4-1f0dbb9381de","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"tindex":"b5c28c01-2eab-11e6-84f4-914bc3e7f7e7","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[165,166],"tindex":"b5c2b312-2eab-11e6-84f4-19d10e066cc9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.util.Iterator<?>) {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl","sourcecode":"offsetLength == 0"},"failures":[167,168],"tindex":"b5c2da23-2eab-11e6-84f4-eb8ad4c2209b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"offsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"b5c2da24-2eab-11e6-84f4-0d11ad1d571b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[],"tindex":"b5c30135-2eab-11e6-84f4-7d3cfd6315ee","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Long) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b5c30136-2eab-11e6-84f4-d753c2ea459a","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[123,131,132,135,136,146,150,152,169,170,171,172,173,174,175,176,26,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"b5c30137-2eab-11e6-84f4-5394efb641f1","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[249,250,251,252,253,185,254,186,255,256,257,187,188,189,190,191,192],"tindex":"b5c32848-2eab-11e6-84f4-a5b30f13e6a3","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[3,258,7],"tindex":"b5c32849-2eab-11e6-84f4-e1edcd21dc0f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[259],"tindex":"b5c3284a-2eab-11e6-84f4-d5ba694be9fd","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[260,261,262,263,113,264],"tindex":"b5c34f5b-2eab-11e6-84f4-f50b09cf89f5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"tindex":"b5c34f5c-2eab-11e6-84f4-afe0a669f7bc","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"b5c3766d-2eab-11e6-84f4-51cf6fd72104","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[280],"tindex":"b5c3766e-2eab-11e6-84f4-8926fdd3f1a9","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"b5c3766f-2eab-11e6-84f4-89c53e38b2ed","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    synchronized(java.lang.Object) {\n                        return decorated().retainAll(coll);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[281,280],"tindex":"b5c39d80-2eab-11e6-84f4-b5456e809aaf","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Long) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"b5c39d81-2eab-11e6-84f4-a9734f26eabd","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[282,283],"tindex":"b5c3c492-2eab-11e6-84f4-7b47109b2a61","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (null == key2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[284],"tindex":"b5c3c493-2eab-11e6-84f4-b7c8ab48acb4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"b5c3c494-2eab-11e6-84f4-396c7ccbd53d","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Integer"},"failures":[285],"tindex":"b5c3eba5-2eab-11e6-84f4-293cc1d5e016","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Integer) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[286],"tindex":"b5c3eba6-2eab-11e6-84f4-49cc2c1c2954","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtBinaryOperatorImpl","sourcecode":"(values) != null"},"failures":[],"tindex":"b5c3eba7-2eab-11e6-84f4-23dd63be0e49","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list != null) {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[287,288],"tindex":"b5c412b8-2eab-11e6-84f4-17e94781f3dd","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (defaultTransformer == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"defaultTransformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"b5c412b9-2eab-11e6-84f4-350ccab7de42","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"b5c412ba-2eab-11e6-84f4-c99bda5538ae","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(start)) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"start"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"b5c439cb-2eab-11e6-84f4-d56b008889df","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,58,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,59,363,364,365,366,367,368],"tindex":"b5c439cc-2eab-11e6-84f4-fd83afc72a86","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < (index / 2)) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"b5c460dd-2eab-11e6-84f4-c9256b0d8466","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"b5c460de-2eab-11e6-84f4-b3aa54cd0f80","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[57],"tindex":"b5c460df-2eab-11e6-84f4-1942f84430e6","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if (a == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b5c487f0-2eab-11e6-84f4-17ee057faaae","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"b5c487f1-2eab-11e6-84f4-6518d3d24efa","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k instanceof java.lang.Byte) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final K K = castKey(k);\n                    if (key == null) {\n                        return null;\n                    } \n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"b5c4af02-2eab-11e6-84f4-3fd7a36b766a","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (array.isAssignableFrom(array.getReturnType())) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"array","method":"array"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtBinaryOperatorImpl","sourcecode":"((set.size()) > 0) || ((list.size()) > 0)"},"failures":[369],"tindex":"b5c4af03-2eab-11e6-84f4-9b590e5001db","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (((collection.size()) > 0) || ((collection.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"collection","list":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[370],"tindex":"b5c4af04-2eab-11e6-84f4-e1ba4869dd58","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtFieldReadImpl","sourcecode":"scanUntilRemovable"},"failures":[],"tindex":"b5c4d615-2eab-11e6-84f4-897b11c3902c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"scanUntilRemovable":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[371,372],"tindex":"b5c4d616-2eab-11e6-84f4-2bfc727e5375","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[373],"tindex":"b5c5c077-2eab-11e6-84f4-3f393d8afba8","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtBinaryOperatorImpl","sourcecode":"(entrySet) == null"},"failures":[],"tindex":"b5c5e788-2eab-11e6-84f4-6b9c36276d24","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entrySet":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[374],"tindex":"b5c5e789-2eab-11e6-84f4-25a1a4730dd2","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415],"tindex":"b5c60e9a-2eab-11e6-84f4-9b27afdec440","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.util.Map<?, ?>) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[],"tindex":"b5c60e9b-2eab-11e6-84f4-bd48f30ff2f9","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:204","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor(final int fromIndex) {\n    if (fromIndex < fromIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>(org.apache.commons.collections4.list.CursorableLinkedList.this , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"fromIndex","end":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"b5c60e9c-2eab-11e6-84f4-adf4a169d8be","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,287,288,477,478,479,479,480,481,481,482,483,484],"tindex":"b5c635ad-2eab-11e6-84f4-e17276be0e1d","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[27],"tindex":"b5c65cbe-2eab-11e6-84f4-31ccaa54ea5c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,122,512,10,19,513,514,515,29,516,517,518,519,520,521,38,522,523,524,525,526,527,528,529,47,530,531,532,533,534,535,536,537,538,539],"tindex":"b5c6d1ef-2eab-11e6-84f4-71e1a4ba4920","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[],"tindex":"b5c6f900-2eab-11e6-84f4-bd98a2b5ab79","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k instanceof java.lang.Byte) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final K K = castKey(k);\n                    if (key == null) {\n                        return null;\n                    } \n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[540],"tindex":"b5c6f901-2eab-11e6-84f4-c570965947ca","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[541],"tindex":"b5c72012-2eab-11e6-84f4-ed6f7225a21a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[542,543,544,545,546,547,548,549,550],"tindex":"b5c76e33-2eab-11e6-84f4-55a6585bd0e2","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[551,552,553,554,555,556,557,558,559,560,561,562,146,563,174,564,425,565,566,567],"tindex":"b5c79544-2eab-11e6-84f4-5dd12005d143","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"b5c79545-2eab-11e6-84f4-09fc6165d565","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[568],"tindex":"b5c7bc56-2eab-11e6-84f4-bf09f573db51","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"b5c7bc57-2eab-11e6-84f4-9b6095229cd0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"b5c7e368-2eab-11e6-84f4-efb29a71d481","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[569],"tindex":"b5c80a79-2eab-11e6-84f4-cb641a6bd8e9","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[570],"tindex":"b5c8318a-2eab-11e6-84f4-77d93b577225","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"b5c8318b-2eab-11e6-84f4-99a2bdbfbeb6","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":81,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}