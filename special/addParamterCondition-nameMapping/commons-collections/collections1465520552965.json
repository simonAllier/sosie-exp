{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":204,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":88,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":109,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":202,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":119,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":41,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":98,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":73,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":200,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":32,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":103,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":206,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":207,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":196,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":141,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":77,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":138,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":81,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":27,"org.apache.commons.collections4.CollectionUtilsTest.transform2":1,"org.apache.commons.collections4.CollectionUtilsTest.transform1":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":148,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":126,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":213,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":89,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":82,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":108,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":129,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":116,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":155,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":106,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":25,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":84,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":72,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":193,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":195,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":159,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":150,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":142,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":95,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":12,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":51,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":158,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":34,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":52,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":91,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":219,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":212,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":174,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":205,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":209,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":178,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":197,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":46,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":208,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":70,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":99,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":134,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":22,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":58,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":57,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":210,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":154,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":124,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":137,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":8,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":121,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":156,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":87,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":194,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":115,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":153,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":40,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":54,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":110,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":113,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":118,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":186},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"033aa573-2ea7-11e6-a4d8-01c58b5ea7df","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"033b8fd4-2ea7-11e6-a4d8-9d4bf655c3c6","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[0,1],"tindex":"033b8fd5-2ea7-11e6-a4d8-553d78d24e16","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)"},"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"033bb6e6-2ea7-11e6-a4d8-5f6a95413ddd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[12],"tindex":"033bddf7-2ea7-11e6-a4d8-6d3b038b58b7","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"033c0508-2ea7-11e6-a4d8-55f976f889e4","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:210","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends J, ? extends U> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().putAll(transformMap(mapToCopy));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[13,14,15,16,17,18],"tindex":"033c0509-2ea7-11e6-a4d8-75ceba840d66","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (start2 <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"033c532a-2ea7-11e6-a4d8-8f22d5f70cee","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtBinaryOperatorImpl","sourcecode":"previous == (current.left)"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"033c7a3b-2ea7-11e6-a4d8-2b5d25c8b042","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1582","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior == prior) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(prior);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"prior","previous":"prior","left":"prior"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl","sourcecode":"proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[68,69,70,71,72,73,74,75,76,77,78],"tindex":"033ca14c-2ea7-11e6-a4d8-fdc80dd4a511","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index > index) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","proposedCapacity":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[79,80],"tindex":"033d167d-2ea7-11e6-a4d8-ad43520b2342","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (a instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[81],"tindex":"033d3d8e-2ea7-11e6-a4d8-2d16c532257f","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[],"tindex":"033d3d8f-2ea7-11e6-a4d8-31d3bf408035","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"033d64a0-2ea7-11e6-a4d8-5180f6815fa8","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[82],"tindex":"033d8bb1-2ea7-11e6-a4d8-b37f2fec79ba","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[83],"tindex":"033db2c2-2ea7-11e6-a4d8-3b9aa41c3a95","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Integer"},"failures":[],"tindex":"033db2c3-2ea7-11e6-a4d8-b3b79319ed79","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Integer) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"033db2c4-2ea7-11e6-a4d8-2f6d1221b686","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry != null) {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[84],"tindex":"033dd9d5-2ea7-11e6-a4d8-cb0f3bbab5fd","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[85],"tindex":"033dd9d6-2ea7-11e6-a4d8-e9001250208d","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if ((defaultClosure == null) || (defaultClosure == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"defaultClosure","trueClosure":"defaultClosure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"033e00e7-2ea7-11e6-a4d8-39be406548cd","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"033e00e8-2ea7-11e6-a4d8-03a494c89bf9","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[103,104,105],"tindex":"033e27f9-2ea7-11e6-a4d8-d9765092adc7","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[106,107,108,109,110,111,112,113,114,115],"tindex":"033ec43a-2ea7-11e6-a4d8-7beb05ed64b6","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label == null) {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[41,116,117,118,119,42,43,44,120,45,46,121,47,48,49,122,50,51,123,52,124,125,53,54,126,127,128,55,56,57,58,59,60,61,129,130,62,131,132,133,63,134,64,65,66,67],"tindex":"033eeb4b-2ea7-11e6-a4d8-839b437cb288","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (offsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"offsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"033f396c-2ea7-11e6-a4d8-897314fe15fc","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[135],"tindex":"033f607d-2ea7-11e6-a4d8-11b9eb8e8606","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[136,137],"tindex":"033f607e-2ea7-11e6-a4d8-d31940c6f1e7","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,2,208,82,209,3,210,211,212,213,214,215,216,217,218,4,219,220,5,6,221,222,7,8,9,10,11],"tindex":"033f607f-2ea7-11e6-a4d8-0795639a82ab","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[223],"tindex":"033f8790-2ea7-11e6-a4d8-4555fc68297a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"033faea1-2ea7-11e6-a4d8-ff44ebc792db","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"033faea2-2ea7-11e6-a4d8-05f169e11755","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[81],"tindex":"033ffcc3-2ea7-11e6-a4d8-23610f1b03c9","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[224],"tindex":"034023d4-2ea7-11e6-a4d8-d7ec6685f5ff","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if ((index % 2) == 0) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[225],"tindex":"034023d5-2ea7-11e6-a4d8-192e9c338c39","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[226],"tindex":"03404ae6-2ea7-11e6-a4d8-8dedc1925456","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtBinaryOperatorImpl","sourcecode":"(size) >= (threshold)"},"failures":[],"tindex":"03404ae7-2ea7-11e6-a4d8-413154f2ab13","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index >= index) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","threshold":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"03409908-2ea7-11e6-a4d8-53306cff4e31","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[],"tindex":"0340c019-2ea7-11e6-a4d8-cffde2720533","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[227],"tindex":"0340c01a-2ea7-11e6-a4d8-35e0fec1182b","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"0340e72b-2ea7-11e6-a4d8-93478ba5448e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":41,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}