{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":548,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":62,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":657,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":89,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":585,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":393,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":788,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":516,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":225,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":556,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":432,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":603,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":233,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":767,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":143,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":718,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":40,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":690,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":613,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":743,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":472,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":77,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":500,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":772,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":599,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":283,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":621,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":281,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":590,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":410,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":721,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":668,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":584,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":173,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":710,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":130,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":670,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":201,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":518,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":732,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":401,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":753,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":411,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":702,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":236,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":750,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":311,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":680,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":519,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":566,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":557,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":384,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":607,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":116,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":380,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":686,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":679,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":145,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":234,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":549,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":696,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":61,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":316,"org.apache.commons.collections4.map.CompositeMapTest.testPut":438,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":611,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":731,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":269,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":771,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":72,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":728,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":564,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":57,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":231,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":35,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":88,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":334,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":335,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":503,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":536,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":370,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":90,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":268,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":414,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":422,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":122,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":579,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":666,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":144,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":444,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":452,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":762,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":28,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":70,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":195,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":504,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":332,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":351,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":247,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":734,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":627,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":565,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":373,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":250,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":683,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":481,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":113,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":522,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":48,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":376,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":477,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":235,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":396,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":84,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":662,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":606,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":595,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":714,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":719,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":190,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":388,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":3,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":434,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":165,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":391,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":103,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":545,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":312,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":624,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":655,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":265,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":554,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":735,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":547,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":776,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":138,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":295,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":382,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":413,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":17,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":517,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":695,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":303,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":501,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":128,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":359,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":202,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":542,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":154,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":759,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":665,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":502,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":179,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":787,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":184,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":166,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":146,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":460,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":360,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":475,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":1,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":328,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":727,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":784,"org.apache.commons.collections4.ListUtilsTest.testPartition":781,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":636,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":780,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":106,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":78,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":723,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":229,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":667,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":467,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":687,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":752,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":191,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":21,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":338,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":692,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":697,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":357,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":766,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":7,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":100,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":748,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":255,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":539,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":609,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":527,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":16,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":524,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":757,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":729,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":647,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":774,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":713,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":758,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":107,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":310,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":551,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":386,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":602,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":433,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":177,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":610,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":431,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":708,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":10,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":768,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":30,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":262,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":415,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":540,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":712,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":626,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":635,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":642,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":630,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":185,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":620,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":619,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":618,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":496,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":497,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":58,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":407,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":135,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":698,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":425,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":476,"org.apache.commons.collections4.list.GrowthListTest.testSimpleSerialization":256,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":628,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":741,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":194,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":765,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":419,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":756,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":426,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":355,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":207,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":660,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":532,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":402,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":242,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":254,"org.apache.commons.collections4.map.LRUMapTest.testLRU":769,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":418,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":764,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":703,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":479,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":331,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":31,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":162,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":136,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":525,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":12,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":347,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":423,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":292,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":226,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":550,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":751,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":24,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":775,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":120,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":605,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":371,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":259,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":164,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":4,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":346,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":783,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":22,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":560,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":471,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":13,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":155,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":490,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":96,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":494,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":747,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":570,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":463,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":634,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":329,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":563,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":253,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":153,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":650,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":399,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":736,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":724,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":406,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":127,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":430,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":94,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":288,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":149,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":705,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":131,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":424,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":600,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":260,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":280,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":148,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":368,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":298,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":648,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":763,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":243,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":198,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":257,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":574,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":158,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":572,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":711,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":267,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":508,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":421,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":684,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":377,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":633,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":484,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":760,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":663,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":526,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":161,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":474,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":546,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":314,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":133,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":2,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":286,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":369,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":299,"org.apache.commons.collections4.map.CompositeMapTest.testGet":437,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":544,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":274,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":326,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":375,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":483,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":730,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":349,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":745,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":587,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":139,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":315,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":493,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":674,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":654,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":361,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":23,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":327,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":381,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":726,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":18,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":761,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":681,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":571,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":420,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":74,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":561,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":104,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":567,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":638,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":639,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":676,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":553,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":700,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":378,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":102,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":141,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":330,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":204,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":91,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":689,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":230,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":189,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":716,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":183,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":509,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":512,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":575,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":53,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":408,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":464,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":664,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":213,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":646,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":365,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":645,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":699,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":644,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":321,"org.apache.commons.collections4.ListUtilsTest.testSubtract":282,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":152,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":301,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":333,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":656,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":291,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":110,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":176,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":193,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":450,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":559,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":383,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":325,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":448,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":449,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":117,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":313,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":129,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":473,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":389,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":706,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":488,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":694,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":778,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":785,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":81,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":653,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":682,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":462,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":586,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":400,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":239,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":717,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":125,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":251,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":412,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":597,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":583,"org.apache.commons.collections4.CollectionUtilsTest.filter":56,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":92,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":441,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":440,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":453,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":529,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":348,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":685,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":156,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":76,"org.apache.commons.collections4.ListUtilsTest.testHashCode":67,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":121,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":558,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":284,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":521,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":515,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":691,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":308,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":182,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":523,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":118,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":779,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":541,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":163,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":614,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":50,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":507,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":85,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":491,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":505,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":36,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":442,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":200,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":506,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":319,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":782,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":733,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":289,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":588,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":514,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":688,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":693,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":404,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":186,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":304,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":499,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":336,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":273,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":651,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":591,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":266,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":115,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":465,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":601,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":46,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":340,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":270,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":350,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":749,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":773,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":715,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":390,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":722,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":629,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":339,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":594,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":71,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":126,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":405,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":669,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":367,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":737,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":65,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":353,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":742,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":578,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":363,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":652,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":318,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":356,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":271,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":395,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":140,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":458,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":466,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":224,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":322,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":623,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":616,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":345,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":744,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":596,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":428,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":455,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":457,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":456,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":0,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":520,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":677,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":216,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":238,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":530,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":142,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":398,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":392,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":786,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":754,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":625,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":568,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":641,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":63,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":535,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":469,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":244,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":379,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":417,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":258,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":569,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":671,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":60,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":83,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":555,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":86,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":151,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":436,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":341,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":592,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":354,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":513,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":93,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":95,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":701,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":54,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":222,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":451,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":770,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":608,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":99,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":649,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":277,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":777,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":97,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":486,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":397,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":480,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":192,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":246,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":709,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":111,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":75,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":324,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":358,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":228,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":248},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"a395ee37-3e70-11e6-a277-bd70ea370050","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0],"tindex":"a3963c58-3e70-11e6-a277-7d8f8387097b","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1,2],"tindex":"a3966369-3e70-11e6-a277-8320dac6e6f4","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                        changed |= item.retainAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[3],"tindex":"a396636a-3e70-11e6-a277-05fa3a3f6e10","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[4],"tindex":"a3968a7b-3e70-11e6-a277-9740c9c01f08","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"a3968a7c-3e70-11e6-a277-8be7e87ab289","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"a3968a7d-3e70-11e6-a277-91aac2afe0f8","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[54],"tindex":"a3968a7e-3e70-11e6-a277-896e7b1bd202","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[55,56,57,58],"tindex":"a396b18f-3e70-11e6-a277-b382254cf1b4","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[59,60,61,62,63,64],"tindex":"a396b190-3e70-11e6-a277-df52c6a34d14","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"a396b191-3e70-11e6-a277-1fbcc425b24b","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[65],"tindex":"a396d8a2-3e70-11e6-a277-079aef218b21","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return list == null ? java.util.Collections.<T>emptyList() : list;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a396d8a3-3e70-11e6-a277-3dd7400a7d41","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[66],"tindex":"a396d8a4-3e70-11e6-a277-29eda174119d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[67],"tindex":"a396ffb5-3e70-11e6-a277-b171ad655f69","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,63,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"a396ffb6-3e70-11e6-a277-d5a7accb4d88","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a396ffb7-3e70-11e6-a277-0d515b58da67","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"a396ffb8-3e70-11e6-a277-89d6b8e61d38","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[182],"tindex":"a39726c9-3e70-11e6-a277-e72f7d897336","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"a39726ca-3e70-11e6-a277-b9accdc570e0","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[183,184,185,186,187,188,189,190],"tindex":"a39726cb-3e70-11e6-a277-39a9bb71c12a","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[191,192,193,194,159,160,161,162,163,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"a39726cc-3e70-11e6-a277-ebb5e575850a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[222],"tindex":"a3974ddd-3e70-11e6-a277-f50accb6ffcc","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[223,224],"tindex":"a3974dde-3e70-11e6-a277-e9f2ee8275f2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"a3974ddf-3e70-11e6-a277-57cbec4629ff","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"a3974de0-3e70-11e6-a277-b725bf5c167d","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[281],"tindex":"a3974de1-3e70-11e6-a277-bdd3727bdd06","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,304,305,306,307,308,309,310,311,312,313,314,315,316,59,317,318,319,320,321,322,258,259,323,324,325,326,327,328,329,330,331,60,332,333,334,335,336,337,338,339,340,341,342,343,344,62,345,346,347,348,349,350,270,271,351,352,353,354,355,356,357,358,359,360,361,362,124,125,126,127,128,129,130,131,132,133,134,63,135,136,137,138,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,189,383,384,385,386,387,388,389,390,391,190,64,392,393,394,395],"tindex":"a39774f2-3e70-11e6-a277-5326d9c33ce2","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[391,190],"tindex":"a39774f3-3e70-11e6-a277-83efac9dc1d3","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"a39774f4-3e70-11e6-a277-51123d6f736b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a3979c05-3e70-11e6-a277-670c4cd9b273","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a3979c06-3e70-11e6-a277-af37a64ac47f","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"a3979c07-3e70-11e6-a277-215f5c53dcc5","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[396,397,398],"tindex":"a3979c08-3e70-11e6-a277-ab01e32fbe41","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"a3979c09-3e70-11e6-a277-27c16a2ca730","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[399,400,401,402,403],"tindex":"a3979c0a-3e70-11e6-a277-6146578a09fb","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[404],"tindex":"a397c31b-3e70-11e6-a277-696694c14039","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[405,406,407,408,409,410,411,412,413,414,415,108,416,417,418,419,420,302,421,303,422,423,424,109,425,110,111,112,113,114,115,116,117,118,119,120,121,122,123,426,427,428,429,430,431,432],"tindex":"a397c31c-3e70-11e6-a277-9d1e7bb9c6ad","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[433],"tindex":"a397c31d-3e70-11e6-a277-79a66e6854de","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"a397c31e-3e70-11e6-a277-216bc9296119","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[434],"tindex":"a397c31f-3e70-11e6-a277-a9588dc87a73","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[435,436],"tindex":"a397ea30-3e70-11e6-a277-c3e08ad121a3","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,2,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"tindex":"a397ea31-3e70-11e6-a277-e55f70db45ee","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[493],"tindex":"a397ea32-3e70-11e6-a277-c536cdb4a1f7","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"a397ea33-3e70-11e6-a277-e3db002334e8","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a3981144-3e70-11e6-a277-2b901421a4ee","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[494,495],"tindex":"a3981145-3e70-11e6-a277-3d6dad3793cd","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"a3981146-3e70-11e6-a277-0b1ead0170c6","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[496,497,498,499,500,501,502],"tindex":"a3981147-3e70-11e6-a277-a5c281f67a3a","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[503],"tindex":"a3981148-3e70-11e6-a277-8b02dae9d5fb","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[504,505],"tindex":"a3983859-3e70-11e6-a277-910bb743cd2e","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a398385a-3e70-11e6-a277-99f1c8166c5e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"a398385b-3e70-11e6-a277-2f9681e5b4f8","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return list == null ? java.util.Collections.<T>emptyList() : list;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a398385c-3e70-11e6-a277-315ac6f09062","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a398385d-3e70-11e6-a277-6524098779dd","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a398385e-3e70-11e6-a277-312b57f91aee","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.util.List<java.util.Collection<E>>.remove(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"a398385f-3e70-11e6-a277-a1a4314b9075","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[506],"tindex":"a3985f70-3e70-11e6-a277-f1d7efe11969","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536],"tindex":"a3985f71-3e70-11e6-a277-c55fcd215310","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a3985f72-3e70-11e6-a277-038b8453a84b","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632],"tindex":"a3985f73-3e70-11e6-a277-5527b9536711","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"a3985f74-3e70-11e6-a277-a92789c3adaf","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681],"tindex":"a3985f75-3e70-11e6-a277-df903986c121","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714],"tindex":"a3988686-3e70-11e6-a277-758a5f735883","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a3988687-3e70-11e6-a277-d7577694f459","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[715,716],"tindex":"a3988688-3e70-11e6-a277-ddd5e60d49d9","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[717],"tindex":"a3988689-3e70-11e6-a277-610d42f5e51a","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"a398ad9a-3e70-11e6-a277-99e501aff032","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                        changed |= item.retainAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[57,58,718],"tindex":"a398ad9b-3e70-11e6-a277-efd1acc4ddf8","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a398ad9c-3e70-11e6-a277-9baa464c4e3a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.util.List<java.util.Collection<E>>.remove(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[524],"tindex":"a398ad9d-3e70-11e6-a277-59d6991cd85f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[719,720],"tindex":"a398ad9e-3e70-11e6-a277-e1229b5c08cc","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a398ad9f-3e70-11e6-a277-e9a6568d51fc","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[721],"tindex":"a398ada0-3e70-11e6-a277-55715f1a01e8","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"a398d4b1-3e70-11e6-a277-65f6d2f7e6b5","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[507,508,509,722,510,511,512,514,723,724,725,522,726,727],"tindex":"a398d4b2-3e70-11e6-a277-79894d260348","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[728,729,730,731,732,733,734,735,736,737,738,739,740],"tindex":"a398d4b3-3e70-11e6-a277-2bead98c58fe","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"a398d4b4-3e70-11e6-a277-75e44641025f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[741,742],"tindex":"a398d4b5-3e70-11e6-a277-65a00826995d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[743,744,745,746,747,748,334,344,749,750,751,752,753,754,365,375],"tindex":"a398fbc6-3e70-11e6-a277-3d57c297fcad","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[755,756],"tindex":"a398fbc7-3e70-11e6-a277-57a56bc37219","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[757,758,214,215],"tindex":"a398fbc8-3e70-11e6-a277-15c614a3bb6b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[538,539,540,537,541,542,543,544,545,546,547,548,549,552,550,551,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,593,594,595,592,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632],"tindex":"a398fbc9-3e70-11e6-a277-d7ee3aba6a5d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[759,760],"tindex":"a39922da-3e70-11e6-a277-9b06caee03c5","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[761],"tindex":"a39922db-3e70-11e6-a277-ddbc7f07acf2","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[762,763,682,708,334,335,336,337,338,339,340,341,342,343,344,62,345,346,347,348,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,764,765],"tindex":"a39922dc-3e70-11e6-a277-fdd583351755","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[766],"tindex":"a39922dd-3e70-11e6-a277-9f6c491a7c84","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a39922de-3e70-11e6-a277-7349c8fd31d8","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[767,87],"tindex":"a39922df-3e70-11e6-a277-450692e17c2e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[768],"tindex":"a39922e0-3e70-11e6-a277-a3def0965fa1","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == end) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"a39949f1-3e70-11e6-a277-37a9c82bb533","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[769,770,771,772,773,774,775,776,777],"tindex":"a39949f2-3e70-11e6-a277-23aabb89c601","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[745,778,336,751,779,367],"tindex":"a39949f3-3e70-11e6-a277-35431574f54b","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"a39949f4-3e70-11e6-a277-4d26e0854dba","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[780],"tindex":"a3997105-3e70-11e6-a277-8d2d3fb47498","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[781],"tindex":"a3997106-3e70-11e6-a277-19c7a70ed7f6","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a3997107-3e70-11e6-a277-59180376fe65","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[782,783,784,785,777],"tindex":"a3997108-3e70-11e6-a277-c73ad78d9bdf","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[786,787],"tindex":"a3997109-3e70-11e6-a277-8305357b8e48","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[788],"tindex":"a399710a-3e70-11e6-a277-6f6951a3675b","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253359734/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}