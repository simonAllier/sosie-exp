{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":203,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":251,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":179,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":158,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":364,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":361,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":64,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":123,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":348,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":241,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":163,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":243,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":43,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":282,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":185,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":16,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":321,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":102,"org.apache.commons.collections4.ListUtilsTest.testLazyList":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":219,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":337,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":351,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":217,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":287,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":340,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":232,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":316,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":166,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":273,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":239,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":67,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":44,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":245,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":105,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":28,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":368,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":263,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":346,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":355,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":195,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":220,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":197,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":119,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":88,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":178,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":284,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":42,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":365,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":258,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":155,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":353,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":323,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":156,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":391,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":255,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":159,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":207,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":154,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":264,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":58,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":116,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":117,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":115,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":135,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":396,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":376,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":133,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":222,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":289,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":55,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":372,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":171,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":113,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":112,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":114,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":148,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":331,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":318,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":301,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":354,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":129,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":375,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":349,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":17,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":269,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":183,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":218,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":75,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":125,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":341,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":25,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":379,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":339,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":342,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":388,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":0,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":130,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":315,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":247,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":356,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":309,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":384,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":181,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":392,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":121,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":167,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":344,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":101,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":227,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":51,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":1,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":268,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":335,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":382,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":281,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":108,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":225,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":162,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":21,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":295,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":144,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":210,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":216,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":360,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":306,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":7,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":363,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":212,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":297,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":286,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":140,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":226,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":19,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":184,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":240,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":277,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":279,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":330,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":389,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":236,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":238,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":228,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":350,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":141,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":81,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":390,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":260,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":338,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":189,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":292,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":325,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":378,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":332,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":48,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":266,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":95,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":387,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":120,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":205,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":347,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":73,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":367,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":262,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":29,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":35,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":200,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":371,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":345,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":53,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":327,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":65,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":136,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":175,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":57,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":352,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":4,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":145,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":186,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":10,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":334,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":45,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":24,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":74,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":280,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":283,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":106,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":314,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":84,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":89,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":68,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":230,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":333,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":322,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":100,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":254,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":99,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":39,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":271,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":374,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":50,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":336,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":47,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":381,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":305,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":275,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":276,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":274,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":5,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":191,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":224,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":267,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":104,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":394,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":8,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":86,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":380,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":193,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":320,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":259,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":285,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":71,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":138,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":257,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":317,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":187,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":253,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":324,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":79,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":265,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":302,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":362,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":52,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":176,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":31,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":93,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":194,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":298,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":304,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":311},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"16aa7ab3-2ead-11e6-9d53-1b0da5b6ebb4","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"16ab3e04-2ead-11e6-9d53-fd058d7005e5","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"16abda45-2ead-11e6-9d53-d10c2693418d","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"16ac0156-2ead-11e6-9d53-33a6853ed988","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtFieldReadImpl","sourcecode":"nextObjectSet"},"failures":[],"tindex":"16ad87f7-2ead-11e6-9d53-99b45fba887a","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (defaultValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"16ad87f8-2ead-11e6-9d53-a9166ead3d6b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[309],"tindex":"16adaf09-2ead-11e6-9d53-570f23219f80","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if ((index - index) > (index - index)) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"index","end2":"index","end1":"index","start2":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[],"tindex":"16adaf0a-2ead-11e6-9d53-edbab429847f","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[310],"tindex":"16add61b-2ead-11e6-9d53-c752a6cdc380","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == 0) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtBinaryOperatorImpl","sourcecode":"(cloned.delegateMap) != null"},"failures":[],"tindex":"16add61c-2ead-11e6-9d53-873823bebf7d","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cloned":"map","delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"16adfd2d-2ead-11e6-9d53-3b4b8a5166f6","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[],"tindex":"16ae243e-2ead-11e6-9d53-21c68ae3d645","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (defaultValue != null) {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"16ae243f-2ead-11e6-9d53-875626c26be6","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(hashIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[345],"tindex":"16af35b0-2ead-11e6-9d53-07c42c9f0d25","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[],"tindex":"16af5cc1-2ead-11e6-9d53-d386ea10a2d4","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"16af5cc2-2ead-11e6-9d53-554f522d2811","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[54,346,56,347,59,348,349,350,62,351,352],"tindex":"16af83d3-2ead-11e6-9d53-5f52dd6ad68b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[353],"tindex":"16af83d4-2ead-11e6-9d53-818bc8bf2f9f","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtBinaryOperatorImpl","sourcecode":"index >= (maxElements)"},"failures":[21,22,354,355,36],"tindex":"16afaae5-2ead-11e6-9d53-1fdf56d3dde0","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[356],"tindex":"16afd1f6-2ead-11e6-9d53-a73af75a157a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[357],"tindex":"16aff907-2ead-11e6-9d53-f11ac1f460de","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > index) {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"tindex":"16b02018-2ead-11e6-9d53-4fb2a5974fe1","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:331","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeRemoved(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":22,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}