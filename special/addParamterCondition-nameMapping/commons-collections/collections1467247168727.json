{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":40,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":486,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":159,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":277,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":567,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":214,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":26,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":433,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":505,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":462,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":287,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":311,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":594,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":95,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":472,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":267,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":325,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":255,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":358,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":6,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":44,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":273,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":318,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":368,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":248,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":605,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":376,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":190,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":50,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":106,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":218,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":564,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":150,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":136,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":36,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":116,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":415,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":571,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":466,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":436,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":512,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalEmptyCollectionExists":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":609,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":585,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":96,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":464,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":327,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":88,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":128,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":477,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":550,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":16,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":132,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":321,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":526,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":276,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":169,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":105,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":511,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":501,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalFullCollectionExists":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":312,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":362,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":421,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":611,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":490,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":555,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":279,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":297,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":589,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":3,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":183,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":52,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":179,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":185,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":614,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":196,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":240,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":399,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":538,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":60,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":544,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":304,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":342,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":543,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":242,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":427,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":82,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":231,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":4,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":540,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":212,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":334,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":400,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":100,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":559,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":326,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":612,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":316,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":424,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":235,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":322,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":392,"org.apache.commons.collections4.list.TreeListTest.testRemove":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":256,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":337,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":573,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":134,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":396,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":515,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":308,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":56,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":253,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":252,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":209,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":249,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":250,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":251,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":508,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":425,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":331,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":61,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":107,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":93,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":527,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":54,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":530,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":21,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":227,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":590,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":284,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":66,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":182,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":259,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":444,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":562,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":281,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":499,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":177,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":498,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":158,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":568,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":2,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":600,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":149,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":157,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":482,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":222,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":537,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":556,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":554,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":241,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":529,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":341,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":422,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":454,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":298,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":570,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":580,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":272,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":435,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":205,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":338,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":148,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":98,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":180,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":560,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":303,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":452,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":497,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":420,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":229,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":271,"org.apache.commons.collections4.ListUtilsTest.testHashCode":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":313,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":479,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":548,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":233,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":206,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":404,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":403,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":280,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":48,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":488,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":451,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":432,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":221,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":290,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":503,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":126,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":445,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":500,"org.apache.commons.collections4.ListUtilsTest.testPartition":414,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":572,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":104,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":460,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":25,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":302,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":89,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":258,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":369,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":521,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":579,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":146,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":574,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":520,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":79,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":423,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":471,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":141,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":523,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":516,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":569,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMakeMap":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":343,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":364,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":616,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":193,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":601,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":450,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":502,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":208,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":447,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":213,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":23,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":94,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":108,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":561,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":536,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":346,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":118,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":613,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":494,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":275,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":391,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":41,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":187,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":353,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":127,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":418,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":467,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":388,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":306,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":228,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":266,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":557,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":37,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":384,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":354,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":349,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":442,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":147,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":19,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":478,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":484,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":577,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":333,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":124,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":365,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":434,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":115,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":189,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":211,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":592,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":131,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":102,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":244,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":294,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":257,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":224,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":525,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":381,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":426,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":110,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":457,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":575,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":593,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":513,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":359,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":378,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":263,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":599,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":371,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":603,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":463,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":167,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":518,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":385,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":156,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":470,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":355,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":238,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":604,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":493,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":372,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":97,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":43,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":453,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":401,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":522,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":335,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":301,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":485,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":495,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":176,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":261,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":504,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":120,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":171,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":545,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":583,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":458,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":582,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":53,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":17,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":507,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":576,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":324,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":9,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":181,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":34,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":409,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":398,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":586,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":455,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":219,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":531,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":191,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":440,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":357,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSimpleSerialization":29,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":390,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":168,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":347,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":510,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":282,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":429,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":535,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":596,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":11,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":549,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":186,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":152,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":448,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":519,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":184,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":363,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":496,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":305,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":46,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":546,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":558,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":480,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":292,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":138,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":283,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":370,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":236,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":406,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":99,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":389,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":125,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":109,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":289,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":57,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":539,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":1,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":524,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":397},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"1a6966d3-3e5b-11e6-80ae-73e09f8a41ea","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[10],"tindex":"1a69b4f4-3e5b-11e6-80ae-cdc8764f855b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[11],"tindex":"1a69b4f5-3e5b-11e6-80ae-396878dfc467","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[12],"tindex":"1a69dc06-3e5b-11e6-80ae-09a3ab328b58","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"1a69dc07-3e5b-11e6-80ae-ef2498818314","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[32],"tindex":"1a69dc08-3e5b-11e6-80ae-a924128dbcca","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            if (key2 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[33],"tindex":"1a6a0319-3e5b-11e6-80ae-cf2946221b96","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"1a6a031a-3e5b-11e6-80ae-718609f261b0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[60,61],"tindex":"1a6a031b-3e5b-11e6-80ae-b3da5fbc076f","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"1a6a2a2c-3e5b-11e6-80ae-f1050bc8d591","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    (int)++;\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                    int -= mut.int;\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"1a6a2a2d-3e5b-11e6-80ae-954d0a1e9465","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1a6a2a2e-3e5b-11e6-80ae-9f320f6d2692","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[82,83,84,85,86],"tindex":"1a6a513f-3e5b-11e6-80ae-0bdd90fe8755","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"1a6a5140-3e5b-11e6-80ae-6b518bc2fc5c","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"1a6a5141-3e5b-11e6-80ae-0f089ff49dc1","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"1a6a5142-3e5b-11e6-80ae-a75224230865","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        {\n            if (comparator == null) {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.add(comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:509","type":"CtBinaryOperatorImpl","sourcecode":"(list != null) && (predicate != null)"},"failures":[194],"tindex":"1a6a7853-3e5b-11e6-80ae-d7c3e4c7b786","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a6a7854-3e5b-11e6-80ae-39ec84fb468f","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[195,196],"tindex":"1a6a7855-3e5b-11e6-80ae-418e32438850","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[197,198,199,200],"tindex":"1a6a7856-3e5b-11e6-80ae-bf955bbf59c0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                        final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                        return true;\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[64,201,202,203,204,205],"tindex":"1a6a7857-3e5b-11e6-80ae-df018cfce258","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"1a6a9f68-3e5b-11e6-80ae-ffe28d5c1277","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[206,207,208,209,210,211,212],"tindex":"1a6a9f69-3e5b-11e6-80ae-5db1be583644","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"1a6a9f6a-3e5b-11e6-80ae-016cf06f71f8","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[213],"tindex":"1a6a9f6b-3e5b-11e6-80ae-4bf8352d0b36","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1a6a9f6c-3e5b-11e6-80ae-5195888471c0","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"1a6a9f6d-3e5b-11e6-80ae-174027a0175f","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"1a6ac67e-3e5b-11e6-80ae-c13fbd7961ab","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            if (key2 != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[],"tindex":"1a6ac67f-3e5b-11e6-80ae-5bf521b2a3fc","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        {\n            if (comparator == null) {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.add(comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[214],"tindex":"1a6ac680-3e5b-11e6-80ae-5509f0bc49f3","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1a6aed91-3e5b-11e6-80ae-e9acc9841d53","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[215],"tindex":"1a6aed92-3e5b-11e6-80ae-ef9913d2c9c2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"1a6aed93-3e5b-11e6-80ae-ab3ef9ec3c82","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"1a6aed94-3e5b-11e6-80ae-1be94c3da457","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[216,217,218,219,220,215,221,222,223,224,32,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"tindex":"1a6aed95-3e5b-11e6-80ae-2dca828873eb","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"1a6b14a6-3e5b-11e6-80ae-79c69acb0c2c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    (int)++;\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                    int -= mut.int;\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[267,268,269],"tindex":"1a6b14a7-3e5b-11e6-80ae-b1eb2533101f","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"1a6b14a8-3e5b-11e6-80ae-affb612490f2","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:43","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"1a6b14a9-3e5b-11e6-80ae-9d8effd2f02c","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288],"tindex":"1a6b3bba-3e5b-11e6-80ae-bb85545e5a60","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[289,290],"tindex":"1a6b3bbb-3e5b-11e6-80ae-23b30a46ed30","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"1a6b3bbc-3e5b-11e6-80ae-c57a54fc1473","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"1a6b3bbd-3e5b-11e6-80ae-d1ae6f71b464","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:288","type":"CtMethodImpl","sourcecode":"protected void unregisterCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cur == null) {\n                    it.remove();\n                } else if (cur == cursor) {\n                    ref.clear();\n                    it.remove();\n                    break;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,202,386],"tindex":"1a6b62ce-3e5b-11e6-80ae-2118292e3011","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1a6b62cf-3e5b-11e6-80ae-897dc035f2b8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"1a6b62d0-3e5b-11e6-80ae-f9c0902a02f0","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    try {\n                        if (input == null) {\n                            throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                        } \n                        final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                        return con.newInstance(java.lang.Object[]);\n                    } catch (final java.lang.NoSuchMethodException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n                    } catch (final java.lang.InstantiationException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n                    } catch (final java.lang.IllegalAccessException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n                    } catch (final java.lang.reflect.InvocationTargetException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"1a6b62d1-3e5b-11e6-80ae-cb0eaba51d16","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[387,388,389,390,391,392,393,394,395,396],"tindex":"1a6b62d2-3e5b-11e6-80ae-f1f9c5578129","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a6b89e3-3e5b-11e6-80ae-6bc24563cfca","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[397],"tindex":"1a6b89e4-3e5b-11e6-80ae-29b8259a2477","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[398,399],"tindex":"1a6b89e5-3e5b-11e6-80ae-b92878ee0e81","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1a6b89e6-3e5b-11e6-80ae-ed90ff6c1d99","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[400,401,402],"tindex":"1a6b89e7-3e5b-11e6-80ae-4ba7c2b4ab7c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[33],"tindex":"1a6bb0f8-3e5b-11e6-80ae-65ee5fe49115","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1a6bb0f9-3e5b-11e6-80ae-4d9eb2115bc7","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[403,404,405],"tindex":"1a6bb0fa-3e5b-11e6-80ae-b589c85367bc","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1a6bb0fb-3e5b-11e6-80ae-b7d953bef9fc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                        final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                        return true;\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"1a6bb0fc-3e5b-11e6-80ae-957ddbeb0e9f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1a6bd80d-3e5b-11e6-80ae-df2db5fcd0c1","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"1a6bd80e-3e5b-11e6-80ae-31129ab56630","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    try {\n                        if (input == null) {\n                            throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                        } \n                        final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                        return con.newInstance(java.lang.Object[]);\n                    } catch (final java.lang.NoSuchMethodException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n                    } catch (final java.lang.InstantiationException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n                    } catch (final java.lang.IllegalAccessException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n                    } catch (final java.lang.reflect.InvocationTargetException ex) {\n                        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[406,407,408,409,410,411,412],"tindex":"1a6bd80f-3e5b-11e6-80ae-e968a8eeef26","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[413],"tindex":"1a6bd810-3e5b-11e6-80ae-55ea80188e47","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[414],"tindex":"1a6bd811-3e5b-11e6-80ae-91c96021abcd","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[415],"tindex":"1a6bff22-3e5b-11e6-80ae-670e1ea4145d","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[416],"tindex":"1a6bff23-3e5b-11e6-80ae-d96fe7fbde58","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[417,418],"tindex":"1a6bff24-3e5b-11e6-80ae-e3388e958493","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a6bff25-3e5b-11e6-80ae-3b445e1ba405","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1a6bff26-3e5b-11e6-80ae-a3b0d90473e5","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[419],"tindex":"1a6c2637-3e5b-11e6-80ae-35e98fc71479","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"1a6c2638-3e5b-11e6-80ae-d535c3323b7b","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((list != null) && (predicate != null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[420,421],"tindex":"1a6c2639-3e5b-11e6-80ae-636452b1bdde","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[422],"tindex":"1a6c263a-3e5b-11e6-80ae-b9150cc53439","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,107,470,471,109,403,404,472,473,474,475,476,477,478,479,480,481,482,483,484,405,485,486,487,488,489,490,491,492,493,119,120,494,121,495,122,496,124,497,417,418,498],"tindex":"1a6c263b-3e5b-11e6-80ae-7519af014645","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    return decorated().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a6c4d4c-3e5b-11e6-80ae-2371eed1d671","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"1a6c4d4d-3e5b-11e6-80ae-f3cbd7f756c8","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a6c4d4e-3e5b-11e6-80ae-3b54432a844a","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"1a6c4d4f-3e5b-11e6-80ae-edba6bd71929","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[499],"tindex":"1a6c4d50-3e5b-11e6-80ae-d53fd408beef","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[500,501,502,498,503],"tindex":"1a6c4d51-3e5b-11e6-80ae-475bdb0aa53d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1a6c7462-3e5b-11e6-80ae-95f9d0198761","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"1a6c7463-3e5b-11e6-80ae-b11b25c1ed06","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"1a6c7464-3e5b-11e6-80ae-4d1c12129fee","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[504,505,506,507,508,509,510,511,512,513,514,515],"tindex":"1a6c7465-3e5b-11e6-80ae-87fb8fd9cad0","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1a6c7466-3e5b-11e6-80ae-5138669fbd14","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"1a6c9b77-3e5b-11e6-80ae-579b6c7f4529","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[516,517,518,519,520,63,64,521,522,523,524,525,526,527,528,529,201,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,70,71,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,73,570,571,572,573,574,575,576,79,80,577],"tindex":"1a6c9b78-3e5b-11e6-80ae-39d309486f1b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"1a6c9b79-3e5b-11e6-80ae-f35ac55c0e7e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602],"tindex":"1a6c9b7a-3e5b-11e6-80ae-f9fb0191118c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[603,604,397,605],"tindex":"1a6c9b7b-3e5b-11e6-80ae-31b79a3f0cd5","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[606],"tindex":"1a6cc28c-3e5b-11e6-80ae-a9baf631a419","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[291,292,293,294,302,303,304,295,296,297,298,299,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,355,356,357,351,352,353,354,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,202,386],"tindex":"1a6cc28d-3e5b-11e6-80ae-0b0a7237f2b9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"1a6cc28e-3e5b-11e6-80ae-25f0a16d6842","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"1a6cc28f-3e5b-11e6-80ae-b3dc5ee2188d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[607,608,609,610,611],"tindex":"1a6ce9a0-3e5b-11e6-80ae-f9b86f24e8ed","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1a6ce9a1-3e5b-11e6-80ae-05f3494d0666","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[612,613,614],"tindex":"1a6ce9a2-3e5b-11e6-80ae-85321a922955","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1a6ce9a3-3e5b-11e6-80ae-352e17bd5506","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[615],"tindex":"1a6d10b4-3e5b-11e6-80ae-6fdbb26fce95","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1a6d10b5-3e5b-11e6-80ae-e7917042f169","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    return decorated().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[616],"tindex":"1a6d10b6-3e5b-11e6-80ae-8fc8808d3abf","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244097155/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}