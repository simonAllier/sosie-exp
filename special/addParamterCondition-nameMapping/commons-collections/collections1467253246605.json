{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":171,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":999,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":1164,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":973,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":1134,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":855,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":309,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":416,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":647,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":778,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":102,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":88,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":89,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":466,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":562,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":13,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":935,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":512,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":1111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":627,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSerializeDeserializeThenCompare":1176,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":435,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":473,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":723,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":157,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":629,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":701,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":875,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":653,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":45,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":849,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":919,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":529,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":712,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":856,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":870,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":244,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":175,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":824,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":216,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":1105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":213,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":1095,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":367,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":882,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":379,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":506,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":407,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":1077,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":342,"org.apache.commons.collections4.CollectionUtilsTest.select":1202,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":959,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":958,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":207,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":300,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":151,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":793,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":64,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":515,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":931,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":316,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":417,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":693,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":677,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":625,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":351,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":541,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":1026,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":404,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":424,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":553,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":1083,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":5,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":341,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":453,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":82,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":492,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":606,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":663,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":323,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":664,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":230,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":1171,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":993,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":1006,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":320,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":646,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":1128,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":507,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":1191,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":877,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":1190,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":1189,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":445,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":271,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":485,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":172,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":52,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":234,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":711,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":369,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":679,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":949,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":539,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":971,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":1122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":187,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":601,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":1084,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":963,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":757,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":817,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":676,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":802,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":455,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":911,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":525,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":964,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":827,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":921,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":1087,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":565,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":100,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":983,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":398,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":12,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":822,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":823,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":821,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":797,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":505,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":202,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":1157,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":872,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":753,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":672,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":488,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":692,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":608,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":1076,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":493,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":1177,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":961,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":864,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":640,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":883,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":713,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":1162,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":395,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":914,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":119,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":725,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":779,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":952,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":1158,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":464,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":250,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":508,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":574,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":857,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":858,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":859,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":986,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":268,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":763,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":1172,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":690,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":73,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":944,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":1099,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":1173,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":374,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":109,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":710,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":760,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":847,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":1160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":560,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":728,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":1161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":386,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":333,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":358,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":879,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":1024,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":585,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":832,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":989,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":1143,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":402,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":8,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":229,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":970,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":1059,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":1012,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":922,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":730,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":1117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":218,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":1129,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":23,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":674,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":50,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":552,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":1118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":1070,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":907,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":1200,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":245,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":461,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":816,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":735,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":772,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":1091,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":528,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":717,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":748,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":747,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":746,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":828,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.map.LRUMapTest.testReset":704,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":51,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":1023,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":617,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":1132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":125,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":540,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":769,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":519,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":1156,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":868,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":165,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":325,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":689,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":765,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":447,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":628,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalEmptyCollectionExists":1182,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":93,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":700,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":718,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":893,"org.apache.commons.collections4.map.LinkedMapTest.testReset":754,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":917,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":156,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":733,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":814,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":1015,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":491,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":1043,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":331,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":1011,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":839,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":602,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":750,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":364,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":577,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":1052,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":1149,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":267,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":1174,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":460,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":972,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":1193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":607,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":633,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":946,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":314,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":1151,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":41,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":884,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":523,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":791,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":110,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":667,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":261,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":347,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":920,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":612,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":400,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":339,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":652,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":886,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":966,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":47,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":53,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":1010,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":815,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":622,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":1121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":623,"org.apache.commons.collections4.map.HashedMapTest.testClone":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":533,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":854,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":235,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":1100,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":232,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":410,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":257,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":285,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":681,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":1187,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":715,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":1063,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":567,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":520,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":1205,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":66,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":328,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":356,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":1178,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":687,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":786,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":957,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":785,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":787,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":641,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":826,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":174,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":764,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":848,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":767,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":873,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":306,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":890,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":225,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":436,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":1090,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":538,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":910,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":905,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":419,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":456,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":794,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":756,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":233,"org.apache.commons.collections4.map.LinkedMapTest.testClone":755,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":62,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":275,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":1192,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":378,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":941,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":841,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":498,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":4,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":514,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":1080,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":1019,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":865,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":621,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":887,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":844,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":934,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":843,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":724,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":842,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":368,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":880,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":1085,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":249,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":929,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":657,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":1051,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":719,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":373,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":707,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":1184,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":1194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":1212,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":1058,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":871,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":943,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":654,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":390,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":467,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":876,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalFullCollectionExists":1180,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":1004,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":384,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":950,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToString":1167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":850,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":240,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":942,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":555,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":777,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":796,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":242,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":535,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":616,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":987,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":54,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":429,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":691,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":948,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":1139,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":892,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":936,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":530,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":91,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":720,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":1086,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":1145,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":408,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":1208,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":1109,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":113,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":1142,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":995,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":549,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":547,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":908,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":960,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":1101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":610,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":1188,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":286,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":810,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":129,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":568,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":310,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":766,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":1199,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":924,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":1003,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":414,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":1136,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":680,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":703,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":406,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.map.LRUMapTest.testLRU":706,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":1027,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":994,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":58,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":385,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":399,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":904,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":1046,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":655,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":834,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":375,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":117,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":474,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":985,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":587,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":742,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":976,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":349,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":468,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":173,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":160,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":740,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":897,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":716,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":1030,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":799,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":228,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":388,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":70,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":465,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":899,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":984,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":930,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":411,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":1196,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":296,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":1169,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":143,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":889,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":7,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":909,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":975,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":581,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":813,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":838,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":749,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":183,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":430,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":463,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":289,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":731,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":27,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":1031,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":483,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":518,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":365,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":830,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":438,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":874,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":501,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":1166,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":516,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":377,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":382,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":1103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":193,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":1104,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":863,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":800,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":1050,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":630,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":1044,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":1179,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":770,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":774,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":1114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":808,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":776,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":280,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":1066,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":605,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":1001,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":510,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":340,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":573,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":1028,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":496,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":1135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":615,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":1138,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":34,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":603,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":878,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":223,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":291,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":277,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":618,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":639,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":981,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":1064,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":962,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":1074,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":1126,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":1082,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":65,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":1155,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":811,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":752,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":87,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":509,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":650,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":579,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":1120,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":916,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":956,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":551,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":684,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":990,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":900,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":1049,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":1123,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":1137,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":825,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":997,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":33,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":312,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":1130,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":1198,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":702,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":773,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":116,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":804,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":1013,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":169,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":502,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":0,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":642,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":982,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":795,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":915,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":167,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":559,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":1041,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":775,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":1116,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":835,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":988,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":332,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":593,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":346,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":851,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":582,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":721,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":783,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":1000,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":434,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":448,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":1186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":536,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":1154,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":852,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":1152,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":1009,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":318,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":1112,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":308,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":389,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":1195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":1211,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":262,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":104,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":489,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":1042,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":1181,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":83,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":258,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":759,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":556,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":184,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":564,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":335,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":1005,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":1053,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":190,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":1054,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":1055,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":372,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":472,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":11,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":415,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":819,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":818,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":979,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":176,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":274,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":888,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":820,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":1175,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":324,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":991,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":1119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":862,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":1096,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":780,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":861,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":860,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":1045,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":127,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":68,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":421,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":517,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":475,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":1022,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":359,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":452,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":761,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":330,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":405,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":1075,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":148,"org.apache.commons.collections4.map.LRUMapTest.testClone":705,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":1127,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":1144,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":135,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":784,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":1062,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":457,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":978,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":1061,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSimpleSerialization":1183,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":1033,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":1060,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":401,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":722,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":604,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":867,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":76,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":476,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":439,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":1108,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":1071,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":665,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":1073,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":937,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":1140,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":396,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":1025,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":1209,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":112,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":182,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":343,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":303,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":1097,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":1040,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":1165,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":337,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":61,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":926,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":927,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":925,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":1150,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":272,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":840,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":1056,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":1168,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":37,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":1069,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsSelfHashCode":1185,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":891,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":360,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":92,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":902,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":1021,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":497,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":649,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":1115,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":939,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":477,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":1020,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":1092,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":954,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":1048,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":1014,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":273,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":220,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":903,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":486,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":906,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":951,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":297,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":206,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":1163,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":901,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":807,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":792,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":923,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":423,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":977,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":40,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":1204,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":1201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":596,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":609,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":729,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":181,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":101,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":648,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":611,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":1207,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":71,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":1206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":570,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":588,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":46,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":403,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":480,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":597,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":584,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":1102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":1159,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":1035,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":1047,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":1036,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":790,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":118,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":279,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":571,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":782,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":789,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":788,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":1034,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":866,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":563,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":781,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":1032,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":599,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":829,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":631,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":327,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":580,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":511,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":1147,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":1107,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":626,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":484,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":727,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":996,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":276,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":697,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":433,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":698,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":699,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":74,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":918,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":837,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":583,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":669,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":431,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":294,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":441,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":42,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":48,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":422,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":833,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":348,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":737,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":149,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":72,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":487,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":458,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":912,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":846,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":656,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":1067,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":1078,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":768,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":214,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":682,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":1153,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":1141,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":894,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":913,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":224,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":265,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":801,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":968,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":1088,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":459,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":442,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":714,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":592,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":1131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":290,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":1093,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":967,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":853,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":217,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":569,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":392,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":683,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":21,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":103,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":1106,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":998,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":534,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":1110,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":115,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":666,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":739,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":980,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":44,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":762,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":955,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":938,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":304,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":1029,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":281,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":803,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":1113,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":881,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":1068,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":643,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":1002,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":965,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":432,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":427,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":1007,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":1133,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":1037,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":1038,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":531,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":1079,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":239,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":940,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":84,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":409,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":1197,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":85,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":1098,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":974,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":1018,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":326,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":357,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":1016,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":219,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":831,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":449,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":345,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":895,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":1148,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":933,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":953,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":1081,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":418,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":932,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":671,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":928,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":137,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":670,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":336,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":812,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":482,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":380,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":1017,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":9,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":945,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":1072,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":542,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":287,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":350,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":885,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":1008,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":191,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":806,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":805,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":1057,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":992,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":69,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":869,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":387,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":522,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":695,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":594,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":694,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":658,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":544,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":546,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":454,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":1125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":192,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":317,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":947,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":688,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":1124,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":1146,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":354,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":554,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":659,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":836,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":1089,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":969,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":221,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":67,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":1210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":215,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":678,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":413,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":446,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":56,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":513,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":675,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":305,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":686,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":78,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":98,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":575,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":283,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":708,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":231,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":97,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":479,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":90,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":745,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":1203,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":1065,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":451,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":845,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":744,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":80,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":19,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":383,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":81,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":16,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":661,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":771,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":494,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":896,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":576,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":898,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":1170,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":63,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":709,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":600,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":1094,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":1039,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":591,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":734,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":397},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[0,1],"tindex":"411c2326-3e69-11e6-8a0b-61b8afd98e7c","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"411c9857-3e69-11e6-8a0b-23f7d9af8acc","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"411c9858-3e69-11e6-8a0b-2b5621195a53","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[23,24,25],"tindex":"411c9859-3e69-11e6-8a0b-2fcf0328d439","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"411cbf6a-3e69-11e6-8a0b-51ba9d2875b0","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[26],"tindex":"411cbf6b-3e69-11e6-8a0b-91b3214d1cb2","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[27,28,29,30,31,32,33,34],"tindex":"411cbf6c-3e69-11e6-8a0b-f76eecc82011","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"411cbf6d-3e69-11e6-8a0b-33fb11f38d60","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[35],"tindex":"411ce67e-3e69-11e6-8a0b-1de3d87526c2","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[36],"tindex":"411ce67f-3e69-11e6-8a0b-6db44d8bf03b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"411ce680-3e69-11e6-8a0b-f753a605d90e","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[67,68,69],"tindex":"411d0d91-3e69-11e6-8a0b-c7b7f7e233d2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    checkModCount();\n                    org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    (int)++;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[24,25,70,70,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"411d0d92-3e69-11e6-8a0b-6f23e5ce098b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"411d0d93-3e69-11e6-8a0b-e74913d1ce88","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[94,95],"tindex":"411d34a4-3e69-11e6-8a0b-e38341c801f9","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"411d34a5-3e69-11e6-8a0b-e960a98224d5","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[96],"tindex":"411d34a6-3e69-11e6-8a0b-e990045dc4d1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[97,98,99,100,101,102],"tindex":"411d34a7-3e69-11e6-8a0b-f3785e2d93ad","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end2 < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[103],"tindex":"411d5bb8-3e69-11e6-8a0b-23764707babc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[97],"tindex":"411d5bb9-3e69-11e6-8a0b-130fa1cbdb6a","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"411d5bba-3e69-11e6-8a0b-b1c3c5a04393","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[104,105,106,107,108,109],"tindex":"411d5bbb-3e69-11e6-8a0b-ad35c01a7441","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"411d5bbc-3e69-11e6-8a0b-fb3a2f06c79d","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"411d5bbd-3e69-11e6-8a0b-ebbb2842b5c2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[110,111,112,113,114,115,116,117,118,119,27,120,121,122,123,124,125,126,127,29,128,129,130,131,132,133,134,135,30,136,137,138,139,140,141,142,143,31,144,145,146,147,148,149,150,151,32,152,153,154,155,156,157,158],"tindex":"411d82ce-3e69-11e6-8a0b-0b3fb52db9a7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[28,33],"tindex":"411d82cf-3e69-11e6-8a0b-c3a8c19c58c5","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"411d82d0-3e69-11e6-8a0b-054d141e00d1","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"411d82d1-3e69-11e6-8a0b-237026fd98e2","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"tindex":"411d82d2-3e69-11e6-8a0b-2b2a33064b85","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,227,228,230,231,232,233,235,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"tindex":"411da9e3-3e69-11e6-8a0b-3d765dfa00ff","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"411da9e4-3e69-11e6-8a0b-fdd94257f162","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[515],"tindex":"411da9e5-3e69-11e6-8a0b-69fea38cc681","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[77],"tindex":"411da9e6-3e69-11e6-8a0b-c3c6e5e44e8a","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[516],"tindex":"411dd0f7-3e69-11e6-8a0b-af30d99e9ab0","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[517],"tindex":"411dd0f8-3e69-11e6-8a0b-55fef6b01094","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[201,244],"tindex":"411dd0f9-3e69-11e6-8a0b-0517b7bac3fa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"411dd0fa-3e69-11e6-8a0b-757f97d99ac7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563],"tindex":"411dd0fb-3e69-11e6-8a0b-e5ef69e616e4","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(lengthInBits)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[26],"tindex":"411df80c-3e69-11e6-8a0b-2f9c5ab96e3e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[564,565,566,567,568,569,570,571,110,111,572,573,574,575,112,576,113,577,578,579,114,580,581,582,583,584,585,115,116,586,587,588,589,117,590,118,591,592,593,28,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,127,656,657,658,659,660,661,662,663,664,29,665,666,128,129,667,668,130,131,132,133,134,669,285,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,135,691,692,693,694,695,696,697,698,699,30,700,701,136,137,702,703,138,139,140,141,142,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,143,740,741,742,743,744,745,746,747,748,31,749,750,144,145,751,752,146,147,148,149,150,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,151,782,783,784,785,786,787,788,789,790,32,791,792,152,153,793,794,154,155,156,157,158,33,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,35,445,34,836,837,838,839,840,841,842,843,844,845,846,847,848,849,489,490,491,492,493,494,495,850,496,851,497,852,853,498,499,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,95,872,873],"tindex":"411df80d-3e69-11e6-8a0b-9120be51cae1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[874],"tindex":"411df80e-3e69-11e6-8a0b-5b2aff1a3b16","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[204,208,210,211,212],"tindex":"411df80f-3e69-11e6-8a0b-d3f7e8082316","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[875,876],"tindex":"411e1f20-3e69-11e6-8a0b-d3f27965af90","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[877],"tindex":"411e1f21-3e69-11e6-8a0b-dff9f28e4a6f","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[160,161,162,159,167,168,169,170,171,172,164,165,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,215,222,223,224,225,219,220,221,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"tindex":"411e1f22-3e69-11e6-8a0b-6d23fa3af653","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[189],"tindex":"411e1f23-3e69-11e6-8a0b-0d29bf69d547","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[259,878,879,107,880,881,882,109,883],"tindex":"411e4634-3e69-11e6-8a0b-6d97ae1c9ff2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,565,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,463,937,938,464,939,940,941,942,465,466,943,467,944,945,946,468,947,948,469,949,470,950,471,951,952,472,953,473],"tindex":"411e4635-3e69-11e6-8a0b-99ab64db373e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"411e4636-3e69-11e6-8a0b-05104b918635","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[954],"tindex":"411e4637-3e69-11e6-8a0b-e3c1c20bcb10","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[288,302,316,342,387,34],"tindex":"411e4638-3e69-11e6-8a0b-859a7afc1dad","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                {\n                    return decorated().remove(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"411e4639-3e69-11e6-8a0b-f776d19dfbd3","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[955,956,957,958,959,960],"tindex":"411e6d4a-3e69-11e6-8a0b-6d33d920e68c","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"411e6d4b-3e69-11e6-8a0b-551550de9350","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    checkModCount();\n                    org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    (int)++;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[961,962,37,62,963,964,20,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995],"tindex":"411e6d4c-3e69-11e6-8a0b-e51d64a23a6d","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[164,165,166,168,163,219,220,221],"tindex":"411e6d4d-3e69-11e6-8a0b-739f67ae73b6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[996],"tindex":"411e6d4e-3e69-11e6-8a0b-871f47809cf3","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    if (transformer == null) {\n                        throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"411e945f-3e69-11e6-8a0b-d5e42e94a54e","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[997],"tindex":"411e9460-3e69-11e6-8a0b-5dc306f450b6","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"411e9461-3e69-11e6-8a0b-bfbc1ea97698","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    if (transformer == null) {\n                        throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[998],"tindex":"411e9462-3e69-11e6-8a0b-433ff45f780a","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"411e9463-3e69-11e6-8a0b-0724d260233c","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038],"tindex":"411ebb74-3e69-11e6-8a0b-a5b151f448aa","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[3,1039,1040,1041,1042,1043,1044,1045,1046,26],"tindex":"411ebb75-3e69-11e6-8a0b-47a7e9b73f38","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"411ebb76-3e69-11e6-8a0b-e557e8ea4179","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[1047,1048],"tindex":"411ebb77-3e69-11e6-8a0b-49cff885b87a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"411ee288-3e69-11e6-8a0b-55da0fbd5218","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(lengthInBits)) {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"411ee289-3e69-11e6-8a0b-bd990596ab7e","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"411ee28a-3e69-11e6-8a0b-e1fee6443675","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"411ee28b-3e69-11e6-8a0b-55605735a52b","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"411ee28c-3e69-11e6-8a0b-59a80229fab8","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,308,1070,1071,309,1072,1073,310,1074,311,312,1075,313,1076,314,1077,315,316,317,1078,1079,318,1080,319,1081,1082,320,1083,321],"tindex":"411f099d-3e69-11e6-8a0b-f1c18e062ea6","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[1084,1085,1086,564,1087,1088,1089,1090],"tindex":"411f099e-3e69-11e6-8a0b-efa0d8a1c3de","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"411f099f-3e69-11e6-8a0b-f78df641bb41","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,909,1111,1112,1113,1114,1047,1115,1116,1117,1118,1119,1120,1121,415,1122,1123,1124,1125,1126,416,1127,1128,1129,1130,1131,1048,1132,417,1133,418,1134,1135,419,1136,420],"tindex":"411f09a0-3e69-11e6-8a0b-41314f8e3163","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,980],"tindex":"411f09a1-3e69-11e6-8a0b-ff267a95bb76","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[996],"tindex":"411f30b2-3e69-11e6-8a0b-3b8b20a5266c","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"411f30b3-3e69-11e6-8a0b-b1c6ce8f4ce7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                {\n                    return decorated().remove(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[1160,1161,1162],"tindex":"411f30b4-3e69-11e6-8a0b-97c634829ae5","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,961,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187],"tindex":"411f30b5-3e69-11e6-8a0b-e18b53320efc","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[1188,380,385,1189,1190,1191,1192,1193,1194,1195,1196,1197],"tindex":"411f30b6-3e69-11e6-8a0b-eb3e9d5cc0b3","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[1198,1199],"tindex":"411f30b7-3e69-11e6-8a0b-4576f8240cc5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1200],"tindex":"411f57c8-3e69-11e6-8a0b-6d360684d6dc","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[705,707,712,720,721,726,727,729,730,731,732,734,736,739,143,743,744,745,746,747,748,147,148,149,762,763,768,769,771,772,773,776,778,781,151,785,786,787,788,789,790,155],"tindex":"411f57c9-3e69-11e6-8a0b-c123a4cd2b13","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[837,838],"tindex":"411f57ca-3e69-11e6-8a0b-d1e41b0adec1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"411f57cb-3e69-11e6-8a0b-070cc3dde8f6","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1201],"tindex":"411f57cc-3e69-11e6-8a0b-2b94ecaf2b75","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"411f57cd-3e69-11e6-8a0b-a79cb8280c67","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[1202],"tindex":"411f7ede-3e69-11e6-8a0b-47241087e6de","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"411f7edf-3e69-11e6-8a0b-1fa5553dba21","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1203,1204],"tindex":"411f7ee0-3e69-11e6-8a0b-9b3609c1b567","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[67,68,69,1205],"tindex":"411f7ee1-3e69-11e6-8a0b-a91580bd5f1e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond < 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"beyond"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"411f7ee2-3e69-11e6-8a0b-1be22c7a1397","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"411fa5f3-3e69-11e6-8a0b-f75cf6325485","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"411fa5f4-3e69-11e6-8a0b-d1153d79e70e","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"411fa5f5-3e69-11e6-8a0b-4126c3ae8cfc","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1206,1207,1208],"tindex":"411fa5f6-3e69-11e6-8a0b-2b4bdce96980","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[1209],"tindex":"411fa5f7-3e69-11e6-8a0b-d13756aa579f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[1210],"tindex":"411fa5f8-3e69-11e6-8a0b-019f587876cd","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1211,1212],"tindex":"411fcd09-3e69-11e6-8a0b-4f72eb5e7a6a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250209710/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}