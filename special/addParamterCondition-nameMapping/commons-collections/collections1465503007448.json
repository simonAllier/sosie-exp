{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":13,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":598,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":506,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":692,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":128,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":597,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":211,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":595,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":280,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":492,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":674,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":614,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":296,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":647,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":648,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":377,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":649,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":650,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":35,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":266,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":70,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":374,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":553,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":301,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":396,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":28,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":398,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":600,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":69,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":431,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":639,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":100,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":295,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":64,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":305,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":17,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":628,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":365,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":677,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":690,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":474,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":138,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":461,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":56,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":621,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":317,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":490,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":562,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":207,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":566,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":254,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":120,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":278,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":625,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":547,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":98,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":212,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":565,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":230,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":417,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":578,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":313,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":539,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":306,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":39,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":421,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":438,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":452,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":239,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":173,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":146,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":285,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":652,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":671,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":408,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":24,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":483,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":471,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":590,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":694,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":432,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":329,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":155,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":288,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":686,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":209,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":467,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":606,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":181,"org.apache.commons.collections4.map.CompositeMapTest.testPut":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":77,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":178,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":188,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":342,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":579,"org.apache.commons.collections4.map.CompositeMapTest.testGet":375,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":540,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":664,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":478,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":550,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":631,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":186,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":29,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":457,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":585,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":319,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":165,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":345,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":633,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":497,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":643,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":145,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":150,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":351,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":512,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":498,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":226,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":704,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":697,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":580,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":304,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":180,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":464,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":121,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":477,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":557,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":273,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":551,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":172,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":44,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":104,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":36,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":352,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":110,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":537,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":111,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":641,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":122,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":363,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":382,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":327,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":244,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":434,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":615,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":32,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":249,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":234,"org.apache.commons.collections4.list.TreeListTest.testRemove":242,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":259,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":47,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":439,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":538,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":274,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":189,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":109,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":574,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":256,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":444,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":607,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":423,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":588,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":613,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":495,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":515,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":257,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":92,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":30,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":271,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":202,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":583,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":366,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":672,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":603,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":339,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":386,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":114,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":385,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":384,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":401,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":689,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":575,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":688,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":665,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":293,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":544,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":436,"org.apache.commons.collections4.ListUtilsTest.testSubtract":591,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":609,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":208,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":169,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":318,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":468,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":153,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":270,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":496,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":542,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":532,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":586,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":290,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":465,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":141,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":73,"org.apache.commons.collections4.list.TreeListTest.testListEquals":253,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":505,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":325,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":685,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":482,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":240,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":487,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":232,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":279,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":592,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":549,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":323,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":324,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":472,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":655,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":564,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":287,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":618,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":488,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":415,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":251,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":389,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":453,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":388,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":281,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":337,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":636,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":307,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":572,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":536,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":560,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":687,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":480,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":216,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":300,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":523,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":563,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":379,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":442,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":658,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":378,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":367,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":657,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":695,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":167,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":299,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":667,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":192,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":246,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":535,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":107,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":108,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":25,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":272,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":250,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":372,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":525,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":702,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":335,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":133,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":349,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":524,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":126,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":364,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":552,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":158,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":684,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":218,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":449,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":634,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":152,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":473,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":144,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":156,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":310,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":134,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":162,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":676,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":79,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":252,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":422,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":348,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":135,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":399,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":620,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":635,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":247,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":670,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":148,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":390,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":347,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":419,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":622,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":696,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":441,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":127,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":236,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":501,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":0,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":683,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":115,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":237,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":116,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":380,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":117,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":298,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":403,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":459,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":638,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":460,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":693,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":610,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":151,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":443,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":559,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":294,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":3,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":530,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":78,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":675,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":440,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":68,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":197,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":640,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":656,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":567,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":194,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":629,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":469,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":499,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":358,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":425,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":130,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":182,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":418,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":430,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":394,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":642,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":470,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":392,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":222,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":248,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":284,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":255,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":113,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":360,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":312,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":258,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":451,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":700,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":503,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":381,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":513,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":16,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":427,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":511,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":276,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":448,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":485,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":370,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":489,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":303,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":395,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":132,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":275,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":561,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":645,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":261,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":200,"org.apache.commons.collections4.set.CompositeSetTest.testContains":350,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":411,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":154,"org.apache.commons.collections4.list.TreeListTest.testBug35258":245,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":577,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":76,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":268,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":573,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":458,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":243,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":99,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":520,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":4,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":500,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":494,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":484,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":333,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":668,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":682,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":543,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":678,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":507,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":412,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":486,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":61,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":594,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":330,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":630,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":332,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":331,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":662,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":103,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":404,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":102,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":373,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":617,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":235,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":491,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":83,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":426,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":541,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":210,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":584,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":33,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":568,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":663,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":596,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":589,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":343,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":391,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":143,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":231,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":125,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":224,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":402,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":545,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":297,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":34,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":201,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":556,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":315,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":131,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":661,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":433,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":112,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":63,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":703,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":221,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":518,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":456,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":291,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":410,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":555,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":651,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":405,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":593,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":191,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":691,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":160,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":570,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":582,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":157,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":179,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":283,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":420,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":140,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":414,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":509,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":308,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":619,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":533,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":354,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":166,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":314,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":534,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":644,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":416,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":2,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":171,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":679,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":72,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":136,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":263,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":309,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":429,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":581,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":546,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":466,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":302,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":522,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":548,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":163,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":149},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"294b5a62-2e7e-11e6-895f-6dc71a43b587","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"294c1db3-2e7e-11e6-895f-093025a80b09","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"294c1db4-2e7e-11e6-895f-a338c928dfbd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[98,99],"tindex":"294c44c5-2e7e-11e6-895f-637bf5655a3b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"294c6bd6-2e7e-11e6-895f-85abff31bdce","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"294c6bd7-2e7e-11e6-895f-f333dc823fc4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[124],"tindex":"294d5638-2e7e-11e6-895f-f50a6aa105a1","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"294d7d49-2e7e-11e6-895f-b352f9a6230d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"294da45a-2e7e-11e6-895f-1f2a58eeeaab","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"294dcb6b-2e7e-11e6-895f-1db1af11eecf","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[125],"tindex":"294df27c-2e7e-11e6-895f-8391f9cbd23d","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if ((map.size()) > 0) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[126,127,128,113,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"294e198d-2e7e-11e6-895f-45376dce5684","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[166,167],"tindex":"294e198e-2e7e-11e6-895f-25abcbc7f2f0","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[168,169],"tindex":"294e409f-2e7e-11e6-895f-9b4fcf45c5ae","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[170,171,172,173,174],"tindex":"294e67b0-2e7e-11e6-895f-dbe15ec4b607","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"294e67b1-2e7e-11e6-895f-c590929d4ec2","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"294e8ec2-2e7e-11e6-895f-8bca451542f2","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[175,176,177,178],"tindex":"294eb5d3-2e7e-11e6-895f-778b8f071438","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[179],"tindex":"294eb5d4-2e7e-11e6-895f-45a3d2e874b4","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[180,181,182,183,184,185,186,187,188,189,190],"tindex":"294edce5-2e7e-11e6-895f-ebbedb8070a6","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[191,192],"tindex":"294f03f6-2e7e-11e6-895f-1d2f4ededffb","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"tindex":"294f2b07-2e7e-11e6-895f-e1f8d08871a7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275],"tindex":"294f2b08-2e7e-11e6-895f-57db2b24d19d","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"294f5219-2e7e-11e6-895f-69d0a021bb7d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[276,277,278],"tindex":"294f792a-2e7e-11e6-895f-51a98fc7196d","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[279,280,281],"tindex":"294f792b-2e7e-11e6-895f-17cf9d59f312","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[282],"tindex":"294fa03c-2e7e-11e6-895f-b7acc4135cde","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[],"tindex":"294fa03d-2e7e-11e6-895f-c9d5868a548f","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[283],"tindex":"294fc74e-2e7e-11e6-895f-0b45326cc25f","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[174],"tindex":"294fc74f-2e7e-11e6-895f-af516780c7b7","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[143,147,162],"tindex":"294fee60-2e7e-11e6-895f-5b402d52e1a5","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"29501571-2e7e-11e6-895f-e556ab785039","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302],"tindex":"29501572-2e7e-11e6-895f-b3f047eac4f6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165],"tindex":"29503c83-2e7e-11e6-895f-61eddd9bf645","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"29503c84-2e7e-11e6-895f-23766ba3adcc","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"29506395-2e7e-11e6-895f-9db31b9e4da9","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[317,318,319],"tindex":"29506396-2e7e-11e6-895f-e517f22d1593","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,284,340,285,341,286,287,288,342,289,343,290,344,291,292,293,294,345,346,295,296,347,297,348,349,350,351,298,352,353,354,299,355,356,357,358,359,360,361,362,363,364,365,366,300,367,368,301,369,370,371,372,302,373],"tindex":"29508aa7-2e7e-11e6-895f-b7810c10ebf6","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[374],"tindex":"2950b1b8-2e7e-11e6-895f-6321cd9b7a7b","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[317],"tindex":"2950d8c9-2e7e-11e6-895f-bb9472cb7673","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"2950ffda-2e7e-11e6-895f-1519b459db7b","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"2950ffdb-2e7e-11e6-895f-2da444212f15","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((end1 - end2) > (end1 - start2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"end1","end1":"end1","start2":"start2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[375,376,377,378,379,380,381,382],"tindex":"295126ec-2e7e-11e6-895f-7b345c3bcecb","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException();\n            } else {\n                {\n                    for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                        final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                        if ((intersect.size()) != 0) {\n                            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                                throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                            } \n                            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                        } \n                    }\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n                    temp[((temp.int) - 1)] = map;\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"29519c1d-2e7e-11e6-895f-413983996e2a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444],"tindex":"2951c32e-2e7e-11e6-895f-43bc1d5003e0","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[445,446,447,448,449,450,451,452,453,454,455,180,181,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,184,185,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,186,187,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,188,189,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,190],"tindex":"2951c32f-2e7e-11e6-895f-19a778f2328b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[592],"tindex":"2951ea40-2e7e-11e6-895f-db907f878b25","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[593,594,595,596,597,598,599,600,237,395,601,602,396,397,398,603,238,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,239,625,240,626,627,628,629,630,631,632,633,634,635,636],"tindex":"2951ea41-2e7e-11e6-895f-3536e36272be","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"29521152-2e7e-11e6-895f-c144a9cfa906","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[591,190],"tindex":"29521153-2e7e-11e6-895f-57638ccd970f","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"29521154-2e7e-11e6-895f-23c997dd14b8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[456,637,490,506,556,568],"tindex":"29523865-2e7e-11e6-895f-6bb33d76949e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[638,639],"tindex":"29523866-2e7e-11e6-895f-ed485699e715","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"29523867-2e7e-11e6-895f-59a4046ba028","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,19,18,56,55,57,58,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,68],"tindex":"29525f78-2e7e-11e6-895f-8b402df42cbc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[640],"tindex":"29528689-2e7e-11e6-895f-75d26ce6ded4","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[641,642,643],"tindex":"2952868a-2e7e-11e6-895f-d9b63418391c","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[644,645],"tindex":"2952868b-2e7e-11e6-895f-77e2761fdb7c","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"2952868c-2e7e-11e6-895f-57df21192de9","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666],"tindex":"2952ad9d-2e7e-11e6-895f-f9faab6bc01e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"2952ad9e-2e7e-11e6-895f-a773efc96f73","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[592],"tindex":"2952ad9f-2e7e-11e6-895f-bd4c7e28cac8","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[667],"tindex":"2952d4b0-2e7e-11e6-895f-dbfdb7db369c","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[668],"tindex":"2952d4b1-2e7e-11e6-895f-f3b14ade3117","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[669],"tindex":"2952d4b2-2e7e-11e6-895f-8f97f9a82b45","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[670,671,672,673,674,675,676,677,678],"tindex":"2952fbc3-2e7e-11e6-895f-f7f6fd2e8bba","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"2952fbc4-2e7e-11e6-895f-9d49ab5c701a","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[679,680,681,682,683,684,685,686,687],"tindex":"2952fbc5-2e7e-11e6-895f-d98751cc3d2e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[688],"tindex":"295322d6-2e7e-11e6-895f-953e1e7e12a9","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[689],"tindex":"295349e7-2e7e-11e6-895f-61e225e875fe","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[690],"tindex":"29539808-2e7e-11e6-895f-c584027f274d","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[440],"tindex":"29539809-2e7e-11e6-895f-97b647736f8d","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[2,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,19,18,56,55,58,57,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,69,68],"tindex":"2953980a-2e7e-11e6-895f-b7ba6ed086fe","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"2953bf1b-2e7e-11e6-895f-bb5f0cc77be9","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"2953bf1c-2e7e-11e6-895f-cdbe901aa0bf","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException();\n            } else {\n                {\n                    for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                        final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                        if ((intersect.size()) != 0) {\n                            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                                throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                            } \n                            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                        } \n                    }\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n                    temp[((temp.int) - 1)] = map;\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[691],"tindex":"2956572d-2e7e-11e6-895f-db272e626973","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"29567e3e-2e7e-11e6-895f-352d760ef240","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"29567e3f-2e7e-11e6-895f-cb98ca203312","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"29567e40-2e7e-11e6-895f-594b5630a750","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"29567e41-2e7e-11e6-895f-9f2c84add4c9","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"2956a552-2e7e-11e6-895f-37091ec162b6","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"2956a553-2e7e-11e6-895f-01ecde7c7e92","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[125],"tindex":"2956a554-2e7e-11e6-895f-39b73b28ce90","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"2956cc65-2e7e-11e6-895f-d7897ff0bbac","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value != null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[692,693],"tindex":"2956cc66-2e7e-11e6-895f-278060c8bd67","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[636],"tindex":"2956cc67-2e7e-11e6-895f-e94a0fa04df4","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"2956f378-2e7e-11e6-895f-7fac1ff97267","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2956f379-2e7e-11e6-895f-1311cc0553af","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"2956f37a-2e7e-11e6-895f-836d2f75251d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"2956f37b-2e7e-11e6-895f-61f899521e5b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"29571a8c-2e7e-11e6-895f-e1fd34620e32","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"29571a8d-2e7e-11e6-895f-eb9931be435f","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[694,695],"tindex":"29571a8e-2e7e-11e6-895f-73b4cf2fb06d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[180,181,182,183,472,473,184,185,186,187,696,697,536,537,188,189,584,585],"tindex":"29571a8f-2e7e-11e6-895f-3ba96cb2d499","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            if (null == object) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[698],"tindex":"295741a0-2e7e-11e6-895f-71b4868aa046","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"295741a1-2e7e-11e6-895f-ad6329e893d6","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[699,700],"tindex":"295741a2-2e7e-11e6-895f-3736592d7698","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"295768b3-2e7e-11e6-895f-6b833a1f1950","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            if (null == object) {\n                {\n                    return decorated().remove(object, count);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[701,702,703,704],"tindex":"295768b4-2e7e-11e6-895f-053c23ba8525","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[556],"tindex":"295768b5-2e7e-11e6-895f-aff14f487341","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}