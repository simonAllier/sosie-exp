{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":6,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":21,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":53,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":89,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":20,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":34,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":16,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":82,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":15,"org.apache.commons.collections4.list.TreeListTest.testRemove":3,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":29,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":113,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":63,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":105,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":64,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":116,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":32,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":2,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":62,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":24,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":28,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":99,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":67,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":94,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":25,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":30,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":47,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":88,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":107,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":111,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":108,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":93,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":87,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":13,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":97,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":69,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":11,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":23,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":85,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":96,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":65,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":71,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":117,"org.apache.commons.collections4.list.TreeListTest.testBug35258":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":92,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":50,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":35,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":110,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":4,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":103},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[],"tindex":"413331ef-2eae-11e6-a5a3-57ec3e82786e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[0,1,2],"tindex":"41344360-2eae-11e6-a5a3-7f36a238efad","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index == 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"4134b891-2eae-11e6-a5a3-55aed5a9fbf5","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        {\n            return node == null ? -1 : node.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"4134b892-2eae-11e6-a5a3-0317cd95935c","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[23,24,25,26,27,28,29,30,31,32],"tindex":"41368d53-2eae-11e6-a5a3-b746314789a0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[33],"tindex":"4136b464-2eae-11e6-a5a3-6b7e5f9e1492","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtInvocationImpl","sourcecode":"root.isEmpty()"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"4136b465-2eae-11e6-a5a3-c94a41f5980d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isEmpty()) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:125","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[61],"tindex":"4136db76-2eae-11e6-a5a3-450118fe4e37","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:689","type":"CtBinaryOperatorImpl","sourcecode":"(current.right) == null"},"failures":[62,47,48,49,63,64,65,66,67,68,69,70,71,72,73,50,74,75,76,51,52,77,53,54,56,58,59,60,78,79,80,81,82],"tindex":"41370287-2eae-11e6-a5a3-4f4b5bcc29e3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"node","right":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"41370288-2eae-11e6-a5a3-1de9e391c313","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[],"tindex":"41372999-2eae-11e6-a5a3-99cd479e10cf","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count < count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"count","currentIndex":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[],"tindex":"413750aa-2eae-11e6-a5a3-d98901e80600","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index < index) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"413750ab-2eae-11e6-a5a3-21439f1eb872","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"4138d74c-2eae-11e6-a5a3-ff7f301ac1ab","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (!(key == null ? key == null : o1.equals(o2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"key","o2":"key"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl","sourcecode":"size < 4"},"failures":[118],"tindex":"4139256d-2eae-11e6-a5a3-4d5fec77c217","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex < 4) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(sub);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"toIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[],"tindex":"4139256e-2eae-11e6-a5a3-0957390e44c2","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"value"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":16,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}