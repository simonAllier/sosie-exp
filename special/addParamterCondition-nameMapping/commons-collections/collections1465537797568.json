{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":51,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":181,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":179,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":185,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":147,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":117,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":56,"org.apache.commons.collections4.CollectionUtilsTest.select":34,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":109,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":126,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":84,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":172,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":169,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":174,"org.apache.commons.collections4.map.CompositeMapTest.testPut":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":137,"org.apache.commons.collections4.map.CompositeMapTest.testGet":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":155,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":187,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":90,"org.apache.commons.collections4.set.CompositeSetTest.testContains":30,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":136,"org.apache.commons.collections4.ListUtilsTest.testSelect":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":95,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":71,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":184,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":11,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":149,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":122,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":114,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":85,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":150,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":10,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":45,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":91,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":134,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":173,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":131,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":22,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":53},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"29d0db0a-2ecf-11e6-ba46-5d8f7174283c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"29d1c56b-2ecf-11e6-ba46-015e244d0e22","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value.isAssignableFrom(value.getReturnType())) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"value","method":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"29d1c56c-2ecf-11e6-ba46-b9f7fb72278b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode >= hashCode) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode","index":"hashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[17],"tindex":"29d1ec7d-2ecf-11e6-ba46-c3af0823889f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"29d2138e-2ecf-11e6-ba46-3766fb5c6403","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[36,37,38,39],"tindex":"29d23a9f-2ecf-11e6-ba46-2bf5e92bd70d","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"29d23aa0-2ecf-11e6-ba46-ef0dae5553cf","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"29d261b1-2ecf-11e6-ba46-311f6418ad75","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"29d261b2-2ecf-11e6-ba46-a9a6f8a52ad1","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"29d261b3-2ecf-11e6-ba46-e1e4545900cb","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:99","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength resolve(final int value) {\n    if (value == value) {\n        {\n            switch (value) {\n                case 0 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 1 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 2 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                default :\n                    throw new java.lang.IllegalArgumentException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[40,41],"tindex":"29d288c4-2ecf-11e6-ba46-6700c6c5b820","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"29d2d6e5-2ecf-11e6-ba46-c311bd035e8b","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"29d2d6e6-2ecf-11e6-ba46-b36fe3f31596","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[109],"tindex":"29d2fdf7-2ecf-11e6-ba46-73459e389e86","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"29d32508-2ecf-11e6-ba46-d18a9902be43","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"29d32509-2ecf-11e6-ba46-e58360611225","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[110,111,112],"tindex":"29d3250a-2ecf-11e6-ba46-b76ad41890aa","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"29d34c1b-2ecf-11e6-ba46-cd1d9f69ed91","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"29d34c1c-2ecf-11e6-ba46-df13902eab59","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[113],"tindex":"29d34c1d-2ecf-11e6-ba46-b96b9ec9e072","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"29d3732e-2ecf-11e6-ba46-bbfe83f45e15","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"29d3732f-2ecf-11e6-ba46-0170590f48ba","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[114],"tindex":"29d37330-2ecf-11e6-ba46-25e090be7e77","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[115],"tindex":"29d39a41-2ecf-11e6-ba46-5150795852fd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"29d39a42-2ecf-11e6-ba46-d3bdac31db62","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (bitIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"tindex":"29d39a43-2ecf-11e6-ba46-138f765298a3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"29d3c154-2ecf-11e6-ba46-35902ba58804","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":27,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}