{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":519,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":608,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":678,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":127,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":226,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":272,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":712,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":518,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":205,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":379,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":110,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":516,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":477,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":405,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":170,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":400,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":433,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":541,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":591,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":447,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":116,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":478,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":410,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":197,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":296,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":330,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":663,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":466,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":521,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":528,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":263,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":594,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":440,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":676,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":243,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":185,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":359,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":525,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":269,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":365,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":499,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":160,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":650,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":557,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":81,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":495,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":551,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":622,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":697,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":656,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":56,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":381,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":303,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":314,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":509,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":553,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":737,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":742,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":171,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":384,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":270,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":276,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":291,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":42,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":119,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":740,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":437,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":408,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":620,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":467,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":435,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":124,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":664,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":231,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":452,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":552,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":713,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":79,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":117,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":51,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":363,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":694,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":651,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":721,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":722,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":54,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":637,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":711,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":266,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":375,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":465,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":139,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":156,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":137,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":574,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":177,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":217,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":673,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":644,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":571,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":3,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":356,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":533,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":184,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":43,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":708,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":67,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":588,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":669,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":369,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":107,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":599,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":268,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":350,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":691,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":108,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":323,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":166,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":562,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":111,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":106,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":585,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":195,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":278,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":607,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":450,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":729,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":469,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":398,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":44,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":37,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":27,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":492,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":684,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":640,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":685,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":683,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":481,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":143,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.CollectionUtilsTest.union":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":692,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":167,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":337,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":436,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":32,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":229,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":479,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":250,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":693,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":85,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":430,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":395,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":172,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":496,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":308,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":700,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":392,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":695,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":327,"org.apache.commons.collections4.list.TreeListTest.testRemove":306,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":319,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":580,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":65,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":186,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":681,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":338,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":680,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":331,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":682,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":316,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":52,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":500,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":100,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":199,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":705,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":704,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":273,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":317,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":716,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":99,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":572,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":701,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":703,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":616,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":396,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":129,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":254,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":256,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":441,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":529,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":300,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":354,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":353,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":302,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":352,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":234,"org.apache.commons.collections4.map.LRUMapTest.testClone":178,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":19,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":183,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":279,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":730,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":253,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":627,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":202,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":649,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":536,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":587,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":618,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":4,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":415,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":489,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":154,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":334,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":688,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":34,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":69,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":341,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":449,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":59,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":374,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":578,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":602,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":131,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":619,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":290,"org.apache.commons.collections4.list.TreeListTest.testListEquals":313,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":378,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":643,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":39,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":484,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":393,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":554,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":83,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":225,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":8,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":545,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":666,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":543,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":25,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":388,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":456,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":320,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":15,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":73,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":380,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":567,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":355,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":210,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":513,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":615,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":698,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":102,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":614,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":190,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":224,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":223,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":222,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":686,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":645,"org.apache.commons.collections4.map.LRUMapTest.testReset":191,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":242,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":344,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":407,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":739,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":617,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":120,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":457,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":600,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":262,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":31,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":474,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":288,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":391,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":423,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":258,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":347,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":346,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":345,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":493,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":128,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":203,"org.apache.commons.collections4.map.LinkedMapTest.testReset":252,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":653,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":505,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":207,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":12,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":507,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":71,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":679,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":336,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":609,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":654,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":328,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":115,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":241,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":446,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":96,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":463,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":159,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":642,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":404,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":563,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":648,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":153,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":227,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":40,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":340,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":431,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":482,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":629,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":157,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":741,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":285,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":590,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":163,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":277,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":284,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":362,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":283,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":628,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":403,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":329,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":652,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":665,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":504,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":626,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":112,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":95,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":92,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":564,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":311,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":394,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":149,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":35,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":238,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":443,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":549,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":714,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":584,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":201,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":641,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":522,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":734,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":735,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":357,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":736,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":91,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":565,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":710,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":660,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":537,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":152,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":661,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":662,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":655,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":689,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":93,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":212,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":235,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":421,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":342,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":579,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":94,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":101,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":175,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":577,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":727,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":558,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":5,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":188,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":351,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":74,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":364,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":486,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":261,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":230,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":556,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":370,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":566,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":728,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":28,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":6,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":471,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":326,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":498,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":315,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":399,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":333,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":318,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":390,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":438,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":671,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":483,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":321,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":257,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":511,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":187,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":723,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":260,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":165,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":386,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":523,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":568,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":382,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":301,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":497,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":162,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":413,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":339,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":322,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":453,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":597,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":510,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":458,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":155,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":41,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":214,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":247,"org.apache.commons.collections4.list.TreeListTest.testBug35258":309,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":255,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":476,"org.apache.commons.collections4.map.LinkedMapTest.testClone":246,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":406,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":299,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":332,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":623,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":508,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":368,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":402,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":672,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":524,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":140,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":244,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":88,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":699,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":709,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":633,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":613,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":657,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":659,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":487,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":147,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":383,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":638,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":397,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":575,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":631,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":193,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":632,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":176,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":97,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":707,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":592,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":612,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":442,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":687,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":635,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":515,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":559,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":569,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":23,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":468,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":72,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":448,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":414,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":200,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":601,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":606,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":271,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":494,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":544,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":424,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":611,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":70,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":48,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":377,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":639,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":502,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":675,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":674,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":237,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":462,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":0,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":517,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":53,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":460,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":473,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":538,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":595,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":213,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":194,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":20,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":470,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":459,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":17,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":732,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":733,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":305,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":646,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":731,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":80,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":417,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":146,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":581,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":130,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":376,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":427,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":677,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":239,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":738,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":432,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":539,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":259,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":426,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":634,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":717,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":726,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":439,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":366,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":385,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":411,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":211,"org.apache.commons.collections4.map.LRUMapTest.testLRU":179,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":38,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":325,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":621,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":451,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":90,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":503,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":401,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":360,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":725,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":715,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":514,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":690,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":46,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":485,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":169,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":158,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":218,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":491,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":181,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":371,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":409,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":546,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":60,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":506,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":304,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":667,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":555,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":245,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":61,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":475,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":586,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":36,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":488,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":173,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":219,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":589,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":220,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":464,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":216,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":135,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":189,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":624,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":11,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":719,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":696,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":324,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":387,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":45,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":444,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":144,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":182,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":103,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":668,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":208,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":150},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"1cf1fec6-2ed2-11e6-b91f-fd376b6dae73","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[70,71],"tindex":"1cf2c217-2ed2-11e6-b91f-8511fd3ba9a0","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index == 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"1cf2c218-2ed2-11e6-b91f-555bb3623604","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"1cf2e929-2ed2-11e6-b91f-3568f765ff7d","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(end2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"end2"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"1cf35e5a-2ed2-11e6-b91f-b74adb04f481","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[72],"tindex":"1cf35e5b-2ed2-11e6-b91f-992df1606a33","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl","sourcecode":"reuse == null"},"failures":[],"tindex":"1cf3856c-2ed2-11e6-b91f-7d5b3338302e","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) == 0) && ((-d) <= k)) && (k <= d)"},"failures":[],"tindex":"1cf3ac7d-2ed2-11e6-b91f-0fa056b79f52","method":{"position":"org.apache.commons.collections4.list.TransformedList:160","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if ((((toIndex % 2) == 0) && ((-fromIndex) <= toIndex)) && (k <= d)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = getList().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.TransformedList<E>(sub , org.apache.commons.collections4.Transformer<? super E, ? extends E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"fromIndex","delta":"toIndex","k":"toIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[73,74],"tindex":"1cf3ac7e-2ed2-11e6-b91f-8b6ca25f756c","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[75,76,77,78],"tindex":"1cf3d38f-2ed2-11e6-b91f-43fb2dcb3e69","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Byte) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[79],"tindex":"1cf3d390-2ed2-11e6-b91f-3fc50a39a55c","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            if (predicate1 == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n                    return onePredicate;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"1cf3faa1-2ed2-11e6-b91f-693189914571","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[122,123,124,49],"tindex":"1cf421b2-2ed2-11e6-b91f-f918f1564738","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[125],"tindex":"1cf448c3-2ed2-11e6-b91f-230d18e9c610","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[126],"tindex":"1cf448c4-2ed2-11e6-b91f-6779f6bb33a2","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[127],"tindex":"1cf46fd5-2ed2-11e6-b91f-29684fc2cd4b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"1cf496e6-2ed2-11e6-b91f-b918416ad6aa","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"1cf496e7-2ed2-11e6-b91f-93e96338147a","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[146],"tindex":"1cf4bdf8-2ed2-11e6-b91f-d3a961647307","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[147],"tindex":"1cf4bdf9-2ed2-11e6-b91f-e54a99238eb5","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"1cf4e50a-2ed2-11e6-b91f-21ae069b80a0","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"1cf50c1b-2ed2-11e6-b91f-bf9b9425e639","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"1cf50c1c-2ed2-11e6-b91f-fb6d3f729c85","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            if (predicate1 == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n                    return onePredicate;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"1cf50c1d-2ed2-11e6-b91f-3d820a38b18d","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1cf5332e-2ed2-11e6-b91f-611655798846","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"1cf55a3f-2ed2-11e6-b91f-dbd5ec7a105c","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"1cf55a40-2ed2-11e6-b91f-5bc91e3e0c1a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:879","type":"CtMethodImpl","sourcecode":"private void doRedBlackInsert(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> insertedNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (insertedNode == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = insertedNode;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(currentNode, dataElement);\n            while (((currentNode != null) && (currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]))) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(currentNode.getParent(dataElement), dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isRightChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateLeft(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                } else {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateRight(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateLeft(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()], dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertedNode"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[128],"tindex":"1cf5cf71-2ed2-11e6-b91f-176d6cb34716","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,175,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389],"tindex":"1cf5cf72-2ed2-11e6-b91f-c7e2471541d0","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity <= (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[390,391,392,128,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,70,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,71,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"tindex":"1cf5f683-2ed2-11e6-b91f-ed1d7694a72c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index <= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[477,478,479,480,481,482,483,484,485,486,487,488],"tindex":"1cf61d94-2ed2-11e6-b91f-b5bb3a7eb5ad","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[489,490],"tindex":"1cf644a5-2ed2-11e6-b91f-193c6338b41b","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (defaultClosure == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"defaultClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"tindex":"1cf644a6-2ed2-11e6-b91f-239a55b10679","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                        return tmpColl;\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[509,510,511],"tindex":"1cf66bb7-2ed2-11e6-b91f-d922331c13c6","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"1cf66bb8-2ed2-11e6-b91f-095449eb0e69","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if ((end < 0) || (index >= start)) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"start","index":"end"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"1cf66bb9-2ed2-11e6-b91f-8b54b84efa1f","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1cf692ca-2ed2-11e6-b91f-97b18ad2ed4b","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"1cf692cb-2ed2-11e6-b91f-e19750f4f2aa","method":{"position":"org.apache.commons.collections4.set.CompositeSet:367","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Set<E> set1, final java.util.Set<E> set2) {\n    if (set1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComposited(set1);\n            addComposited(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"1cf692cc-2ed2-11e6-b91f-6579ee860ce6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"1cf6b9dd-2ed2-11e6-b91f-e9978b56aaba","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(hashIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[512],"tindex":"1cf6b9de-2ed2-11e6-b91f-5530e344b6f7","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"1cf6e0ef-2ed2-11e6-b91f-8d0569a439b1","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (!(object == null ? object == null : obj1.equals(obj2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"object","obj1":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564],"tindex":"1cf6e0f0-2ed2-11e6-b91f-e348e21770b7","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"1cf70801-2ed2-11e6-b91f-277ec94502e3","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(hashIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"1cf72f12-2ed2-11e6-b91f-6911e4217962","method":{"position":"org.apache.commons.collections4.list.LazyList:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(toIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.LazyList<E>(sub , org.apache.commons.collections4.Factory<? extends E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"toIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[565],"tindex":"1cf72f13-2ed2-11e6-b91f-09af9d5e44e3","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[566,567],"tindex":"1cf72f14-2ed2-11e6-b91f-495d429604e7","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"1cf75625-2ed2-11e6-b91f-3592d22f9c08","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (iterator1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"1cf75626-2ed2-11e6-b91f-698eb53ed2fc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[568],"tindex":"1cf77d37-2ed2-11e6-b91f-0310e460b4b3","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        {\n            return list == null ? defaultList : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[],"tindex":"1cf77d38-2ed2-11e6-b91f-29f406f578f8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl","sourcecode":"((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[395,569,570,397,398,571,400,572,401,402,573,404,405,406,407,408,70,410,411,412,574,413,575,414,576,577,415,416,578,417,418,419,579,580,420,421,422,423,424,426,581,582,427],"tindex":"1cf77d39-2ed2-11e6-b91f-4b7a44abf354","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606],"tindex":"1cf7a44a-2ed2-11e6-b91f-4f3327d79271","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[],"tindex":"1cf7a44b-2ed2-11e6-b91f-f7f1673af146","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1cf7a44c-2ed2-11e6-b91f-03e0bea6597a","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                        return tmpColl;\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645],"tindex":"1cf7cb5d-2ed2-11e6-b91f-a7b0a170b80e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[646,128,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,86,87,89,90,91,94,96,99,100,104,105,106,107,108,109,118,724,725,726,727,728,729,730,731,732,733,734,735,736,737,178,180,185,194,195,200,201,203,204,205,206,208,211,214,215,219,220,221,222,223,224,233,234,235,255,256,261,262,264,265,266,269,272,275,276,280,281,282,283,284,285,294],"tindex":"1cf7cb5e-2ed2-11e6-b91f-65efab5ab614","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"1cf7f26f-2ed2-11e6-b91f-cb1fd9940aa6","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if ((index - index) > (index - index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"index","end2":"index","end1":"index","start2":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1cf7f270-2ed2-11e6-b91f-3b2ecc683231","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[151,738],"tindex":"1cf81981-2ed2-11e6-b91f-bf685c4527c2","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[739],"tindex":"1cf81982-2ed2-11e6-b91f-0b3ac5eed032","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[740,741,742],"tindex":"1cf81983-2ed2-11e6-b91f-3d81dfed6d95","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.setValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":62,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}