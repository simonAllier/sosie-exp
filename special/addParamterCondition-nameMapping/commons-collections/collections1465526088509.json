{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":226,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":298,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":316,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":410,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":145,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":69,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":336,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":408,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":104,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":315,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":413,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":0,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":122,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":178,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":239,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":2,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":351,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":181,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":317,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":349,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":330,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":195,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":253,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":339,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":219,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":134,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":345,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":365,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":101,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":275,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":158,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":397,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":302,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":171,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":373,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":416,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":183,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":147,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":382,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":396,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":348,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":215,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":291,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":417,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":85,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":346,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":127,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":378,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":287,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":185,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":120,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":311,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":376,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":280,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":18,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":268,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":63,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":74,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":76,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":220,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":142,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":384,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":105,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":221,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":64,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":340,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":326,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":260,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":213,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":160,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":224,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":234,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":277,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":329,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":7,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":67,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":55,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":233,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":231,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":341,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":135,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":125,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":228,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":230,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":381,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":22,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":284,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":363,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":247,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":319,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":370,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":153,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":386,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":209,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":71,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":279,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":236,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":1,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":401,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":254,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":112,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":174,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":132,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":87,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":6,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":332,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":398,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":16,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":297,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":163,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":343,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":276,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":40,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":265,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":392,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":288,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":106,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":203,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":420,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":97,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":272,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":331,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":402,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":99,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":266,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":3,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":151,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":269,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":308,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":237,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":13,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":184,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":121,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":252,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":259,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":177,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":214,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":197,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":23,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":361,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":405,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":109,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":283,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":129,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":192,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":130,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":15,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":393,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":325,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":68,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":394,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":194,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":257,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":409,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":333,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":273,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":123,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":258,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":201,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":313,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":267,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":377,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":225,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":293,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":368,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":246,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":321,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":198,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":387,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":318,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":36,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":35,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":53,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":327,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":353,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":338,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":199,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":427,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":375,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":306,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":72,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":422,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":369,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":46,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":119,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":118,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":115,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":385,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":117,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":116,"org.apache.commons.collections4.CollectionUtilsTest.isFull":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":110,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":294,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":352,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":95,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":235,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":261,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":240,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":249,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":300,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":80,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":250,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":367,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":79,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":251,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":414,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":218,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":62,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":78,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":154,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":156,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":391,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":407,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":263,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":49,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":25,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":425,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":323,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":403,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":103,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":358,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":238,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":100,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":366,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":180,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":264,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":383,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":90,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":418,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":357,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":337,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":138,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":355,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":278,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":96,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":200,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":196,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":66,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":31,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":379,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":426,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":124,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":128,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":399,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":20,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":27,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":419,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":354,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":292,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":28,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":404,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":380,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":290,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":216,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":244,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":412,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":162,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":296,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":241,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":86},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[0],"tindex":"e6aba0d8-2eb3-11e6-9815-23aa07d597b5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index == (-1)) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"e6ac6429-2eb3-11e6-9815-55f8bb6cda16","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e6ac8b3a-2eb3-11e6-9815-47c336dc00ac","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[],"tindex":"e6ac8b3b-2eb3-11e6-9815-e9736b944333","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value != null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[1],"tindex":"e6acb24c-2eb3-11e6-9815-4f192d652942","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"e6acd95d-2eb3-11e6-9815-23505e945651","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e6ad006e-2eb3-11e6-9815-01b3ea24d147","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e6ad006f-2eb3-11e6-9815-abb6c4f897a6","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[2],"tindex":"e6ad2780-2eb3-11e6-9815-dd85fa80d7f6","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[3],"tindex":"e6ad2781-2eb3-11e6-9815-21ccea208b1c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e6ad4e92-2eb3-11e6-9815-5ffab4baa740","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"e6ad4e93-2eb3-11e6-9815-5932ee163d7f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[],"tindex":"e6ad9cb4-2eb3-11e6-9815-899d2c76c7a5","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e6ad9cb5-2eb3-11e6-9815-498c95ae4a55","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e6adc3c6-2eb3-11e6-9815-01d854452bba","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"e6adc3c7-2eb3-11e6-9815-b1b2894563c0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"e6adead8-2eb3-11e6-9815-f3340b1d0256","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"e6ae11e9-2eb3-11e6-9815-0711c99221a5","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[],"tindex":"e6ae38fa-2eb3-11e6-9815-155583d29b97","method":{"position":"org.apache.commons.collections4.list.PredicatedList:137","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex > toIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.PredicatedList<E>(sub , org.apache.commons.collections4.Predicate<? super E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"toIndex","bound":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[74,75,76,77,78,79,80,81],"tindex":"e6ae38fb-2eb3-11e6-9815-ff63f334bfc1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[82],"tindex":"e6ae600c-2eb3-11e6-9815-253066355540","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        result |= remove(name);\n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"e6ae600d-2eb3-11e6-9815-5b3a694dfc99","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < index) {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n                    addNodeBefore(node, value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[100],"tindex":"e6ae871e-2eb3-11e6-9815-4bfadeb36040","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e6ae871f-2eb3-11e6-9815-994d7ee6006d","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (bitIndex == 0) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity <= (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[],"tindex":"e6ae8720-2eb3-11e6-9815-b59c481dd848","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index <= index) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    checkModCount();\n                    return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"e6aeae31-2eb3-11e6-9815-493c5d828645","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"e6aeae32-2eb3-11e6-9815-05cc417bd010","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"e6aed543-2eb3-11e6-9815-5f770b0cac38","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"e6aed544-2eb3-11e6-9815-29d54dc406d2","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (bitIndex == bitIndex) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"bitIndex","end":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[101],"tindex":"e6aed545-2eb3-11e6-9815-5b77eeac26cf","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[102],"tindex":"e6aefc56-2eb3-11e6-9815-c3b15f55b2a0","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[103],"tindex":"e6af2367-2eb3-11e6-9815-671dfcae1e10","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[104],"tindex":"e6af2368-2eb3-11e6-9815-f9d34f67ae17","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[105,106,107,108,109,110],"tindex":"e6af4a79-2eb3-11e6-9815-8b6ece5a387c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[111],"tindex":"e6af4a7a-2eb3-11e6-9815-279bbc5dcc8f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if ((t.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.Put<K, V>.putAll(t);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"e6af4a7b-2eb3-11e6-9815-eff19fbeb9a7","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 0) {\n        {\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"e6af718c-2eb3-11e6-9815-bbe5ce160e0f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put != null) {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"put"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"e6af718d-2eb3-11e6-9815-e3f088800991","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[112],"tindex":"e6af989e-2eb3-11e6-9815-3d90a2999489","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (c == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[113,114,115,116,117,118,119],"tindex":"e6af989f-2eb3-11e6-9815-a520dd738e36","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"e6af98a0-2eb3-11e6-9815-a553181794b1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index <= index) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    checkModCount();\n                    return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[120,121,122,123,124,125],"tindex":"e6afbfb1-2eb3-11e6-9815-093159fbaeda","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"e6afbfb2-2eb3-11e6-9815-95dc5b012b32","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,136,137,195,196,197,145,146,198,199,154,155],"tindex":"e6afe6c3-2eb3-11e6-9815-9968e0a2f5fb","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[],"tindex":"e6b00dd4-2eb3-11e6-9815-a50ab23ebda4","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if ((iterator != null) && (transform != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"iterator","transformer":"transform"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[200,201,202,203,204,205,206,207,134,208,209,210,211,212,213,214,215,189,216,217,218,219,220,190,221,222,223,224,225,226,227,228,229,230,231,232,233,191,234,235,192,236,237,238,239,240,241,242,243],"tindex":"e6b00dd5-2eb3-11e6-9815-93daec67d699","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e6b034e6-2eb3-11e6-9815-89574dd78072","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[244,244,245,246,246,247,248,249,250,251,252],"tindex":"e6b034e7-2eb3-11e6-9815-c95fcaea60f2","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e6b034e8-2eb3-11e6-9815-136274b9e8c4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        result |= remove(name);\n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[111],"tindex":"e6b034e9-2eb3-11e6-9815-cbbcc3a4d304","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtBinaryOperatorImpl","sourcecode":"(1 <= otherCount) && (otherCount <= myCount)"},"failures":[],"tindex":"e6b05bfa-2eb3-11e6-9815-410a6ea43022","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if ((1 <= index) && (otherCount <= index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"myCount":"index","otherCount":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[253,254,255],"tindex":"e6b0d12b-2eb3-11e6-9815-ad7d2f0f176a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"position == null"},"failures":[],"tindex":"e6b0f83c-2eb3-11e6-9815-a9ea097143f3","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[256],"tindex":"e6b0f83d-2eb3-11e6-9815-3f115efe4ab4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[257,258,259,260,261],"tindex":"e6b0f83e-2eb3-11e6-9815-cb1c66779319","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if (b instanceof java.util.Set<?>) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e6b0f83f-2eb3-11e6-9815-63a67c79446d","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"e6b11f50-2eb3-11e6-9815-9902c241aafe","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (!(object == null ? object == null : o1.equals(o2))) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"object","o2":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[],"tindex":"e6b14661-2eb3-11e6-9815-35958d55cb7b","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o instanceof java.lang.Byte) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,10,11,12,13,14,15,17,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,46,49,54,55,57,61,64,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],"tindex":"e6b14662-2eb3-11e6-9815-4deb6c519a0a","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtBinaryOperatorImpl","sourcecode":"retval > 0"},"failures":[],"tindex":"e6b16d73-2eb3-11e6-9815-633610e13277","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < index) {\n                {\n                    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n                    addNodeBefore(node, value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e6b16d74-2eb3-11e6-9815-e570664ba498","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":61,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}