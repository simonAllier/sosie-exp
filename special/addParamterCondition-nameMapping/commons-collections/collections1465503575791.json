{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":52,"org.apache.commons.collections4.CollectionUtilsTest.union":149,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":64,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":169,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":112,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":151,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":138,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":102,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":55,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":119,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":120,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":122,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":123,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":71,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":105,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":160,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":59,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":164,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":170,"org.apache.commons.collections4.list.TreeListTest.testRemove":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":96,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":40,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":41,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":155,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":42,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":81,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":83,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":140,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":141,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":82,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":66,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":78,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":84,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":60,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":116,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":130,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":144,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":115,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":113,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":24,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":114,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":163,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":126,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":34,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":145,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":36,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":128,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":158,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":12,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":129,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":13,"org.apache.commons.collections4.CollectionUtilsTest.select":146,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":109,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":171,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":167,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":26,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":94,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":93,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":148,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":100,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":89,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.CollectionUtilsTest.intersection":137,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":23,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":32,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":15,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":139,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":124,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":136,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":72,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":125,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":9,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":159,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":58,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":111,"org.apache.commons.collections4.map.CompositeMapTest.testPut":154,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":2,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":110,"org.apache.commons.collections4.map.CompositeMapTest.testGet":153,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":97,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":98,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":25,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":95,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":7,"org.apache.commons.collections4.set.CompositeSetTest.testContains":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":88,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":90,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":142,"org.apache.commons.collections4.list.TreeListTest.testBug35258":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":101,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":166,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":147,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":8,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":157,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":27,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":143,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":156,"org.apache.commons.collections4.ListUtilsTest.testSelect":161,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":21,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":152,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":108,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":39,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":133},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl","sourcecode":"(entry.after) != (header)"},"failures":[],"tindex":"7c0eaeda-2e7f-11e6-bc6e-194dc24b7a15","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != entry) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[0,1,2,3],"tindex":"7c0f993b-2e7f-11e6-bc6e-e1ef8acd0f02","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) == 0) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"7c0fc04c-2e7f-11e6-bc6e-b183b87e23ae","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[23],"tindex":"7c0fc04d-2e7f-11e6-bc6e-d7900412537c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"7c0fe75e-2e7f-11e6-bc6e-8916ffb8be7c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl","sourcecode":"(root) != null"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"7c100e6f-2e7f-11e6-bc6e-190e13cbba6c","method":{"position":"org.apache.commons.collections4.list.TreeList:709","type":"CtMethodImpl","sourcecode":"private int setOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final int newOffest) {\n    if (node != null) {\n        {\n            if (node == null) {\n                return 0;\n            } \n            final int int = getOffset(node);\n            node.int = newOffest;\n            return oldOffset;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl","sourcecode":"(item.isEmpty()) == false"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"7c100e70-2e7f-11e6-bc6e-5d64e081d582","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:349","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection) {\n    if ((compositeCollection.isEmpty()) == false) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"compositeCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[],"tindex":"7c103581-2e7f-11e6-bc6e-af30c5304152","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"nCopies"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[78,79,80,81,82,83,84,85,86,87],"tindex":"7c103582-2e7f-11e6-bc6e-91bb625e25a1","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[88],"tindex":"7c105c93-2e7f-11e6-bc6e-2f0db5d3e177","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"7c1083a4-2e7f-11e6-bc6e-0bcc1a68ce9d","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:116","type":"CtBinaryOperatorImpl","sourcecode":"nonNullComparator == null"},"failures":[],"tindex":"7c1083a5-2e7f-11e6-bc6e-79bd1ea3bd50","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nonNullComparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[89,90,91,92,93,94,95,96,97,98],"tindex":"7c10aab6-2e7f-11e6-bc6e-efd7f5e3ffed","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"7c10aab7-2e7f-11e6-bc6e-93658d141511","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Double) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[99],"tindex":"7c10d1c8-2e7f-11e6-bc6e-b3ef33174f69","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        {\n            if ((list.isEmpty()) && (list.isEmpty())) {\n                {\n                    return list == null ? defaultList : list;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"list","pendingInsertions":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7c10d1c9-2e7f-11e6-bc6e-fd87deb8e304","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[69,70,72,73,74,100,101,76,77,102,103,104,105,106,107,108,109],"tindex":"7c10f8da-2e7f-11e6-bc6e-f3edcdae7d65","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7c10f8db-2e7f-11e6-bc6e-375e5ce067fe","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[110,111],"tindex":"7c111fec-2e7f-11e6-bc6e-e71e10c12b82","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.right, p)"},"failures":[],"tindex":"7c127f7d-2e7f-11e6-bc6e-2d619d4d12ef","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(node, p)) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"node","right":"node"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtUnaryOperatorImpl","sourcecode":"!contains"},"failures":[],"tindex":"7c12a68e-2e7f-11e6-bc6e-4bef50fc88b0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (!forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contains":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"7c12cd9f-2e7f-11e6-bc6e-2ba103435384","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"7c1369e0-2e7f-11e6-bc6e-15190be7b789","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        {\n            if ((list.isEmpty()) && (list.isEmpty())) {\n                {\n                    return list == null ? defaultList : list;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[1,136,137,138],"tindex":"7c1369e1-2e7f-11e6-bc6e-95ec6ec097f6","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (a instanceof java.util.Set<?>) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[139,140,141,142,143],"tindex":"7c1390f2-2e7f-11e6-bc6e-4f618a9fc93c","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[144,145,0,1,136,146,147,2,148,149,137,150,3,138,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"7c1390f3-2e7f-11e6-bc6e-b9559d40c170","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj == null) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl","sourcecode":"index > (size)"},"failures":[],"tindex":"7c13b804-2e7f-11e6-bc6e-318b441e40ec","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[169,170,171],"tindex":"7c13b805-2e7f-11e6-bc6e-052d7fff1946","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl","sourcecode":"index > (size)"},"failures":[],"tindex":"7c13df16-2e7f-11e6-bc6e-5b423cb34220","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:470","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode > hashCode) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(org.apache.commons.collections4.map.AbstractReferenceMap.this , next , hashCode , key , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode","index":"hashCode"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":29,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}