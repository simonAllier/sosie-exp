{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":94,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":618,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":276,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":25,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":551,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":277,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":390,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":511,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":265,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":450,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":47,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":648,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":44,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":387,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":425,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":633,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":357,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":356,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":102,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":116,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":584,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":594,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":557,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":275,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":109,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":60,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":159,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":202,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":423,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":659,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":616,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":346,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":98,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":139,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":136,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":636,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":75,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":418,"org.apache.commons.collections4.CollectionUtilsTest.transform1":463,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":522,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":626,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":79,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":363,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":417,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":496,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":671,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":683,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":118,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":112,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":237,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":449,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":681,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":222,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":51,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":508,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":492,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":231,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":414,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":472,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":452,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":95,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":606,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":67,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":92,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":195,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":11,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":438,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":90,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":689,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":287,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":655,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":323,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":673,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":192,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":408,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":666,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":296,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":344,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":187,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":564,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":622,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":563,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":523,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":303,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":211,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":125,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":538,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":590,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":247,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":184,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":686,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":107,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":413,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":113,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":241,"org.apache.commons.collections4.list.TreeListTest.testRemove":203,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":128,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":446,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":620,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":212,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":99,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":333,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":621,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":464,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":582,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":34,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":410,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":465,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":507,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":173,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":111,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":246,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":309,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":45,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":632,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":324,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":690,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":457,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":586,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":393,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":569,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":421,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":431,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":290,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":428,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":226,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":553,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":468,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":274,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":7,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":476,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":360,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":536,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":199,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":35,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":451,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":628,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":170,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":430,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":693,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":21,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":272,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":312,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":658,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":529,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":629,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":319,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":432,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":183,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":535,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":534,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":651,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":654,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":429,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":143,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":129,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":487,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":670,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":88,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":400,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":546,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":424,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":497,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":230,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":426,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":15,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":6,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":482,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":335,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":562,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":537,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":210,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":415,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":285,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":399,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":604,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":386,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":311,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":489,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":596,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":36,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":3,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":338,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":407,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":642,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":201,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":504,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":281,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":295,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":474,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":550,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":280,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":262,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":585,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":500,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":692,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":234,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":653,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":466,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":249,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":371,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":515,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":62,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":68,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":625,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":603,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":518,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":235,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":485,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":308,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":495,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":646,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":158,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":342,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":57,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":63,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":155,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":398,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":555,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":286,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":278,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":215,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":392,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":435,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":650,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":328,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":255,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":348,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":20,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":436,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":206,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":336,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":147,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":298,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":38,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":611,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":270,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":97,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":545,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":526,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":593,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":378,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":580,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":175,"org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList":643,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":313,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":10,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":664,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":471,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":525,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":59,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":337,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":261,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":383,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":612,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":574,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":251,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":409,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":316,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":576,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":172,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":370,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":635,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":599,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":238,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":169,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":351,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":142,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":375,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":163,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":687,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":685,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":358,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":401,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":559,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":165,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":672,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":279,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":114,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":218,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":615,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":688,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":640,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":254,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":229,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":679,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":678,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":677,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":674,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":256,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":676,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":460,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":304,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":404,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":4,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":684,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":547,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":228,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":630,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":330,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":420,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":219,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":144,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":252,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":138,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":339,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":455,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":382,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":28,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":71,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":571,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":365,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":42,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":473,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":314,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":292,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":362,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":502,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":597,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":83,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":442,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":456,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":528,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":598,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":161,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":467,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":205,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":355,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":443,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":444,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":264,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":0,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":533,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":647,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":470},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"56d936ad-3e45-11e6-b92f-f9cd71581e70","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1],"tindex":"56d984ce-3e45-11e6-b92f-3f3014f4ab86","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"56d984cf-3e45-11e6-b92f-639c6fdbfd99","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[2],"tindex":"56d9abe0-3e45-11e6-b92f-678b80af201e","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"56d9abe1-3e45-11e6-b92f-8f11ea2dd591","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[3,4,5],"tindex":"56d9abe2-3e45-11e6-b92f-ef82261145ef","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"56d9abe3-3e45-11e6-b92f-8b1cac145a6e","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[6],"tindex":"56d9d2f4-3e45-11e6-b92f-afe7bcdc027d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[7,8,9],"tindex":"56d9d2f5-3e45-11e6-b92f-190c86318ec0","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"56d9d2f6-3e45-11e6-b92f-0dc2369a8645","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"56d9d2f7-3e45-11e6-b92f-ff432c3e9cc8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[39,40,41,42,43],"tindex":"56d9fa08-3e45-11e6-b92f-f91123c25f5d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"56da2119-3e45-11e6-b92f-c5e0eed1875d","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[44,45],"tindex":"56da211a-3e45-11e6-b92f-03e7bc413870","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[46,47,48,49,50],"tindex":"56da482b-3e45-11e6-b92f-13696cc757b6","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[51],"tindex":"56da482c-3e45-11e6-b92f-1d8b8c46a55a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if (index > 0) {\n                {\n                    if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n                    if (m.containsKey(key)) {\n                        final V V = m.remove(key);\n                        final int int = java.util.List<K>.indexOf(key);\n                        java.util.List<K>.remove(pos);\n                        if (pos < index) {\n                            index--;\n                        } \n                        java.util.List<K>.add(index, key);\n                        m.put(key, value);\n                        return result;\n                    } else {\n                        java.util.List<K>.add(index, key);\n                        m.put(key, value);\n                        return null;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"56da482d-3e45-11e6-b92f-6bf5477a43f5","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    array[index] = E;\n                    if ((getLeftSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    if ((getRightSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"56da482e-3e45-11e6-b92f-d517806aea85","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"56da6f3f-3e45-11e6-b92f-51cb1a8d2008","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"56da6f40-3e45-11e6-b92f-97fa9508f94e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"56da6f41-3e45-11e6-b92f-1f3143a78f6c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"56da6f42-3e45-11e6-b92f-431412cf1ac1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[179],"tindex":"56da9553-3e45-11e6-b92f-2f56b68244b1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[180],"tindex":"56da9554-3e45-11e6-b92f-699e25eb82e4","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"56da9555-3e45-11e6-b92f-7d68615b5f84","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[181,182],"tindex":"56da9556-3e45-11e6-b92f-9b46129cbfa9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"56da9557-3e45-11e6-b92f-6fd9927d175e","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"56dabc68-3e45-11e6-b92f-b344e138ab95","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"56dabc69-3e45-11e6-b92f-9d695c7da57f","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[201],"tindex":"56dabc6a-3e45-11e6-b92f-f9ced1b30485","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.List<?>"},"failures":[202],"tindex":"56dabc6b-3e45-11e6-b92f-836c98ed16b5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (iterable instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[203,204,205,206,207,208,209,210,211,212],"tindex":"56dabc6c-3e45-11e6-b92f-d127388ca873","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[213],"tindex":"56dae37d-3e45-11e6-b92f-e72d7b2703c1","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"56dae37e-3e45-11e6-b92f-2d3c7b20bc80","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[214],"tindex":"56dae37f-3e45-11e6-b92f-db635f9e3406","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[215,216,217,218],"tindex":"56dae380-3e45-11e6-b92f-75fb71c89f0b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n                    } \n                    if (value == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 2 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 1 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                        }\n                    } else {\n                        switch (int) {\n                            case 3 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 2 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 1 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                        }\n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[219],"tindex":"56db0a91-3e45-11e6-b92f-37901cfdb052","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360],"tindex":"56db0a92-3e45-11e6-b92f-8fa3a8a0bda1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[361],"tindex":"56db0a93-3e45-11e6-b92f-05a558fa3082","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"56db31a4-3e45-11e6-b92f-c3d6d146860f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"56db31a5-3e45-11e6-b92f-23f5effdd06a","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[362],"tindex":"56db31a6-3e45-11e6-b92f-abae9177ff91","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((b == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[363,364,180],"tindex":"56db31a7-3e45-11e6-b92f-5b57e2f9b59e","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[365],"tindex":"56db31a8-3e45-11e6-b92f-17c333f6ca8f","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[366],"tindex":"56db31a9-3e45-11e6-b92f-2d0333ec89e9","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"56db58ba-3e45-11e6-b92f-6b4fd1c7bd32","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map != null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[367,280,368,326],"tindex":"56db58bb-3e45-11e6-b92f-cbc253c2e16c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[369],"tindex":"56db58bc-3e45-11e6-b92f-81bdb2b10d69","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"56db58bd-3e45-11e6-b92f-777be78f0a4e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"56db7fce-3e45-11e6-b92f-95febc9880a5","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[370],"tindex":"56db7fcf-3e45-11e6-b92f-4103b641f9b0","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404],"tindex":"56db7fd0-3e45-11e6-b92f-7bce0c8c4b57","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"tindex":"56db7fd1-3e45-11e6-b92f-1fa81a4ef0f4","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[434],"tindex":"56db7fd2-3e45-11e6-b92f-297b4ea3046b","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[435,436,437,438,439,440,441,442,443,444],"tindex":"56dba6e3-3e45-11e6-b92f-c9c0a2a9e2b1","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"56dba6e4-3e45-11e6-b92f-bb784829bd82","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    array[index] = E;\n                    if ((getLeftSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                    if ((getRightSubTree()) != null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"56dba6e5-3e45-11e6-b92f-1d7d2339eb8f","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"56dbcdf6-3e45-11e6-b92f-6dde86148e57","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[219],"tindex":"56dbcdf7-3e45-11e6-b92f-8d2b2e1a897b","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"56dbcdf8-3e45-11e6-b92f-2b4a1153a5bc","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"56dbcdf9-3e45-11e6-b92f-3fb22a146706","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[445],"tindex":"56dbcdfa-3e45-11e6-b92f-cf07192c8b17","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[446],"tindex":"56dbcdfb-3e45-11e6-b92f-f92797ff4195","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"56dbf50c-3e45-11e6-b92f-730966a186a9","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[447],"tindex":"56dbf50d-3e45-11e6-b92f-a5e5321d5d15","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"56dbf50e-3e45-11e6-b92f-d93f39b29efe","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"56dbf50f-3e45-11e6-b92f-59aaa7cddae6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if (index > 0) {\n                {\n                    if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n                    if (m.containsKey(key)) {\n                        final V V = m.remove(key);\n                        final int int = java.util.List<K>.indexOf(key);\n                        java.util.List<K>.remove(pos);\n                        if (pos < index) {\n                            index--;\n                        } \n                        java.util.List<K>.add(index, key);\n                        m.put(key, value);\n                        return result;\n                    } else {\n                        java.util.List<K>.add(index, key);\n                        m.put(key, value);\n                        return null;\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"56dc1c20-3e45-11e6-b92f-27f5d92e7951","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"56dc1c21-3e45-11e6-b92f-15f3c118f977","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map != null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"56dc1c22-3e45-11e6-b92f-1102a7ffdfa5","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[463],"tindex":"56dc1c23-3e45-11e6-b92f-c35858130ab6","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[464,465],"tindex":"56dc1c24-3e45-11e6-b92f-bdfb50e08b65","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"56dc1c25-3e45-11e6-b92f-7903b6e97266","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,40,41,42,43,518,519,217,218,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591],"tindex":"56dc4336-3e45-11e6-b92f-3327f1f5876d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                    entry.java.lang.Object = null;\n                    entry.java.lang.Object = null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[592,593,594],"tindex":"56dc4337-3e45-11e6-b92f-4f603ecc80b7","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (b.size())) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[595,181,182,596,573,574,575,576,577,597],"tindex":"56dc4338-3e45-11e6-b92f-a5b47d54ce0c","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"56dc4339-3e45-11e6-b92f-259189e65635","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"56dc6a4a-3e45-11e6-b92f-e77f59f5760f","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"56dc6a4b-3e45-11e6-b92f-97bb5fc1fc7b","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[598,599,600,601,602,370,603,604,605,606,607],"tindex":"56dc6a4c-3e45-11e6-b92f-9ba7610f5332","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[181],"tindex":"56dc6a4d-3e45-11e6-b92f-bfde8f2a3995","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[608],"tindex":"56dc915e-3e45-11e6-b92f-41bd87bcfd79","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[609,559,560,561,610,611,612,613,614,615,616,617,618,562,619,620,621,563,564,622,565,566,567,568,569,570,571,572],"tindex":"56dc915f-3e45-11e6-b92f-e750f4bfc377","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[137,136,139,140,141,138,145,146,147,148,142,143,144,149,150,151,152,153,154,155,156,157,158,623,159,624,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,625,626,627,628,629,630,631,632],"tindex":"56dc9160-3e45-11e6-b92f-d910e0fe8d1a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"56dc9161-3e45-11e6-b92f-5b6ff3a6b366","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n                    } \n                    if (value == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 2 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 1 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                        }\n                    } else {\n                        switch (int) {\n                            case 3 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 2 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 1 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                        }\n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"56dcb872-3e45-11e6-b92f-271afb6a2852","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[371,372,374,377,380,633,381,384,385,634,635],"tindex":"56dcb873-3e45-11e6-b92f-cbcdc904f2a7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"56dcb874-3e45-11e6-b92f-7323cbc41bad","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map != null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[636,637],"tindex":"56dcb875-3e45-11e6-b92f-bf4ab5720031","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[638],"tindex":"56dcb876-3e45-11e6-b92f-cd7700d497aa","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[639,640],"tindex":"56dcdf87-3e45-11e6-b92f-cd4176a64b86","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[641],"tindex":"56dcdf88-3e45-11e6-b92f-53980f8a0528","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"56dcdf89-3e45-11e6-b92f-db3261924452","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                    entry.java.lang.Object = null;\n                    entry.java.lang.Object = null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[468,473],"tindex":"56dcdf8a-3e45-11e6-b92f-5d23be91bc5f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[9],"tindex":"56dcdf8b-3e45-11e6-b92f-5bdcf86ae59d","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[642,643,644,645,646,647],"tindex":"56dd069c-3e45-11e6-b92f-0596b6d41be1","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"56dd069d-3e45-11e6-b92f-db5356dac119","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,44,692],"tindex":"56dd069e-3e45-11e6-b92f-9b9809fa093b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"56dd2daf-3e45-11e6-b92f-4758a12d2565","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(lengthInBits)) {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[693],"tindex":"56dd2db0-3e45-11e6-b92f-cf557de6af95","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234880971/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}