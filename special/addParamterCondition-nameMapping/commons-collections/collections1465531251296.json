{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":443,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":74,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":439,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":387,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":316,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":185,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":514,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":513,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":252,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":253,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":255,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":109,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":146,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":254,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":399,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":191,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":415,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":442,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":42,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":220,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":139,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":62,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":507,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":21,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":79,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":369,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":48,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":447,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":47,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":356,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":461,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":382,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":136,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":188,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":276,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":166,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":504,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":37,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":343,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":409,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":364,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":238,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":209,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":210,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":368,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":10,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":208,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":367,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":293,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":468,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":164,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":403,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":304,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":300,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":325,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":6,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":27,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":357,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":249,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":469,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":225,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":456,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":311,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":452,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":246,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":262,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":480,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":149,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":224,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":342,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":458,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":179,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":358,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":75,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":350,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":501,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":321,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":340,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":296,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":465,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":135,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":419,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":59,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":323,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":176,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":327,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":89,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":126,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":413,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":35,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":104,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":328,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":487,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":239,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":87,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":40,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":489,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":361,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":432,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":1,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":140,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":213,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":429,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":485,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":234,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":248,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":7,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":195,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":106,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":51,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":347,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":381,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":148,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":372,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":332,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":363,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":4,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":398,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":275,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":483,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":405,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":98,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":124,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":510,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":115,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":259,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":88,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":23,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":67,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":338,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":156,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":329,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":427,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":305,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":467,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":433,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":205,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":453,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":95,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":481,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":376,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":322,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":420,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":22,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":77,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":474,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":344,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":499,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":100,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":125,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":203,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":261,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":53,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":402,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":55,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":61,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":375,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":495,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":15,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":265,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":211,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":145,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":45,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":144,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":450,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":202,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":184,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":308,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":385,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":354,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":131,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":312,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":482,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":32,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":457,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":446,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":389,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":183,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":449,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":339,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":421,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":175,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":70,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":348,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":142,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":310,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":245,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":407,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":484,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":518,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":85,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":472,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":19,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":260,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":201,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":451,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":444,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":488,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":315,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":426,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":341,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":505,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":9,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":65,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":170,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":496,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":460,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":92,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":101,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":127,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":435,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":500,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":408,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":473,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":20,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":223,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":158,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":355,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":412,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":497,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":186,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":105,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":279,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":383,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":390,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":289,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":269,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":422,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":476,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":455,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":346,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":294,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":178,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":243,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":287,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":222,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":218,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":268,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":291,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":167,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":336,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":147,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":194,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":236,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":240,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":204,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":267,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":189,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":380,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":295,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":29,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":99,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":353,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":417,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":393,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":519,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":169,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":334,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":401,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":517,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":228,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":227,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":319,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":430,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":112,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":335,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":466,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":68,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":459,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":230,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":206,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":440,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":71,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":138,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":490,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":192,"org.apache.commons.collections4.map.LRUMapTest.testLRU":117,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":351,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":423,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":498,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":181,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":78,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":80,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":31,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":199,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":360,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":475,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":111,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":509,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":121,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":190,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":373,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":464,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":388,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":463,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":212,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":247,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":324,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":154,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":123,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":250,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":82,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":163,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":280,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":116,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":14,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":512,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":143,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":386,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":5,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":404},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[0],"tindex":"ebf3720c-2ebf-11e6-bf94-91e1608000e5","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"ebf45c6d-2ebf-11e6-bf94-ebc5d4ebd41e","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ebf4aa8e-2ebf-11e6-bf94-136c8e2bf486","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[93],"tindex":"ebf4d19f-2ebf-11e6-bf94-e7cf13c3a996","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[94],"tindex":"ebf4d1a0-2ebf-11e6-bf94-d54c07e5c7d7","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[95],"tindex":"ebf60921-2ebf-11e6-bf94-e795ab43a155","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"ebf60922-2ebf-11e6-bf94-977895ea4fd2","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"ebf63033-2ebf-11e6-bf94-3d3e748741b4","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:331","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeRemoved(node);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[96,97,98,99],"tindex":"ebf63034-2ebf-11e6-bf94-03c5b2178d7f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"ebf65745-2ebf-11e6-bf94-8fc914aa7f3f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (!(value instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"ebf65746-2ebf-11e6-bf94-95ce2cf55f2a","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[100,101,102,103,104,105,106,107,108],"tindex":"ebf67e57-2ebf-11e6-bf94-9d72ca724d57","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[109],"tindex":"ebf67e58-2ebf-11e6-bf94-1358931d528c","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.List<?>"},"failures":[110],"tindex":"ebf67e59-2ebf-11e6-bf94-5b1c16895c4d","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ebf6a56a-2ebf-11e6-bf94-a9a03375c6e6","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[111],"tindex":"ebf6a56b-2ebf-11e6-bf94-516e324f890f","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"ebf6cc7c-2ebf-11e6-bf94-17f2e4b6c928","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (defaultValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ebf6cc7d-2ebf-11e6-bf94-35a5c9bd351f","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"ebf6cc7e-2ebf-11e6-bf94-b56f6b5b6e00","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[],"tindex":"ebf6cc7f-2ebf-11e6-bf94-176313702d9a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[112,113,114,27,115,116],"tindex":"ebf6f390-2ebf-11e6-bf94-7b4202c14160","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[117,118,119,120,121,122,123],"tindex":"ebf7ddf1-2ebf-11e6-bf94-1b2fd0f8bd4f","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,94,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"ebf82c12-2ebf-11e6-bf94-1f25682b13ed","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == index) {\n        {\n            if (index == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(index);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[208,209,210,211,212,213],"tindex":"ebf82c13-2ebf-11e6-bf94-cd154a9d8f20","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (null != key) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[214,215,216,217],"tindex":"ebf85324-2ebf-11e6-bf94-73826afbab48","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,109,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"tindex":"ebf85325-2ebf-11e6-bf94-215d6eb0437f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"tindex":"ebf87a36-2ebf-11e6-bf94-d115102d4971","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (null == key) {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[302,303],"tindex":"ebf87a37-2ebf-11e6-bf94-dbc2267b02f5","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (a.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == (wrappedIteratorIndex)"},"failures":[304,305,125,126,306,127],"tindex":"ebf8a148-2ebf-11e6-bf94-9d4b4e6597cd","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[307,308],"tindex":"ebf8a149-2ebf-11e6-bf94-119898ab7738","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"ebf8c85a-2ebf-11e6-bf94-1d09568b40f1","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == index) {\n        {\n            if (index == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().get(index);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"ebf8c85b-2ebf-11e6-bf94-11d317c727ea","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl","sourcecode":"((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[309,310,12,311,312,313,28,314,315],"tindex":"ebf8c85c-2ebf-11e6-bf94-0be51035478b","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (((((count % count) != 0) || ((count % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((count % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((count % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"count","lengthInBits":"count","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"count","otherOffsetInBits":"count","otherLengthInBits":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[316],"tindex":"ebf8ef6d-2ebf-11e6-bf94-55c68ebc0850","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"ebf8ef6e-2ebf-11e6-bf94-db7d0f81dee1","method":{"position":"org.apache.commons.collections4.list.TransformedList:160","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex == (-1)) {\n        {\n            final java.util.List<E> java.util.List<E> = getList().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.TransformedList<E>(sub , org.apache.commons.collections4.Transformer<? super E, ? extends E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"toIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtBinaryOperatorImpl","sourcecode":"it != null"},"failures":[],"tindex":"ebf8ef6f-2ebf-11e6-bf94-dfb3ad3dd58b","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator != null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1117","type":"CtInvocationImpl","sourcecode":"entry.isEmpty()"},"failures":[],"tindex":"ebf8ef70-2ebf-11e6-bf94-bb78f3d159a6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"h"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[317,318,319,320,321,322,3,12,323,324,325,326,327,328,19,28],"tindex":"ebf91681-2ebf-11e6-bf94-fb5e20050d95","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"object","position2":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtBinaryOperatorImpl","sourcecode":"entry == (header)"},"failures":[],"tindex":"ebf91682-2ebf-11e6-bf94-49b77a76d52e","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == entry) {\n        {\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[329,330,331,332,333,334,335,310,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,4,5,6,7,8,9,10,11,12,13,14,15,16,17,354,355,356,357,358,359,360,361,362,311,363,364,365,366,367,368,369,370,371,372,373,374,375,376,313,377,378,379,380,381],"tindex":"ebf91683-2ebf-11e6-bf94-fbd7b6676631","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515],"tindex":"ebf93d94-2ebf-11e6-bf94-734b295a4441","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"ebf93d95-2ebf-11e6-bf94-3b3149f612e7","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[112],"tindex":"ebf964a6-2ebf-11e6-bf94-61b571a692a0","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[],"tindex":"ebfa27f7-2ebf-11e6-bf94-c73a1e30b3e8","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"ebfa7618-2ebf-11e6-bf94-6bf328fdd805","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"ebfa9d29-2ebf-11e6-bf94-0bee2c89f713","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index >= index) {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"ebfa9d2a-2ebf-11e6-bf94-f1d1d4f2cb56","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[516,517,518],"tindex":"ebfa9d2b-2ebf-11e6-bf94-0fa8c6fadd88","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[],"tindex":"ebfac43c-2ebf-11e6-bf94-75f50eeb10b3","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"ebfac43d-2ebf-11e6-bf94-077753e06599","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"ebfaeb4e-2ebf-11e6-bf94-4b9ca727e53f","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[112],"tindex":"ebfb125f-2ebf-11e6-bf94-b3a2351479c1","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"ebfb6080-2ebf-11e6-bf94-81cb66957059","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"ebfbfcc1-2ebf-11e6-bf94-3fa0953502c1","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"ebfbfcc2-2ebf-11e6-bf94-a3a6bab485fb","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:128","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"ebfbfcc3-2ebf-11e6-bf94-d9ac47b13d16","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[112],"tindex":"ebfc23d4-2ebf-11e6-bf94-1989463a2bb2","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"ebfc23d5-2ebf-11e6-bf94-f13ce0a91a04","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[519],"tindex":"ebfc23d6-2ebf-11e6-bf94-bf0a0d342e60","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl","sourcecode":"(x.getLeft(dataElement)) != null"},"failures":[],"tindex":"ebfc23d7-2ebf-11e6-bf94-ed8f19cb0cd8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((y.getLeft(dataElement)) != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"y","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":60,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}