{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":258,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":609,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":610,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsSelfHashCode":243,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":401,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":711,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":608,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":606,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":154,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":224,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":215,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":140,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":268,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":512,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":717,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":498,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":185,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":436,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":313,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":378,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":552,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":750,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":615,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.ListUtilsTest.testLazyList":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":262,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":583,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":302,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":300,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":632,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":772,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":656,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":10,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":487,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":691,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":136,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":86,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":293,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":592,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":428,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":560,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":209,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":572,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":785,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":2,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":85,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":276,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":746,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":671,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":269,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":532,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":724,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":485,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":11,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":351,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":472,"org.apache.commons.collections4.map.CompositeMapTest.testPut":716,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":315,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":779,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":757,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":206,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":348,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":337,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":410,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":415,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":29,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":673,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":332,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":288,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":596,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":597,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":722,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":153,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":291,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":684,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":26,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":624,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":92,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":713,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":679,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":60,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":275,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":777,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":522,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":235,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":105,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":144,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":49,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":373,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":192,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":760,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":77,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":130,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":528,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":484,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":690,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":756,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":304,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":151,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":652,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":696,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":588,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":8,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":133,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":664,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":361,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":621,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":255,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":527,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":672,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":178,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":323,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":551,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":545,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":524,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":460,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":678,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":748,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":429,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":25,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":540,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":359,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":252,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":697,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":343,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":525,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":599,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":103,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":600,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":435,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":598,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":365,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":666,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":738,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":754,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":371,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":481,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":775,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":104,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":397,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":790,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":414,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":745,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":544,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":338,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":497,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":169,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":643,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":685,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":83,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":612,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":125,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":406,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":709,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":761,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":554,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":55,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":164,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":189,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":458,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":409,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":404,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":143,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":366,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":541,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":635,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":40,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":382,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":175,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":261,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":508,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":385,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":492,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":689,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":356,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":582,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":177,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":558,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":580,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":4,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalFullCollectionExists":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":162,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":663,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":661,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":449,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":377,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":569,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":778,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":327,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":648,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":392,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":549,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":513,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":530,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":535,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":576,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":589,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":574,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":321,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":547,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":70,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":516,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":526,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":755,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":354,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":568,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":566,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":502,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":669,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":350,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":116,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":339,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":360,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":155,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":129,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":376,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":491,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":18,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":198,"org.apache.commons.collections4.map.LRUMapTest.testLRU":647,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":683,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":758,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":476,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSimpleSerialization":241,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":604,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":231,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":66,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":705,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":358,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":503,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":774,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":662,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":159,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":61,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":453,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":110,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":362,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":587,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":141,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":271,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":357,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":403,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":686,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":75,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":585,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":749,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":539,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":776,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":50,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":629,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":633,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":769,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":280,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":586,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":741,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":345,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":400,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":618,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":237,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":264,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":434,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":677,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":593,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":475,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":391,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":676,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":213,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":142,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":91,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":227,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":171,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":335,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":349,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":433,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":309,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":383,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":490,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":355,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":625,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":282,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":13,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":570,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":442,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":763,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":90,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":712,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":506,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":732,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":256,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":342,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":623,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":218,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":753,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":665,"org.apache.commons.collections4.map.CompositeMapTest.testGet":715,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":195,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":483,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":254,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":707,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":714,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":725,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":131,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":466,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":95,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":681,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":352,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":702,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":519,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":641,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":762,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":199,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":432,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":372,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":562,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":556,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":386,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":499,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":421,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":452,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":620,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":170,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":281,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":575,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":603,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":272,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":455,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":277,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":780,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":128,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":148,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":710,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":265,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":379,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":340,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":550,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":628,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":375,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":782,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":67,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":202,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":287,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":286,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCanonicalEmptyCollectionExists":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":285,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":699,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":17,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":221,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":619,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":470,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":742,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":469,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":468,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":126,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":5,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":688,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":464,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":68,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":336,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":51,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":412,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":369,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":46,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":509,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":557,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":263,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":444,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":394,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":726,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":727,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":188,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":751,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":494,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":767,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":216,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":423,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":740,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":644,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":411,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":367,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":682,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":292,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":101,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":719,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":134,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":418,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":674,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":440,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":402,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":784,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":463,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":462,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":184,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":461,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":270,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":430,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":408,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":15,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":445,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":510,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":642,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":183,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":446,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":413,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":407,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":204,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":538,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":316,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":34,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":770,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":431,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":157,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":720,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":473,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":739,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":424,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":518,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":363,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":626,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":102,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":210,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":789,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":773,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":783,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":645,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":650,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":443,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":6,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":242,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":637,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":511,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":467,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":658,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":660,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":659,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":675,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":299,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":743,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":416,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":529,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":229,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":53,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":236,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":119,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":244,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":488,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":138,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":303,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":437,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":555,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":523,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":205,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":496,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":181,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":384,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":39,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":708,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":115,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":614,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":217,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":736,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":744,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":489,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":787,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":186,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":318,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":454,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":305,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":605,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":638,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":733,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":735,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":734,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":517,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":595,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":594,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":80,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":344,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":98,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":232,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":447,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":364,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":703,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":561,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":278,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":577,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":747,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":607,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":670,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":425,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":786,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":563,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":565,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":771,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":3,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":279,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":591,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":573,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":398,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":480,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":307,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":781,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":301,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":668,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":57,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":172,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":655,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":174,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":246,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":200,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":700,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":88,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":194,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":581,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":41,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":729,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":653,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":420,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":132,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":346,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":765,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":759,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":145,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":521,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":493,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":706,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":341,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":28},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"26e44a1a-2ec1-11e6-b691-37f1d334a9e4","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"26e5347b-2ec1-11e6-b691-3d287460fbdd","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[181,182],"tindex":"26e55b8c-2ec1-11e6-b691-817d09e482b6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"26e5829d-2ec1-11e6-b691-bfa34bf73768","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"26e5a9ae-2ec1-11e6-b691-519f290e6552","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[183,184,185,186,187,188,189,190,191,192],"tindex":"26e5a9af-2ec1-11e6-b691-7bdaad4c524c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[193],"tindex":"26e5d0c0-2ec1-11e6-b691-8936f012af46","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"26e5f7d1-2ec1-11e6-b691-6581ae6eed5a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"26e5f7d2-2ec1-11e6-b691-67ba326347b3","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[194],"tindex":"26e61ee3-2ec1-11e6-b691-d9bcd214e437","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"26e75764-2ec1-11e6-b691-6397c96c2b12","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"26e77e75-2ec1-11e6-b691-cfd90d95787f","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[195],"tindex":"26e77e76-2ec1-11e6-b691-1b73766fc465","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[196,197],"tindex":"26e7a587-2ec1-11e6-b691-dd0ab7697bac","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[198,199,200,201],"tindex":"26e7a588-2ec1-11e6-b691-0f5db06d4d98","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = java.util.List<K>.indexOf(key);\n                    if (index > 0) {\n                        return java.util.List<K>.get((index - 1));\n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[202,203,204,205,206,207,208,209,210,211,212,213,143],"tindex":"26e7a589-2ec1-11e6-b691-cd517504caaa","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[214],"tindex":"26e7cc9a-2ec1-11e6-b691-452c66d2d25f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[215,216,217,218],"tindex":"26e7cc9b-2ec1-11e6-b691-ade867c6fd55","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[219],"tindex":"26e7f3ac-2ec1-11e6-b691-93c9aa6fe230","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[220,221,177,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"26e81abd-2ec1-11e6-b691-9779e5e75969","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"26e81abe-2ec1-11e6-b691-65373688037f","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[245],"tindex":"26e841cf-2ec1-11e6-b691-d13dcf6c1406","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[246],"tindex":"26e841d0-2ec1-11e6-b691-3dc5b5adb6b7","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,181,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,164,312,313,158,159,314,160,161,162,315,163,316,317,318,319,320,321,322,182,323,324,325,326,327,328,329,330,331,332,333],"tindex":"26e841d1-2ec1-11e6-b691-579cd6930e8c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"26e868e2-2ec1-11e6-b691-b7ea646aacfe","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[334],"tindex":"26e868e3-2ec1-11e6-b691-eb5c18707a0c","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"26e88ff4-2ec1-11e6-b691-d1d12fc433ef","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[335,336,337],"tindex":"26e88ff5-2ec1-11e6-b691-e188a5dd6230","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[338,339,340,341,120,342,343,344,345,132,346,347,348,349,350,351,352,144,353,354,355,356,357,358,359,156],"tindex":"26e8b706-2ec1-11e6-b691-9727cfc528ea","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"26e8b707-2ec1-11e6-b691-37961c6220f9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"26e8de18-2ec1-11e6-b691-f1eb4f1071ab","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[360,361],"tindex":"26e8de19-2ec1-11e6-b691-6fba23d17cb4","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[362,363],"tindex":"26e8de1a-2ec1-11e6-b691-8d89e20b1422","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[255],"tindex":"26e9052b-2ec1-11e6-b691-75fe4e8ce7dd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[364,365],"tindex":"26e9052c-2ec1-11e6-b691-096975771195","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().listIterator(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"26e92c3d-2ec1-11e6-b691-5944e0d538fa","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().listIterator(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"26e92c3e-2ec1-11e6-b691-6b4a7ad2c2c2","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"26e92c3f-2ec1-11e6-b691-5bce222f05e4","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424],"tindex":"26e95350-2ec1-11e6-b691-c53a633496c8","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"26e95351-2ec1-11e6-b691-b1c848e423b5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"26e97a62-2ec1-11e6-b691-1b00dd11a6ab","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"tindex":"26e9c883-2ec1-11e6-b691-cd31ab388454","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    key = convertKey(key);\n                    final int int = hash(key);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                            return entry.getValue();\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"26e9ef94-2ec1-11e6-b691-73be01cc897d","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[440],"tindex":"26e9ef95-2ec1-11e6-b691-995f895d325b","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"26ea16a6-2ec1-11e6-b691-236a34abf82d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                {\n                    key = convertKey(key);\n                    final int int = hash(key);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                            return entry.getValue();\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                    return null;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"26ea16a7-2ec1-11e6-b691-452047739881","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"26ea3db8-2ec1-11e6-b691-43e96d88fac0","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[247,248,249,250,441,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,181,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,164,312,313,158,159,314,160,161,162,315,163,316,317,318,319,320,321,322,182,323,324,325,326,327,328,329,330,331,332,333],"tindex":"26ea3db9-2ec1-11e6-b691-573ee4bc4c3a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"26ea64ca-2ec1-11e6-b691-6b3ca0ea286b","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[442,443,444,445,446],"tindex":"26ea8bdb-2ec1-11e6-b691-471f36516dd0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"26ea8bdc-2ec1-11e6-b691-994e72adc136","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[447,448,449,450,451,452,453,454],"tindex":"26eab2ed-2ec1-11e6-b691-919626a972cd","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[455],"tindex":"26eab2ee-2ec1-11e6-b691-7931110a2ab4","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"26ead9ff-2ec1-11e6-b691-15a0f40ab405","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,37,478,479,38,480,481,39,482,40,41,483,42,484,43,485,44,45,46,47,486,487,488,489,490,491,492,493,494,495],"tindex":"26eada00-2ec1-11e6-b691-394db831c293","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[496],"tindex":"26eb0111-2ec1-11e6-b691-21a64af1e04f","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"26eb0112-2ec1-11e6-b691-7b44cf31916b","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[497,498,499,500,501,502,503,504,505,506,89,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529],"tindex":"26eb2823-2ec1-11e6-b691-fbc42c3d464c","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"26eb2824-2ec1-11e6-b691-331bf9a7baf2","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[530,531,532],"tindex":"26eb4f35-2ec1-11e6-b691-21602901bad7","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"26eb4f36-2ec1-11e6-b691-27030d931c42","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[363,362,533,534],"tindex":"26eb4f37-2ec1-11e6-b691-3b2272ac7cf8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[535,536],"tindex":"26eb7648-2ec1-11e6-b691-05c9f351259d","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,190,554,555,556,557,558,206,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,191,192,578],"tindex":"26eb7649-2ec1-11e6-b691-b7bccb53ca7f","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherLengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherLengthInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[579],"tindex":"26eb9d5a-2ec1-11e6-b691-e7ed51104b36","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[580],"tindex":"26ebc46b-2ec1-11e6-b691-c57c7d17189a","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[581],"tindex":"26ebeb7c-2ec1-11e6-b691-c722d3d63582","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"26ebeb7d-2ec1-11e6-b691-45b937a64ee7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = java.util.List<K>.indexOf(key);\n                    if (index > 0) {\n                        return java.util.List<K>.get((index - 1));\n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[582],"tindex":"26ec128e-2ec1-11e6-b691-89e8ecc4ddae","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[583,584,585,586,587,588,589,590],"tindex":"26ec128f-2ec1-11e6-b691-efa5662a658c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"26ec1290-2ec1-11e6-b691-41f981a169ee","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"26ec39a1-2ec1-11e6-b691-1737b4a58a76","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"26ec39a2-2ec1-11e6-b691-4f1dba6246d9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[591],"tindex":"26ec39a3-2ec1-11e6-b691-6944f39d9d8b","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[592],"tindex":"26ec60b4-2ec1-11e6-b691-edf67d2a0f6a","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[593,594,595,596,597,598,599,600,601,602,603,437,438,439],"tindex":"26ec60b5-2ec1-11e6-b691-315282aecf2a","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[363],"tindex":"26ecaed6-2ec1-11e6-b691-71099df7c9a2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,77,626,627,78,628,629,79,630,80,81,631,82,632,83,633,84,85,86,87,634,635,636,637,638,639,640,641,642,643,644],"tindex":"26ecd5e7-2ec1-11e6-b691-b71664fa37f5","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[645],"tindex":"26ecfcf8-2ec1-11e6-b691-53820a85f35a","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"26ecfcf9-2ec1-11e6-b691-491e785280ec","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"26ecfcfa-2ec1-11e6-b691-1968e8c7a155","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[646,455],"tindex":"26ecfcfb-2ec1-11e6-b691-e1477368004b","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"26ed240c-2ec1-11e6-b691-dd06af742a24","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[647,648,649,650,651],"tindex":"26ed240d-2ec1-11e6-b691-19f517436340","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[652],"tindex":"26ed240e-2ec1-11e6-b691-c701b9866d58","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[653,654,199,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,23,670,671,24,672,673,674,675,25,26,676,27,677,678,679,28,680,681,29,682,683,684,685,686,687,688,689,690,691,692,693,200,36,694,695,30,31,32,33,34,696,35,697,698,699,700,701,702,703,704,705],"tindex":"26ed4b1f-2ec1-11e6-b691-09de97f4ee82","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"26ed4b20-2ec1-11e6-b691-3f9aebe2d703","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[385,386,387,388,390,393,706,414,415,416,417,419,422,707],"tindex":"26ed7231-2ec1-11e6-b691-e7fe5617fdd3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,441,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,181,288,289,290,291,292,293,294,295,296,297,298,264,300,299,301,302,303,304,305,306,307,308,309,310,311,164,313,158,159,314,160,161,162,315,163,316,317,318,319,320,321,322,182,323,324,325,326,327,328,329,330,331,332,333,312],"tindex":"26ed7232-2ec1-11e6-b691-d55537466542","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[708,709,710,711,712],"tindex":"26ed9943-2ec1-11e6-b691-8d0aab285c6a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"26ed9944-2ec1-11e6-b691-e73cf162b8f0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[537,538,541,543,544,545,546,549,550,552,553,554,555,556,206,559,563,564,565,566,567,568,569,572,576,191,192,578],"tindex":"26edc055-2ec1-11e6-b691-9b4336d3cce2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[713],"tindex":"26edc056-2ec1-11e6-b691-3f7f403ff009","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[245,714],"tindex":"26ede767-2ec1-11e6-b691-d151c3ab69f5","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"26ee0e78-2ec1-11e6-b691-6d397f8366f4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771],"tindex":"26ee0e79-2ec1-11e6-b691-0b206f630f05","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"26ee5c9a-2ec1-11e6-b691-a93a12bfbad8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[772,773,774,775,776,777,778,779,780,23,24,25,26,27,28,29,36,30,31,32,33,34,35,781,782,783,784,785,786,787,788,789],"tindex":"26ee5c9b-2ec1-11e6-b691-fdd7849514e1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"26ee83ac-2ec1-11e6-b691-176d5b6c9452","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[790],"tindex":"26ee83ad-2ec1-11e6-b691-f70426752202","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}