{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":779,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":515,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":507,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":576,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":815,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":293,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":407,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":174,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":96,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":382,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":727,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":88,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":718,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":787,"org.apache.commons.collections4.CollectionUtilsTest.collect":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":214,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":398,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":328,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":683,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":607,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":556,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":766,"org.apache.commons.collections4.CollectionUtilsTest.get":321,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":767,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":735,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":720,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":764,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":390,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":783,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":141,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":760,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":5,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":66,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":450,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":1,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":36,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":585,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":59,"org.apache.commons.collections4.CollectionUtilsTest.select":303,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":345,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":361,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":814,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":520,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":548,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":472,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":84,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":512,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":644,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":267,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":447,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":658,"org.apache.commons.collections4.CollectionUtilsTest.intersection":327,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":797,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":755,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":193,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":788,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":41,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":703,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":509,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":67,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":668,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":780,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":738,"org.apache.commons.collections4.map.CompositeMapTest.testPut":397,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":151,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":519,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":695,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":724,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":795,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":356,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":682,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":74,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":247,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":331,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":232,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":417,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":257,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":55,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":654,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":672,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":252,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":253,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":251,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":227,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":63,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":810,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":574,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":300,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":336,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":195,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":403,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":566,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":288,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":54,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":533,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":812,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":120,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":424,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":696,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":153,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":25,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":121,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":592,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":700,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":92,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":796,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":819,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":623,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":476,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":99,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":484,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":694,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":564,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":701,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":752,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":388,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":471,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":262,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.CollectionUtilsTest.get1":323,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":307,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":146,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":500,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":140,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":77,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":371,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":364,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":510,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":46,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":577,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":619,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":776,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":22,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":162,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":246,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":785,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":280,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":625,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":778,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":734,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":605,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":686,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":651,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":611,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":258,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":731,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":325,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.map.LRUMapTest.testReset":697,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":111,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":29,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":68,"org.apache.commons.collections4.CollectionUtilsTest.exists":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":204,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":600,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":24,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":742,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":635,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":131,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":773,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":546,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":228,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":473,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":48,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":426,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":555,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":702,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":244,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":442,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":470,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":189,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":194,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":730,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":379,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":522,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":408,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":245,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":292,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":209,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":433,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":210,"org.apache.commons.collections4.map.HashedMapTest.testClone":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":768,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":152,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":485,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":149,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":454,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":554,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":110,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":657,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":311,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":603,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":728,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":722,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":47,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":284,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":475,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":631,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":630,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":402,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":632,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":308,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":782,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":545,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":319,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":754,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":143,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":276,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":517,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":418,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":459,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":150,"org.apache.commons.collections4.ListUtilsTest.testSelect":275,"org.apache.commons.collections4.map.LinkedMapTest.testClone":663,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":12,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":422,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":366,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":49,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":721,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":50,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":559,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":665,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":357,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":769,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":208,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":344,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":560,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":608,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":749,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":166,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":82,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":699,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":636,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":392,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":732,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":157,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":582,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":750,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":226,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":159,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":239,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":203,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":359,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":715,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":104,"org.apache.commons.collections4.CollectionUtilsTest.find":322,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":639,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":452,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":494,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":525,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":443,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":748,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":746,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":18,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":324,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":486,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":64,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":197,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":240,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":538,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":547,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":297,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":518,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":449,"org.apache.commons.collections4.map.LRUMapTest.testLRU":691,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":370,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":661,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":123,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":264,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":124,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":529,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":709,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":102,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":781,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":771,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":604,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":229,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":145,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":95,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":83,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":609,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":591,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":461,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":526,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":243,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":116,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":710,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":551,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":791,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":90,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":643,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":595,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":354,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":260,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":316,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":108,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":282,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":385,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":430,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":801,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":489,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":569,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":794,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":283,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":341,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":627,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":76,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":291,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":378,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":114,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":427,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":516,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":202,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":190,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":381,"org.apache.commons.collections4.CollectionUtilsTest.transform2":286,"org.apache.commons.collections4.CollectionUtilsTest.transform1":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":765,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":353,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":804,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":805,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":803,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":386,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":241,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":713,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":73,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":380,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":503,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":423,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":294,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":434,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":255,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":224,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":281,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":511,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":687,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":626,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":528,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":234,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":777,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":384,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":225,"org.apache.commons.collections4.map.CompositeMapTest.testGet":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":751,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":499,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":33,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":594,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":685,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":332,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":3,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":272,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":817,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":299,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":741,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":432,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":670,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":126,"org.apache.commons.collections4.CollectionUtilsTest.union":326,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":112,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":544,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":802,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":587,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":792,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":798,"org.apache.commons.collections4.list.TreeListTest.testRemove":467,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":504,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":784,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":250,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":42,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":502,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":733,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":567,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":365,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":681,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":589,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":725,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":808,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":806,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":448,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":616,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":508,"org.apache.commons.collections4.map.LRUMapTest.testClone":638,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":579,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":419,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":606,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":191,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":570,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":176,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":315,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":314,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":524,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":335,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":590,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":482,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":130,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":80,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":368,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":620,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":429,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":367,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":723,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":349,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":676,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":615,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":498,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":816,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":477,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":35,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":343,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":438,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":714,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":762,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":813,"org.apache.commons.collections4.CollectionUtilsTest.filter":296,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":400,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":399,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":237,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":23,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":278,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":134,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":659,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":183,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":196,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":641,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":789,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":198,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":689,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":719,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":270,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":184,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":346,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":6,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":487,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":688,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":772,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":497,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":387,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":633,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":530,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":550,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":629,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":758,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":756,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":154,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":218,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":269,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":45,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":584,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":716,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":492,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":287,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":669,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":290,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":653,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":128,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":333,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":580,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":401,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":598,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":273,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":621,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":656,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":818,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":263,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":705,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":617,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":420,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":563,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":7,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":9,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":8,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":302,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":634,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":712,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":759,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":231,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":338,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":313,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":757,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":339,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":139,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":317,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":19,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":173,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":680,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":491,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":740,"org.apache.commons.collections4.set.CompositeSetTest.testContains":271,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":373,"org.apache.commons.collections4.CollectionUtilsTest.isFull":298,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":451,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":671,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":647,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":329,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":809,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":351,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":233,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":496,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":320,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":466,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":383,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":266,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":363,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":440,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":513,"org.apache.commons.collections4.CollectionUtilsTest.reverse":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":667,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":163,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":156,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":463,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":453,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":483,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":44,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":261,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":761,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":521,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":86,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":652,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":514,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":666,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":583,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":242,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":811,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":799,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":235,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":372,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":185,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":362,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":706,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":729,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":743,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":744,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":745,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":416,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":800,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":103,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":455,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":786,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":763,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":178,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":138,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":4,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":62,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":421,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":38,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":578,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":404,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":692,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":675,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":148,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":650,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":279,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":413,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":664,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":649,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":465,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":624,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":523,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":693,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":187,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":645,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":31},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[0],"tindex":"c01f425f-2ed3-11e6-bc2e-75ae14d63498","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"c02005b0-2ed3-11e6-bc2e-77909fb459f9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[1],"tindex":"c0202cc1-2ed3-11e6-bc2e-416fbdd321e1","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2 == coll1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll2","list2":"coll1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[2],"tindex":"c02053d2-2ed3-11e6-bc2e-ed7499600c7b","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"c0207ae3-2ed3-11e6-bc2e-d7d6844284c4","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtBinaryOperatorImpl","sourcecode":"pairs != null"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"c020a1f4-2ed3-11e6-bc2e-cdc011c583cb","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pairs":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"c020c905-2ed3-11e6-bc2e-7b617aca458b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits == offsetInBits) {\n                {\n                    final int int = offsetInBits + lengthInBits;\n                    if (offsetLength > (lengthInBits(key))) {\n                        throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n                    } \n                    if (offsetLength == 0) {\n                        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n                    } \n                    return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"offsetInBits","end":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"c020f016-2ed3-11e6-bc2e-db260913cd83","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"c020f017-2ed3-11e6-bc2e-f39e803fad9d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c0213e38-2ed3-11e6-bc2e-2348cf52c8e4","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (listIterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"listIterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[174],"tindex":"c0213e39-2ed3-11e6-bc2e-cdbaa9ecfba3","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[175],"tindex":"c021654a-2ed3-11e6-bc2e-8b42c3a13dbf","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"c0218c5b-2ed3-11e6-bc2e-8973674881d9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"c021b36c-2ed3-11e6-bc2e-17b0d329eb61","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:315","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(toIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = super.subList(fromIndex, toIndex);\n            final java.util.Set<E> java.util.Set<E> = createSetBasedOnList(java.util.Set<E>, superSubList);\n            return org.apache.commons.collections4.ListUtils.unmodifiableList(new org.apache.commons.collections4.list.SetUniqueList<E>(superSubList , subSet));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"toIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[0,176,177],"tindex":"c021da7d-2ed3-11e6-bc2e-251665a0bf56","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c022018e-2ed3-11e6-bc2e-b7418dbec035","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (offsetInBits == offsetInBits) {\n                {\n                    final int int = offsetInBits + lengthInBits;\n                    if (offsetLength > (lengthInBits(key))) {\n                        throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n                    } \n                    if (offsetLength == 0) {\n                        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n                    } \n                    return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"offsetInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:94","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[178],"tindex":"c022018f-2ed3-11e6-bc2e-d76b4bc14a7c","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c02228a0-2ed3-11e6-bc2e-bfd163625553","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[179],"tindex":"c0224fb1-2ed3-11e6-bc2e-b1e029c184cc","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:70","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> uniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"c0224fb2-2ed3-11e6-bc2e-dba01db59805","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:470","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(org.apache.commons.collections4.map.AbstractReferenceMap.this , next , hashCode , key , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,1,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,215,412,10,12,14,19,21,24,25,27,28,31,34,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,40,41,42,43,44,45,47,440,52,54,56,61,63,66,67,69,70,73,76,441,257,442,81,83,85,90,92,95,96,98,99,102,105,443,444,445,446,447,448,449,450,451,452,453,454,129,164,455,456,457,458,459,460],"tindex":"c02276c3-2ed3-11e6-bc2e-e345dbec5802","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"c02276c4-2ed3-11e6-bc2e-bd56bf77a518","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[461,462,463,464],"tindex":"c0229dd5-2ed3-11e6-bc2e-a5f02b699366","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"c022ebf6-2ed3-11e6-bc2e-dfd52622fbd3","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"c0231307-2ed3-11e6-bc2e-5189f38a9135","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[465],"tindex":"c0231308-2ed3-11e6-bc2e-1b91299865fb","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtBinaryOperatorImpl","sourcecode":"(lastUsedIterator) == null"},"failures":[],"tindex":"c0233a19-2ed3-11e6-bc2e-c5884eb0bff7","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastUsedIterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[0],"tindex":"c0233a1a-2ed3-11e6-bc2e-69df2e92d6ca","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"c0233a1b-2ed3-11e6-bc2e-4fb326594728","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[],"tindex":"c023612c-2ed3-11e6-bc2e-b9bde26ca6e4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[466,467,468,469,470],"tindex":"c023883d-2ed3-11e6-bc2e-7b2a90583f76","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index > 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[471],"tindex":"c023883e-2ed3-11e6-bc2e-11dd599d5a23","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[472,473],"tindex":"c023883f-2ed3-11e6-bc2e-65b79103077a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[474],"tindex":"c023af50-2ed3-11e6-bc2e-8d58d98e9d1a","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"c023af51-2ed3-11e6-bc2e-4fce9cc902a9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[475,476],"tindex":"c023d662-2ed3-11e6-bc2e-159beabb9f42","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"c023d663-2ed3-11e6-bc2e-3b581d7546c4","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[374,179,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,431,432,496,497,498,499,500,501,502,503,433,504,505,434,435,436,506,507,508,509,510,511,437,438,439,512,513,514,515,516,517,518,519],"tindex":"c023d664-2ed3-11e6-bc2e-6789b629648a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[520,122],"tindex":"c023fd75-2ed3-11e6-bc2e-c1151d70ceec","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtBinaryOperatorImpl","sourcecode":"x == yFormerParent"},"failures":[],"tindex":"c023fd76-2ed3-11e6-bc2e-9579c33fd152","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (to == from) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"to","yFormerParent":"from"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[521],"tindex":"c023fd77-2ed3-11e6-bc2e-e38aa9a61014","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtBinaryOperatorImpl","sourcecode":"(size) >= (threshold)"},"failures":[],"tindex":"c0242488-2ed3-11e6-bc2e-7fb89125f473","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i >= i) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"i","threshold":"i"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"c0242489-2ed3-11e6-bc2e-71efcef7adb1","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if ((value instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,405,538,539,540,541,542,543,544,545,546,547,548,549,550,551,406,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,409,570,571,572,573,574,575,576,577,578,579,580,581,582,410,583,584,585,586,587,588,184,185,186,193,202,209,210,212,215,216,219,220,221,222,223,589,590,591,592,593,594,595,426,596,597,598,599,600,601,226,227,228,244,251,252,254,257,258,261,262,263,264,265,602,603,604,605,606,607,608,609,610,611,612,442,613,614,615,616,617,618],"tindex":"c0244b9a-2ed3-11e6-bc2e-83b27812ca6f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[619],"tindex":"c02472ab-2ed3-11e6-bc2e-bf124b05960b","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"c02472ac-2ed3-11e6-bc2e-2bd9447a5dec","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"c02472ad-2ed3-11e6-bc2e-931530141952","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"c02499be-2ed3-11e6-bc2e-b97f0d86d1d0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[620],"tindex":"c02499bf-2ed3-11e6-bc2e-79649beab341","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[621],"tindex":"c024c0d0-2ed3-11e6-bc2e-eb39b39916df","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[],"tindex":"c024e7e1-2ed3-11e6-bc2e-fbb4db0d0af9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[622,623,624,625,626,627,628,629,548,630,631,632,549,550,633,554,634,635,636,637,638,639,640,641,642,643,644,645,646,647,609,648,649,650,610,611,651,615,616,617,652,653],"tindex":"c024e7e2-2ed3-11e6-bc2e-8be87dbea79e","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[654,655,656,657,658,659,660,661,662,663,629,664,665,666,476,667,668,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,669,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,670,671,672,673,674,675,676,677,678,679,680,681,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,682,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,683,684,685,686,687,688,689,690,638,691,636,692,693,694,695,637,696,602,603,604,605,697,698,699,639,640,606,607,608,700,652,653,701,641,642,643,644,702,645,703,704,646,705,706,647,609,707,708,709,648,649,650,610,611,651,612,710,711,442,613,712,713,614,615,616,617,618,714,715,716,717,718,719,720,721],"tindex":"c0250ef3-2ed3-11e6-bc2e-5948553bc076","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if ((proposedCapacity - proposedCapacity) > (proposedCapacity - proposedCapacity)) {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"proposedCapacity","end2":"proposedCapacity","end1":"proposedCapacity","start2":"proposedCapacity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"c0253604-2ed3-11e6-bc2e-7f1d62abcd2e","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[722,723],"tindex":"c0253605-2ed3-11e6-bc2e-871a260acf82","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > index) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[724,629,725,726,647],"tindex":"c0253606-2ed3-11e6-bc2e-41a3b8f287e1","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtInvocationImpl","sourcecode":"found.isEmpty()"},"failures":[727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,724,742,743,744,745,746,747,748,749,267,750,751,752,753,754,755,756,757,758],"tindex":"c0255d17-2ed3-11e6-bc2e-47cf28530988","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node.isEmpty()) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[759,760,139,140,138,141,761,762,763,764,765,142,143,766,144,145,146,147,148,149,150,151,152,767,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,455,812,813,814,815,816,817,818,819],"tindex":"c0258428-2ed3-11e6-bc2e-23191dd1753b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"c0258429-2ed3-11e6-bc2e-4d99b2189632","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start == start) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":59,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}