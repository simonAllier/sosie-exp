{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":575,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":145,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":510,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":560,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":355,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":546,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":650,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":490,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":678,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":183,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":179,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":256,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":30,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":74,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":618,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":325,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":140,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":351,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":301,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":362,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":482,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":287,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":358,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":538,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":542,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":41,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":471,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":380,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":544,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":402,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":603,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":670,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":454,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":377,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":375,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":620,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":220,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":152,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":658,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":141,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":425,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":129,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.CollectionUtilsTest.select":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":381,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":373,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":413,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":550,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":565,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":53,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":321,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":645,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":366,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":364,"org.apache.commons.collections4.CollectionUtilsTest.intersection":285,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":515,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":615,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":217,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":14,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":312,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":63,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":262,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":235,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":352,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":388,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":652,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":541,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":592,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":424,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":450,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":572,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":91,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":501,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":340,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":327,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":139,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":208,"org.apache.commons.collections4.map.CompositeMapTest.testPut":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":392,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":470,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":627,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":621,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":229,"org.apache.commons.collections4.map.CompositeMapTest.testGet":299,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":435,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":591,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":335,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":71,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":543,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":121,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":265,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":250,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":675,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":665,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":212,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":460,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":525,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":218,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":445,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":594,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":296,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":480,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":679,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":48,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":251,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":238,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":411,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":605,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":636,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":83,"org.apache.commons.collections4.CollectionUtilsTest.union":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":370,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":513,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":288,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":20,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":521,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":527,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":128,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":356,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":306,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":441,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":103,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":360,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":624,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":97,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":472,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":195,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":326,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":348,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":93,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":242,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":200,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":39,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":160,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":484,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":548,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":672,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":417,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":547,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":182,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":408,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":359,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":619,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":579,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":369,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":368,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":274,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":88,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":209,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":531,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":584,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":440,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":188,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":518,"org.apache.commons.collections4.map.LRUMapTest.testClone":464,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":563,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":138,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":469,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":553,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":528,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":72,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":487,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":258,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":481,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":174,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":120,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":612,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":662,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":244,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":49,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":194,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":354,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":100,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":204,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":677,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":509,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":659,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":117,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":181,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":228,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":433,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":609,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":418,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":92,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":336,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":237,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":2,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":154,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":422,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":604,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":263,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":403,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":349,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":494,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":113,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":540,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":40,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":476,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":172,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":252,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":324,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":508,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":33,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":36,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.LRUMapTest.testReset":463,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":246,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":668,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":660,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":372,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":241,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":52,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":277,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":127,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":302,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":680,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":31,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":239,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":320,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":562,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":201,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":343,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":600,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":533,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":21,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":192,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":207,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":520,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":656,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":431,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":488,"org.apache.commons.collections4.map.LinkedMapTest.testReset":522,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":492,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":569,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":353,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":512,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":8,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":294,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":453,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":421,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":640,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":576,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":11,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":3,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":447,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":511,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":191,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":342,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":634,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":451,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":559,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":457,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":551,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":558,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":590,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":557,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":432,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":549,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":395,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":35,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":123,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":414,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":561,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":293,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":203,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":82,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":187,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":443,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":255,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":423,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":276,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":278,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":486,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":101,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":114,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":304,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":587,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":578,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":307,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":297,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":574,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":446,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":461,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":171,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":333,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":651,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":10,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":596,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":598,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":393,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":437,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":390,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":29,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":496,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":673,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":519,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":568,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":78,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":462,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":286,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":628,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":474,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":224,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":223,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":240,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":279,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":32,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":536,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":374,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":264,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":106,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":667,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":382,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":85,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":555,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":554,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":305,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":346,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":532,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":153,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":282,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":473,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":18,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":535,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":459,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":608,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":259,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":177,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":383,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":50,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":378,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":170,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":109,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":233,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":165,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":168,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":329,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":167,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":162,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":178,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":164,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":163,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":46,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":607,"org.apache.commons.collections4.set.CompositeSetTest.testContains":295,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":639,"org.apache.commons.collections4.CollectionUtilsTest.isFull":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":449,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":318,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":498,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":524,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":391,"org.apache.commons.collections4.ListUtilsTest.testSelect":291,"org.apache.commons.collections4.map.LinkedMapTest.testClone":523,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":185,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":225,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":94,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":669,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":148,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":290,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":633,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":589,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":334,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":289,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":17,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":19,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":311,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":407,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":189,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":323,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":478,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":385,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":322,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":466,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":397,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":638,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":38,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":313,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":581,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":583,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":582,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":398,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":67,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":545,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":631,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":236,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":674,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":213,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":400,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":54,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":173,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":266,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":436,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":649,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":151,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":234,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":429,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":42,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":28,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":497,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":479,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":601,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":34,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":328,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":61,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":646,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":232,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":58,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":150,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":361,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":661,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":105,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":66,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":350,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":671,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":315,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":426,"org.apache.commons.collections4.map.LRUMapTest.testLRU":465,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":647,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":376,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":632,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":253,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":219,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":317,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":110,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":666,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":455,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":176,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":452,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":502,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":210,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":215,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":664,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":1,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":0,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":467,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":613,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":389,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":216,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":434,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":505,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":330,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":345,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":111,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":573,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":332,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":180,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":475,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":281,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":386,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":539,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":468,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":637,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":499,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":143,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":310,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":458,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":186,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":654,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":493,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":442,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":444},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0,1,2,3],"tindex":"c98844de-3e77-11e6-b3d9-69245d12c1c1","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[4],"tindex":"c98892ff-3e77-11e6-b3d9-8b2c103dd5d6","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[5,6,7,8,9,10],"tindex":"c9889300-3e77-11e6-b3d9-f99acdc426c4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[11,12],"tindex":"c9889301-3e77-11e6-b3d9-8593b9ed35af","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"c988ba12-3e77-11e6-b3d9-4b5daaaeb27f","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[13],"tindex":"c988ba13-3e77-11e6-b3d9-3dbf3154b252","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[14],"tindex":"c988ba14-3e77-11e6-b3d9-7ff52e0e1bef","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c988e125-3e77-11e6-b3d9-1f040ff47d37","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"c988e126-3e77-11e6-b3d9-bf48f494acfb","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[15],"tindex":"c988e127-3e77-11e6-b3d9-e3eb8691e9ad","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"c988e128-3e77-11e6-b3d9-6ba7b5b7e675","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[16],"tindex":"c9890839-3e77-11e6-b3d9-e9df70952d61","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[17],"tindex":"c989083a-3e77-11e6-b3d9-5f0cefe40ca5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[18,19],"tindex":"c989083b-3e77-11e6-b3d9-1f62e1288217","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[20,21,22,23,24,25,26,27,28],"tindex":"c9892f4c-3e77-11e6-b3d9-5f0a81f7a320","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    synchronized(java.lang.Object) {\n                        if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                            return true;\n                        } \n                        return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[29],"tindex":"c9892f4d-3e77-11e6-b3d9-af2ec224a564","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"c9892f4e-3e77-11e6-b3d9-2963c02272c1","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[76],"tindex":"c9892f4f-3e77-11e6-b3d9-e99590f1ef69","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[18],"tindex":"c9895660-3e77-11e6-b3d9-f72094cb0ade","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"c9895661-3e77-11e6-b3d9-51586370f1e0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"c9895662-3e77-11e6-b3d9-c950735bace4","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,8,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"c9895663-3e77-11e6-b3d9-51438c3b9d9e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[261,262],"tindex":"c9897d74-3e77-11e6-b3d9-7f83d2f0b9b2","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[263,264],"tindex":"c9897d75-3e77-11e6-b3d9-3bc17877ba06","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"c9897d76-3e77-11e6-b3d9-77fd92815db2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[265,266,267,268,269,270,271,272,273,274],"tindex":"c9897d77-3e77-11e6-b3d9-917ce5203651","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"c9897d78-3e77-11e6-b3d9-2bc8efbd450e","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"c989a489-3e77-11e6-b3d9-9da54f80008d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"c989a48a-3e77-11e6-b3d9-ef133425cdb0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c989a48b-3e77-11e6-b3d9-2d4fd99f0d4d","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[307,308,309,310,311,312,313,314,315],"tindex":"c989a48c-3e77-11e6-b3d9-01e09782e6ca","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"c989a48d-3e77-11e6-b3d9-6d5360b05149","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c989cb9e-3e77-11e6-b3d9-211f9a72702f","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c989cb9f-3e77-11e6-b3d9-67dd29cf6d8b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"c989cba0-3e77-11e6-b3d9-99b9469d931b","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"c989cba1-3e77-11e6-b3d9-55ee04eba2eb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"c989f2b2-3e77-11e6-b3d9-6ddcac2e7729","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                {\n                    synchronized(java.lang.Object) {\n                        if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                            return true;\n                        } \n                        return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c989f2b3-3e77-11e6-b3d9-99040eb36f19","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[316,317,318,319],"tindex":"c989f2b4-3e77-11e6-b3d9-371dc06889b4","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[320],"tindex":"c989f2b5-3e77-11e6-b3d9-393e504aaba7","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[321,322,323],"tindex":"c989f2b6-3e77-11e6-b3d9-bdb1c872d370","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"c98a19c7-3e77-11e6-b3d9-37960a8e197f","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[324],"tindex":"c98a19c8-3e77-11e6-b3d9-07c483890185","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"c98a19c9-3e77-11e6-b3d9-8372a2a8d6fb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"c98a19ca-3e77-11e6-b3d9-97a41b678f0c","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"c98a40db-3e77-11e6-b3d9-53ae6cad5157","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c98a40dc-3e77-11e6-b3d9-f1e8aabc7fc9","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[325],"tindex":"c98a40dd-3e77-11e6-b3d9-d9baa1204d77","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[326,327,328],"tindex":"c98a40de-3e77-11e6-b3d9-0500b7dcf86d","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[329,330],"tindex":"c98a40df-3e77-11e6-b3d9-fd2724aa0f11","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"c98a40e0-3e77-11e6-b3d9-718415d46aad","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,265,359,14,360,266,361,362,363,364,365,366,367,368,369,267,370,371,268,269,372,373,270,271,272,273,274,374,375,376,377,378,379,380,381,382,383,313,314,315,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,7,411,412],"tindex":"c98a67f1-3e77-11e6-b3d9-b7e2841a76d4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[413,414,415,416,417,418,419],"tindex":"c98a67f2-3e77-11e6-b3d9-2b3e06165115","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[331,332,333,334,335,336,338,339,340,342,343,344,337,345,346,347,348,349,350,351,352,353,354,355,356,357,358,265,359,14,360,266,361,362,363,364,365,366,367,368,369,267,370,371,268,269,372,373,270,271,272,273,274,375,374,376,377,378,379,380,381,383,313,314,315,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,7,411,412],"tindex":"c98a67f3-3e77-11e6-b3d9-57f41cb755ee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[420,421,422,423],"tindex":"c98a8f04-3e77-11e6-b3d9-59ea49343552","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c98a8f05-3e77-11e6-b3d9-b599a3af2a42","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[336],"tindex":"c98a8f06-3e77-11e6-b3d9-ef7cf91f6ef5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"c98a8f07-3e77-11e6-b3d9-131e0357a465","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[424],"tindex":"c98a8f08-3e77-11e6-b3d9-dd0cee570949","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[425],"tindex":"c98a8f09-3e77-11e6-b3d9-2d4edecb60a3","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[196,426,218,427],"tindex":"c98ab61a-3e77-11e6-b3d9-5f21fddec13b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c98ab61b-3e77-11e6-b3d9-7d12d0685171","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[428,429],"tindex":"c98ab61c-3e77-11e6-b3d9-0100f8f23996","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[430,431,432,433,434,435,436,437,438],"tindex":"c98ab61d-3e77-11e6-b3d9-470f2cf6ce5f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[439,440],"tindex":"c98ab61e-3e77-11e6-b3d9-6d5d3bba22ac","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,13,572,573],"tindex":"c98add2f-3e77-11e6-b3d9-ff94a5dad3cf","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[574,575,576,577],"tindex":"c98add30-3e77-11e6-b3d9-fb2498af0573","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"c98add31-3e77-11e6-b3d9-49228ca69998","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[441],"tindex":"c98add32-3e77-11e6-b3d9-b70722681d5d","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"c98b0443-3e77-11e6-b3d9-438f0404e6d2","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[578],"tindex":"c98b0444-3e77-11e6-b3d9-7396f833da78","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[294,579,580,581,582,583,584],"tindex":"c98b0445-3e77-11e6-b3d9-bd8027a34839","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[79,5,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,439,603,604,605,440,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,8,233,236,241,242,243,244,251,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,10,659,660],"tindex":"c98b0446-3e77-11e6-b3d9-ff1e9f91196c","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"c98b0447-3e77-11e6-b3d9-e3df73694d58","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[661,662,663,664,665,666,667,668,669,670,671,672,673],"tindex":"c98b2b58-3e77-11e6-b3d9-95042271a211","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"c98b2b59-3e77-11e6-b3d9-0ba26554de09","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"c98b2b5a-3e77-11e6-b3d9-afeb2c1265c5","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"c98b2b5b-3e77-11e6-b3d9-ada97bb87180","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[331,332,333,334,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,265,359,14,360,266,361,362,363,364,365,366,367,368,369,267,370,371,268,269,372,373,270,271,272,273,274,375,374,376,377,378,379,380,381,382,383,313,314,315,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,7,411,412],"tindex":"c98b2b5c-3e77-11e6-b3d9-b3c1e7c958cc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c98b2b5d-3e77-11e6-b3d9-291d883a7284","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[480,531],"tindex":"c98b526e-3e77-11e6-b3d9-9f3525b53524","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c98b526f-3e77-11e6-b3d9-a759b837aeff","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"c98b5270-3e77-11e6-b3d9-7fc61e750bcd","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[674],"tindex":"c98b5271-3e77-11e6-b3d9-a96350c50dc6","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[122,154],"tindex":"c98b5272-3e77-11e6-b3d9-23bb1c5831bf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c98b7983-3e77-11e6-b3d9-9909713bb479","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"c98b7984-3e77-11e6-b3d9-bfe94cc6710b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[675],"tindex":"c98b7985-3e77-11e6-b3d9-4d48885623f2","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[676],"tindex":"c98b7986-3e77-11e6-b3d9-15f92a15b74d","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[677],"tindex":"c98b7987-3e77-11e6-b3d9-a7fd67b4df6c","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[662],"tindex":"c98ba098-3e77-11e6-b3d9-476b6fd4fafd","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            addComparator(comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"c98ba099-3e77-11e6-b3d9-17645aa4e20f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[678,679],"tindex":"c98ba09a-3e77-11e6-b3d9-b946a4dbdb18","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[578],"tindex":"c98ba09b-3e77-11e6-b3d9-7919885aa01b","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[331,332,333,334,335,336,338,339,340,341,342,343,344,337,345,346,347,348,349,350,351,352,353,354,355,356,357,358,265,359,14,360,266,361,362,363,364,365,366,367,368,369,267,370,371,268,269,372,373,270,271,272,273,274,375,374,376,377,378,379,380,381,383,313,314,315,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,7,411,412],"tindex":"c98ba09c-3e77-11e6-b3d9-7968c57c052a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[18,19],"tindex":"c98bc7ad-3e77-11e6-b3d9-dbc95343751e","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[680],"tindex":"c98bc7ae-3e77-11e6-b3d9-f3e21ec20fbd","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"c98bc7af-3e77-11e6-b3d9-6d03d6e6c7b6","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"c98bc7b0-3e77-11e6-b3d9-9d53b111be2f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c98bc7b1-3e77-11e6-b3d9-3fcf3b4bd4fb","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256430232/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}