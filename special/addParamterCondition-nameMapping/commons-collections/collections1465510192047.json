{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":455,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":237,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":499,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":657,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":5,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":549,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":206,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":547,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":533,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":619,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":672,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":410,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":617,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":443,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":411,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":505,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":142,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":164,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":120,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":173,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":379,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":596,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":651,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":363,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":442,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":699,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":207,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":268,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":351,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":201,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":299,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":267,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":439,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":559,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":322,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":601,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":671,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":436,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":113,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":131,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":537,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":694,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":470,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":621,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":39,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":405,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":125,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":188,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":43,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":544,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":698,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":543,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":385,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":23,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":191,"org.apache.commons.collections4.ListUtilsTest.testEquals":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":508,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":624,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":374,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":568,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":182,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":209,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":144,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":269,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":426,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":449,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":297,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":316,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":326,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":503,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":613,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":446,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":306,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":259,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":329,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":227,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":546,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":413,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":541,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":655,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":575,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":62,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":285,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":355,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":396,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":354,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":390,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":670,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":126,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":634,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":286,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":460,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":642,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":659,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":254,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":608,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":465,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":292,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":561,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":7,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":588,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":110,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":709,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":45,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":78,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":660,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":229,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":567,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":688,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":635,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":512,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":450,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":690,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":497,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":198,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":669,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":105,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":494,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":495,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":678,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":104,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":555,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":81,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":647,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":518,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":330,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":570,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":564,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":271,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":203,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":238,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":147,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":707,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":478,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":22,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":364,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":383,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":185,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":317,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":369,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":372,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":375,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":680,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":593,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":578,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":315,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":17,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":57,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":527,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":692,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":25,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":250,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":332,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":584,"org.apache.commons.collections4.list.TreeListTest.testRemove":579,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":708,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":515,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":72,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":356,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":587,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":618,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":523,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":333,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":380,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":32,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":629,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":557,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":489,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":247,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":339,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":488,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":239,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":197,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.ArrayStackTest.testSearch":438,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":471,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":631,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":82,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":530,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":695,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":534,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":520,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":178,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":323,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":159,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":652,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":183,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":77,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":130,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":295,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":284,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":431,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":342,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":667,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":15,"org.apache.commons.collections4.ListUtilsTest.testSubtract":539,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":357,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":211,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":382,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":53,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":256,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":109,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":114,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":663,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":76,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":213,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":21,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":156,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":230,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":638,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":565,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":68,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":472,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":14,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":636,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":637,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":58,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":416,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":248,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":658,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":16,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":406,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":261,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":225,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":84,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":171,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":433,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":576,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":165,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":115,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":452,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":180,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":235,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":194,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":650,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":632,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":371,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":517,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":491,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":558,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":625,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":314,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":337,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":352,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":282,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":63,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":281,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":51,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":74,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":153,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":552,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":258,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":421,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":94,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":152,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":83,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":92,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":696,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":90,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":148,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":172,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":208,"org.apache.commons.collections4.map.SingletonMapTest.testClone":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":432,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":451,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":100,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":319,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":348,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":509,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":123,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":422,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":600,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":550,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":200,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":277,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":697,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":641,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":138,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":219,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":376,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":392,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":158,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":101,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":522,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":108,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":394,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":683,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":402,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":502,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":362,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":604,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":137,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":586,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":403,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":703,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":504,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":648,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":676,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":485,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":693,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":218,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":328,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":463,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":205,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":456,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":27,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":249,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":212,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":628,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":398,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":622,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":590,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":302,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":444,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":136,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":50,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":246,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":233,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":536,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":186,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":378,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":548,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":35,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":360,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":181,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":420,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":501,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":475,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":482,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":528,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":118,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":325,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":592,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":193,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":169,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":609,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":199,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":290,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":293,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":60,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":649,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":474,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":245,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":679,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":623,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":102,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":373,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":176,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":454,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":36,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":612,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":668,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":562,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":710,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":519,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":535,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":288,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":605,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":483,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":309,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":477,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":417,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":3,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":217,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":168,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":484,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":490,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":88,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":353,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":684,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":611,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":687,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":551,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":589,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":26,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":274,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":54,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":8,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":86,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":103,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":308,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":393,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":116,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":146,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":0,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":273,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":583,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":653,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":141,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":532,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":689,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":252,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":377,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":542,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":320,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":597,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":366,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":111,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":435,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":445,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":701,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":531,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":190,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":566,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":34,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":341,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":38,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":260,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":563,"org.apache.commons.collections4.set.CompositeSetTest.testContains":677,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":71,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":234,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":513,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":280,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":614,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":9,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":61,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":381,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":303,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":598,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":686,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":255,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":409,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":594,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":479,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":386,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":89,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":96,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":487,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":149,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":646,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":654,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":12,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":117,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":196,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":461,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":538,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":312,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":408,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":349,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":195,"org.apache.commons.collections4.SetUtilsTest.testEquals":453,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":553,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":556,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":440,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":388,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":324,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":345,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":643,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":645,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":270,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":644,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":467,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":428,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":526,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":577,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":705,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":129,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":340,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":132,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":554,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":569,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":48,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":18,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":595,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":47,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":429,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":656,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":56,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":73,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":346,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":662,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":276,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":560,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":93,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":615,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":272,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":334,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":134,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":419,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":524,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":574,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":424,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":313,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":423,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":469,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":571,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":572,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":573,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":98,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":223,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":275,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":480,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":224,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":514,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":336,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":427,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":222,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":459,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":236,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":321,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":179,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":582,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":139,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":481,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":665,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":204,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":630,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":240,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":296,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":344,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":606,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":607,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":66,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":626,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":49,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":215,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":525,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":691,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":70,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":639,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":681,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":682,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":407,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":244,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":350,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":278,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":19,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":447,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":266,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":367,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":368,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":458,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":666,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":177,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":192,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":327,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":75,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":304,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":162,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":492,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":704,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":226,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":154,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":711,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":145},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"e3a40695-2e8e-11e6-aecd-3bff325811a5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"e3a4f0f6-2e8e-11e6-aecd-37af7f2452f6","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,9,73,10,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,18,32,33,35,36,54,59,55,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"tindex":"e3a51807-2e8e-11e6-aecd-bf7578ccf493","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[367,368,369,370,371],"tindex":"e3a56628-2e8e-11e6-aecd-bd2d1cf429f2","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e3a56629-2e8e-11e6-aecd-6fd9371bc298","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"e3a58d3a-2e8e-11e6-aecd-4b9e9b874a38","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.w3c.dom.Node) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[372],"tindex":"e3a5b44b-2e8e-11e6-aecd-f54f76337da2","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[373],"tindex":"e3a5db5c-2e8e-11e6-aecd-057143c90fb7","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"e3a6026d-2e8e-11e6-aecd-19163d66826b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                {\n                    return entry.getKey();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[374],"tindex":"e3a6026e-2e8e-11e6-aecd-6fc4d0f6e5a2","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[375],"tindex":"e3a6297f-2e8e-11e6-aecd-9b8258fb3df4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(get(index));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[376,377,378,379,380,381,382,383,384],"tindex":"e3a62980-2e8e-11e6-aecd-039e63fe7814","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"e3a677a1-2e8e-11e6-aecd-11d416bb444e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"e3a69eb2-2e8e-11e6-aecd-c9e529c79fbe","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"e3a6c5c3-2e8e-11e6-aecd-bf48497883b2","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e3a6c5c4-2e8e-11e6-aecd-29d7aa1d3b57","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[385,386],"tindex":"e3a6ecd5-2e8e-11e6-aecd-79c2d3c54a83","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e3a6ecd6-2e8e-11e6-aecd-4374b77353fe","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e3a713e7-2e8e-11e6-aecd-b7951ebc3f4d","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3a73af8-2e8e-11e6-aecd-d57b9008bb3b","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"e3a73af9-2e8e-11e6-aecd-47538ecb5ac8","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e3a73afa-2e8e-11e6-aecd-539872ac8622","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e3a7620b-2e8e-11e6-aecd-39854aa61562","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[387,388,389,390,391,392,393,394,395],"tindex":"e3a7620c-2e8e-11e6-aecd-874b918cf2e9","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"e3a7620d-2e8e-11e6-aecd-91999f29fc5e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e3a7891e-2e8e-11e6-aecd-edad4bf5bea9","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>"},"failures":[],"tindex":"e3a7891f-2e8e-11e6-aecd-ada6de11db46","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[396,397,398,399,400,401,402,403,404,405,406,407],"tindex":"e3a78920-2e8e-11e6-aecd-75781228ab9a","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3a7b031-2e8e-11e6-aecd-995a9e09f04e","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e3a7b032-2e8e-11e6-aecd-2b2af8f240d4","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432],"tindex":"e3a7b033-2e8e-11e6-aecd-953c34fabc85","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e3a7d744-2e8e-11e6-aecd-337b5df42895","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[433,434,435,436,437],"tindex":"e3a7d745-2e8e-11e6-aecd-33f178e330af","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"e3a7d746-2e8e-11e6-aecd-6f1ac51b8b33","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"e3a7fe57-2e8e-11e6-aecd-a55eaa0f49ee","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e3a7fe58-2e8e-11e6-aecd-b7eae1ad46aa","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"e3a7fe59-2e8e-11e6-aecd-21711f05f743","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"e3a7fe5a-2e8e-11e6-aecd-7f754b08832c","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[438],"tindex":"e3a8256b-2e8e-11e6-aecd-8941df444dc0","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (null == object) {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[439,440,441,442,443,102,105,444,445,446,447,448,449,127,130,450],"tindex":"e3a8256c-2e8e-11e6-aecd-497d3251cf9c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return getBag().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"e3a84c7d-2e8e-11e6-aecd-3964349e1b23","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.w3c.dom.Node) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[451,452],"tindex":"e3a84c7e-2e8e-11e6-aecd-01fe117e7f57","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"e3a84c7f-2e8e-11e6-aecd-f5e7e35ae355","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[453],"tindex":"e3a87390-2e8e-11e6-aecd-578f4644bbfb","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set2 == set1) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set1","set1":"set2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[454,455,456,457],"tindex":"e3a87391-2e8e-11e6-aecd-affc32ac2840","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"e3a87392-2e8e-11e6-aecd-a5b986e00c25","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[458,459,460,461,462,463,464,465,466],"tindex":"e3a89aa3-2e8e-11e6-aecd-4bcf27818301","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[467],"tindex":"e3a8c1b4-2e8e-11e6-aecd-bbf7a5b42e1e","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"e3a8c1b5-2e8e-11e6-aecd-7f7c7925e7c8","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[468],"tindex":"e3a8e8c6-2e8e-11e6-aecd-7ba9f5d38794","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"tindex":"e3a8e8c7-2e8e-11e6-aecd-bbb726a76105","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"e3a8e8c8-2e8e-11e6-aecd-2f9ddfb2c018","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[511],"tindex":"e3a90fd9-2e8e-11e6-aecd-35d52d61b8d8","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[512,437,513,514,515,516,517,518,519,520],"tindex":"e3a90fda-2e8e-11e6-aecd-8d5c065d215b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[521,522],"tindex":"e3a90fdb-2e8e-11e6-aecd-df5dda3915aa","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[523,292,524],"tindex":"e3a936ec-2e8e-11e6-aecd-f5751839ce4d","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[525],"tindex":"e3a936ed-2e8e-11e6-aecd-3b3be382bc68","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e3a936ee-2e8e-11e6-aecd-618c3b4f84f8","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e3a95dff-2e8e-11e6-aecd-81527ad33406","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[526],"tindex":"e3a95e00-2e8e-11e6-aecd-35fdfc2a7ca2","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e3a95e01-2e8e-11e6-aecd-030c16b1295a","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[527],"tindex":"e3a95e02-2e8e-11e6-aecd-a7cb18e790c8","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"e3a9ac23-2e8e-11e6-aecd-bd465212b0eb","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[528,529,530,531,532,533,534,535,536,537,538],"tindex":"e3a9ac24-2e8e-11e6-aecd-f1277b2aedd7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return decorated().set(index, object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"e3a9ac25-2e8e-11e6-aecd-8f0ed187cea1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"e3a9d336-2e8e-11e6-aecd-d5ac74f0d075","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                {\n                    return entry.getKey();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[539],"tindex":"e3a9d337-2e8e-11e6-aecd-6be04190ec85","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:272","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next());\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e3aa2158-2e8e-11e6-aecd-d5922eec10f4","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return decorated().set(index, object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3aa2159-2e8e-11e6-aecd-73b25065659a","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"e3aa215a-2e8e-11e6-aecd-5d084ff805e3","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e3aa215b-2e8e-11e6-aecd-01e5db84b79d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[521,522],"tindex":"e3aa486c-2e8e-11e6-aecd-8d235ef300f8","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3aa486d-2e8e-11e6-aecd-3ffa4fe9a12b","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"e3aa486e-2e8e-11e6-aecd-c514c071c73f","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"e3aa6f7f-2e8e-11e6-aecd-f389221e03f9","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[540,541,542,543,544,545],"tindex":"e3aa6f80-2e8e-11e6-aecd-9f5a4504bef7","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (criterion == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"criterion"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e3aa6f81-2e8e-11e6-aecd-ab7112b7564e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[546],"tindex":"e3aa6f82-2e8e-11e6-aecd-11464433db31","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[547,548,549,550,551,552,419,420,421,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,422,568,569,570,571,572,573,423,424,574,425,575,576,426,427,577,578,428,429,430,431,432],"tindex":"e3aa9693-2e8e-11e6-aecd-2f29f8421005","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"e3aa9694-2e8e-11e6-aecd-a7d91efaa4a4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e3aa9695-2e8e-11e6-aecd-f1b7be842d73","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[579,580,581,582,583,584,585,586,383,587],"tindex":"e3aa9696-2e8e-11e6-aecd-dd709084cba0","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[588,89,589,590,591,444,111,116,592,593,122,46,450],"tindex":"e3aabda7-2e8e-11e6-aecd-5dd398076f8d","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[594],"tindex":"e3aabda8-2e8e-11e6-aecd-c1104071d6b8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[595,596,597,598,599,600,601,602,603,604,605,606],"tindex":"e3aae4b9-2e8e-11e6-aecd-cfa7a3e598ce","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e3aae4ba-2e8e-11e6-aecd-a10f81c174d1","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return remove(get(index));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3aae4bb-2e8e-11e6-aecd-230a95702aa0","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtBinaryOperatorImpl","sourcecode":"(x.getLeft(dataElement)) != null"},"failures":[512,437,513,514,515,516,517,518,519,520],"tindex":"e3aae4bc-2e8e-11e6-aecd-657801577fcd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((x.getLeft(dataElement)) != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"x","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3ab32dd-2e8e-11e6-aecd-4be1ba7f8d25","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[607,608,609,610,139,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,140,142,141,627,143,628,629,630],"tindex":"e3ab32de-2e8e-11e6-aecd-5b434c51f068","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e3ab32df-2e8e-11e6-aecd-a5c08b1274a6","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[631],"tindex":"e3ab32e0-2e8e-11e6-aecd-f593fbd2e746","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[528,529,530,531,532,533,534,535,536,537,538],"tindex":"e3ab58f1-2e8e-11e6-aecd-336ba6aa78b7","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[632],"tindex":"e3ab58f2-2e8e-11e6-aecd-e147bc22e72f","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705],"tindex":"e3ab58f3-2e8e-11e6-aecd-0d92ad161c6e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[706],"tindex":"e3aba714-2e8e-11e6-aecd-93fc94ee59c0","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1 == list2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[275],"tindex":"e3aba715-2e8e-11e6-aecd-5be0ec9b6180","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[707],"tindex":"e3aba716-2e8e-11e6-aecd-d979b61b0221","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"e3abce27-2e8e-11e6-aecd-9db8d58a4975","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[6,708,709,710,711],"tindex":"e3abf538-2e8e-11e6-aecd-617ba140940a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}