{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":709,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":234,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":387,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":638,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":213,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":211,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":432,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":7,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":281,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":149,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":470,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":585,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":141,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":788,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":787,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":436,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":341,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":447,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":483,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":700,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":671,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":650,"org.apache.commons.collections4.CollectionUtilsTest.get":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":687,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":763,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":416,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":561,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":362,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":645,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":189,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":73,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":51,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":533,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":643,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":100,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":276,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":177,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":85,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":214,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":422,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":170,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":637,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":814,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":1,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":137,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":204,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":210,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":344,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":731,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":391,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":806,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":176,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":666,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":372,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":437,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":90,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":653,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":355,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":472,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":178,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":792,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":607,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":519,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":393,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":159,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":256,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":597,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":725,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":195,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":589,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":583,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":38,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":719,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":329,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":331,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":728,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":430,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":312,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":632,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":819,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":278,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":406,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":594,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":243,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":480,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":165,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":349,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":635,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":120,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":32,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":325,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":429,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":522,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":79,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":619,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":698,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":642,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":404,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":152,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":485,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":588,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":756,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":240,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":578,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":805,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":514,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":475,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":799,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":572,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":518,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":722,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":58,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":683,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":53,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":216,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":95,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":697,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":172,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":108,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":603,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":76,"org.apache.commons.collections4.IteratorUtilsTest.testToList":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":744,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":559,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":10,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":510,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":22,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":692,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":179,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":545,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":530,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":119,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":506,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":273,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":252,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":42,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":569,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":610,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":674,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":415,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":511,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":340,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":531,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":268,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":580,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":659,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":769,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":703,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":727,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":658,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":663,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":688,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":206,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":678,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":478,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":295,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":482,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":593,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":317,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":26,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":361,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":528,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":754,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":715,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":818,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":182,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":354,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":231,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":297,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":600,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":64,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":773,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":311,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":199,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":21,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":515,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":711,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":395,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":426,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":96,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":779,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":767,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":401,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":613,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":241,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":774,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":237,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":534,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":55,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":253,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":816,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":745,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":62,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":160,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":161,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":147,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":665,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":601,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":802,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":762,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":323,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":78,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":367,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":785,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":782,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":540,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":363,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":765,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":563,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":499,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":558,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":69,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":414,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":812,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":71,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":70,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":157,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":405,"org.apache.commons.collections4.CollectionUtilsTest.find":654,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":502,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":280,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":512,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":689,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":673,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":303,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":17,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":544,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":487,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":696,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":175,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":190,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":526,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":379,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":291,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":729,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":672,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":394,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":776,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":770,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":592,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":271,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":364,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":34,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":747,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":18,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":155,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":488,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":612,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":353,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":554,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":599,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":808,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":57,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":148,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":660,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":486,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":676,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":440,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":335,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":710,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":239,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":661,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":0,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":446,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":623,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":259,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":207,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":617,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":777,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":781,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":187,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":275,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":298,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":493,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":5,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":186,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":759,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":669,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":192,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":158,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":664,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":466,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":501,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":339,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":626,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":778,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":625,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":184,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":359,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":306,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":398,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":235,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":419,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":675,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":461,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":694,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":571,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":109,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":351,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":739,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":556,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":473,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":305,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":98,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":517,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":550,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":591,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":640,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":250,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":254,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":6,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":458,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":775,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":702,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":735,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":28,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":267,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":456,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":691,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":616,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":813,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":621,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":685,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":451,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":232,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":764,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":758,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":270,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":324,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":15,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":274,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":575,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":760,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":690,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":741,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":667,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":360,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":205,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":288,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":258,"org.apache.commons.collections4.ListUtilsTest.testSubtract":283,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":790,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":376,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":535,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":721,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":144,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":670,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":753,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":202,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":677,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":86,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":784,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":308,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":218,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":265,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":133,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":247,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":476,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":737,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":655,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":804,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":230,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":358,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":668,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":803,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":720,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":780,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":752,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":648,"org.apache.commons.collections4.map.SingletonMapTest.testClone":797,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":636,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":732,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":772,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":45,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":453,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":567,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":438,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":431,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":357,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":717,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":225,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":464,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":546,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":609,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":751,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":810,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":811,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":714,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":716,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":320,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":94,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":693,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":452,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":197,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":817,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":411,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":412,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":679,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":740,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":641,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":742,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":539,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":319,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":815,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":242,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":102,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":560,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":104,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":366,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":644,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":396,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":730,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":12,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":286,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":481,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":704,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":219,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":52,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":680,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":114,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":397,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":49,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":541,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":798,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":255,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":474,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":509,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":377,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":771,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":684,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":768,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":807,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":657,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":313,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":352,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":795,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":527,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":521,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":820,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":695,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":749,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":723,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":257,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":477,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":793,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":794,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":682,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":68,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":203,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":800,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":647,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":656,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":139,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":503,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":418,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":789,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":568,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":801,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":712,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":608,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":115,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":16,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":699,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":409,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":410,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":408,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":368,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":261,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":622,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":686,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":156,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":272,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":402,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":465,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":492,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":634,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":369,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":707,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":562,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":287,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":50,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":112,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":315,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":392,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":99,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":238,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":173,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":2,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":433,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":457,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":88,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":389,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":400,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":576,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":596,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":428,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":783,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":60,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":734,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":662,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":248,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":279,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":371,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":455,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":507,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":302,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":786,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":264,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":529,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":573,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":126},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d952fd63-3e4c-11e6-9573-bbe1e92df440","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1,2,3],"tindex":"d9534b84-3e4c-11e6-9573-d9481c86e9d1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[4],"tindex":"d9534b85-3e4c-11e6-9573-9dc66716a80e","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"d9534b86-3e4c-11e6-9573-ed1681dcc310","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"d9537297-3e4c-11e6-9573-413fa9fc372a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[5,6],"tindex":"d9537298-3e4c-11e6-9573-45d04216edd9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d9537299-3e4c-11e6-9573-cf89c3dc308e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[7,8,9,10,11,12,13],"tindex":"d95399aa-3e4c-11e6-9573-2f46cf624fea","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (null == object) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[],"tindex":"d95399ab-3e4c-11e6-9573-e74e56ced91e","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d953c0bc-3e4c-11e6-9573-d583ad0f4fac","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[14,15,16],"tindex":"d953c0bd-3e4c-11e6-9573-cbcee4aedd66","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[17],"tindex":"d953c0be-3e4c-11e6-9573-ef54edf4f4f8","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map == null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"d953e7cf-3e4c-11e6-9573-f3256d123a18","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"d953e7d0-3e4c-11e6-9573-0393ff72e855","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],"tindex":"d953e7d1-3e4c-11e6-9573-5f98f8b1c2ae","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d9540ee2-3e4c-11e6-9573-1163b280708f","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[189],"tindex":"d9540ee3-3e4c-11e6-9573-6753bca6fd7e","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"d9540ee4-3e4c-11e6-9573-eb3bfedbd491","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"d95435f5-3e4c-11e6-9573-851431f5f655","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[244,245,246,247,248],"tindex":"d95435f6-3e4c-11e6-9573-7bed30b838fa","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"tindex":"d95435f7-3e4c-11e6-9573-49908876ed73","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[244],"tindex":"d95435f8-3e4c-11e6-9573-5b99e058988e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[280],"tindex":"d9545d09-3e4c-11e6-9573-3d7e29b2415a","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map == null) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[281],"tindex":"d9545d0a-3e4c-11e6-9573-dda252e066af","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate2 == null) || (predicate1 == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((predicate1 == null) || (predicate2 == null)) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[282,283],"tindex":"d9545d0b-3e4c-11e6-9573-c38ce82368e7","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d954841c-3e4c-11e6-9573-2b7a9b5f2226","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d954841d-3e4c-11e6-9573-0d2512a4865f","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[284],"tindex":"d954841e-3e4c-11e6-9573-139518ec4c97","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[285,286,287],"tindex":"d954841f-3e4c-11e6-9573-bd1dec4ef774","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[244,245],"tindex":"d9548420-3e4c-11e6-9573-357914c3e7aa","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key5"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[272],"tindex":"d954ab31-3e4c-11e6-9573-0fff974c76eb","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[288],"tindex":"d954ab32-3e4c-11e6-9573-af5f9619dc73","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d954d243-3e4c-11e6-9573-b904fffdc7cb","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"d954d244-3e4c-11e6-9573-f7e55a66470c","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,288,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,5],"tindex":"d954d245-3e4c-11e6-9573-e3f73b47ff93","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[14,15,16,426],"tindex":"d954f956-3e4c-11e6-9573-cd9d1b334b96","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond < 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"beyond"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"d954f957-3e4c-11e6-9573-e9cf0f09e985","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[427,428,429,430,431,432],"tindex":"d954f958-3e4c-11e6-9573-9dc9a6a65e25","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((end1 - start1) > (start1 - start1)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"start1","end1":"end1","start2":"start1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[433],"tindex":"d9552069-3e4c-11e6-9573-b124161532c1","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[434,435,436,437,438,439,440,441,442,443,444,56,57,59,60,61,62,64],"tindex":"d955206a-3e4c-11e6-9573-631dbdc184f5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                    if (rval != null) {\n                        while ((rval.getLeft(dataElement)) != null) {\n                            rval = rval.getLeft(dataElement);\n                        }\n                    } \n                    return rval;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[445],"tindex":"d955206b-3e4c-11e6-9573-2399c4b2e038","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"d955206c-3e4c-11e6-9573-6ff1a04be78a","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[248],"tindex":"d955206d-3e4c-11e6-9573-c9f9d13e24f9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[],"tindex":"d955477e-3e4c-11e6-9573-5d785b954a47","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            if ((predicate2 == null) || (predicate1 == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((predicate1 == null) || (predicate2 == null)) {\n                        throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[446],"tindex":"d955477f-3e4c-11e6-9573-cda2b038235a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d9554780-3e4c-11e6-9573-bf3e95f3651f","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[447,448,160,161,162,163,164,165,166,167,168,169,170,171,172,173,449,174,175,450,176,451,177,178,179,180,181,182,183,184,185,186,187,188,452,453,454,455,456,457,458,459],"tindex":"d9554781-3e4c-11e6-9573-f7ff9b4392c2","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"d9556e92-3e4c-11e6-9573-990ce45cf8c1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"d9556e93-3e4c-11e6-9573-d9aa794735bb","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[460,461,462],"tindex":"d9556e94-3e4c-11e6-9573-c75eb9a75253","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[463,55,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"tindex":"d9556e95-3e4c-11e6-9573-1bd57f261f06","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"tindex":"d95595a6-3e4c-11e6-9573-85f3ecb465ae","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"d95595a7-3e4c-11e6-9573-79daffbafe13","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[515],"tindex":"d95595a8-3e4c-11e6-9573-151e518d0b79","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[249,250,251,252,253,254,255,256,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538],"tindex":"d95595a9-3e4c-11e6-9573-e7dab23d641c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                        return bag;\n                    } \n                    return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[539],"tindex":"d95595aa-3e4c-11e6-9573-71ffe29fffa7","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559],"tindex":"d955bcbb-3e4c-11e6-9573-b95fd90c4505","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[560],"tindex":"d955bcbc-3e4c-11e6-9573-2f64e5e5680e","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[561,562,563],"tindex":"d955bcbd-3e4c-11e6-9573-65468c40599b","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[401,404],"tindex":"d955bcbe-3e4c-11e6-9573-1577ad07f9a1","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"d955bcbf-3e4c-11e6-9573-6d5aa4c768af","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[564],"tindex":"d955bcc0-3e4c-11e6-9573-8d22dc815b29","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[565],"tindex":"d955bcc1-3e4c-11e6-9573-676213eab5c9","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d955e3d2-3e4c-11e6-9573-bf737d4808ac","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"d955e3d3-3e4c-11e6-9573-e10100ee4b43","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[564,566,481,567,568,569,570,571,572,573,574,575,576,577,578,579,433,580,581,582,583,584,585,586,587,588,589,590,591,592],"tindex":"d955e3d4-3e4c-11e6-9573-bf8910c04610","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[593,594,595,596,560,597],"tindex":"d955e3d5-3e4c-11e6-9573-ff7e86561b33","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"d955e3d6-3e4c-11e6-9573-5517ceffefeb","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"d9560ae7-3e4c-11e6-9573-f9e53fec5178","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,434,435,436,437,438,439,440,616,441,617,618,619,620,621,442,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,50,51,52,53,645,646,54,55,647,648,649,650,56,57,58,59,60,61,62,63,64,651,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"d9560ae8-3e4c-11e6-9573-79e29ab97abd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[244,245,246,247],"tindex":"d9560ae9-3e4c-11e6-9573-b762aed788af","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"d9560aea-3e4c-11e6-9573-45f4f63a8c9e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d9560aeb-3e4c-11e6-9573-6b27f3c60010","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[652,653],"tindex":"d95631fc-3e4c-11e6-9573-85d079e6bba3","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"d95631fd-3e4c-11e6-9573-cb81fae7e28b","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[654],"tindex":"d95631fe-3e4c-11e6-9573-75b14ff6b062","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[655,656],"tindex":"d95631ff-3e4c-11e6-9573-2f0757470a47","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,14,15,16,426,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,1,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,3,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791],"tindex":"d9563200-3e4c-11e6-9573-693a89902759","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[792],"tindex":"d9565911-3e4c-11e6-9573-cb398706615e","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"d9565912-3e4c-11e6-9573-735c533ae459","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    if ((map.size()) != (size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n                    try {\n                        while (it.hasNext()) {\n                            final java.lang.Object java.lang.Object = it.next();\n                            final java.lang.Object java.lang.Object = it.getValue();\n                            if (value == null) {\n                                if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                                    return false;\n                                } \n                            } else {\n                                if ((value.equals(map.get(key))) == false) {\n                                    return false;\n                                } \n                            }\n                        }\n                    } catch (final java.lang.ClassCastException ignored) {\n                        return false;\n                    } catch (final java.lang.NullPointerException ignored) {\n                        return false;\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"d9565913-3e4c-11e6-9573-17930d8d9a67","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[793,794,795,796],"tindex":"d9568024-3e4c-11e6-9573-db682b41a530","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"d9568025-3e4c-11e6-9573-3bbac80bc36b","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"d9568026-3e4c-11e6-9573-6f81bf2deb20","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[797,91,97,798,799],"tindex":"d9568027-3e4c-11e6-9573-b5205ed5d343","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[800,801,802,803,804,805,806,807,808,809,810,811,793,794,795,796],"tindex":"d9568028-3e4c-11e6-9573-73e1dddda398","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[598,599,600,601,609,610,611,602,603,604,605,606,607,612,613,614,615,434,435,436,437,438,439,440,616,441,617,618,619,620,621,442,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,50,51,52,53,647,648,649,645,646,54,55,650,56,57,58,59,60,61,62,63,64,651,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"d956a739-3e4c-11e6-9573-0569157c5eea","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[812],"tindex":"d956a73a-3e4c-11e6-9573-4d282e018e2d","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[],"tindex":"d956a73b-3e4c-11e6-9573-4b8e49deff9b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                    if (rval != null) {\n                        while ((rval.getLeft(dataElement)) != null) {\n                            rval = rval.getLeft(dataElement);\n                        }\n                    } \n                    return rval;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d956a73c-3e4c-11e6-9573-9bcb804994a8","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[813],"tindex":"d956ce4d-3e4c-11e6-9573-ab931f0ce517","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[814],"tindex":"d956ce4e-3e4c-11e6-9573-b3f04a0f5740","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d956ce4f-3e4c-11e6-9573-6d489fb7f01b","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[128],"tindex":"d956ce50-3e4c-11e6-9573-9f213262333c","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[815,816],"tindex":"d956ce51-3e4c-11e6-9573-d79f77de7f39","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d956ce52-3e4c-11e6-9573-e56a109a2754","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d956ce53-3e4c-11e6-9573-43b56cb94743","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"d956f564-3e4c-11e6-9573-01837be3f1c7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                {\n                    if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    if ((map.size()) != (size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n                    try {\n                        while (it.hasNext()) {\n                            final java.lang.Object java.lang.Object = it.next();\n                            final java.lang.Object java.lang.Object = it.getValue();\n                            if (value == null) {\n                                if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                                    return false;\n                                } \n                            } else {\n                                if ((value.equals(map.get(key))) == false) {\n                                    return false;\n                                } \n                            }\n                        }\n                    } catch (final java.lang.ClassCastException ignored) {\n                        return false;\n                    } catch (final java.lang.NullPointerException ignored) {\n                        return false;\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d956f565-3e4c-11e6-9573-15d76eb70d59","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                        return bag;\n                    } \n                    return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[817,818,819,820],"tindex":"d956f566-3e4c-11e6-9573-65aed2984be9","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237989769/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}