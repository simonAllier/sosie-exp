{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":596,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":318,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":551,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":251,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":423,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":656,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":14,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":134,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":653,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":356,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":672,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":384,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":652,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":467,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":305,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":426,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":388,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":23,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":228,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":21,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":522,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":276,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":597,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":263,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":611,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":635,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":569,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":359,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":529,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":572,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":123,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":142,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":565,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":56,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":398,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":580,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":518,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":648,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":307,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":414,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":559,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":135,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":479,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":594,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":495,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":290,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":445,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":556,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":604,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":603,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":61,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":295,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":465,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":97,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":325,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":487,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":419,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":333,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":300,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":447,"org.apache.commons.collections4.CollectionUtilsTest.select":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":566,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":550,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":284,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":390,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":602,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":644,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":78,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":29,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":416,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":626,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":540,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":245,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":538,"org.apache.commons.collections4.CollectionUtilsTest.intersection":265,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":432,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":446,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":413,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":532,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":598,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":256,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":175,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":198,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":523,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":208,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":342,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":456,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":5,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":451,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":84,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":650,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":411,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":6,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":395,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":139,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":646,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":515,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":475,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":664,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":512,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":183,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":217,"org.apache.commons.collections4.map.CompositeMapTest.testPut":275,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":571,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.map.CompositeMapTest.testGet":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":510,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":27,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":338,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":615,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":530,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":238,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":128,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":631,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":601,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":63,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":95,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":179,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":271,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":259,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":434,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":553,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":663,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":48,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":55,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":116,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":489,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":590,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":288,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":297,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":409,"org.apache.commons.collections4.CollectionUtilsTest.union":264,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":545,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":266,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":293,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":473,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":299,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":537,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":527,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":281,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":355,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":533,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":172,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":548,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":349,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":237,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":204,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":519,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":120,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":209,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":424,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":412,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":586,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":531,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":376,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":468,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":226,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":35,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":543,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":555,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":224,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":311,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":417,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":187,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":154,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":308,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":387,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":201,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":225,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":436,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":662,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":222,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":230,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":337,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":438,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":62,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":67,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":377,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":389,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":87,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":70,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":472,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":570,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":81,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":25,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":561,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":147,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":525,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":464,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":352,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":448,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":460,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":665,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":213,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":317,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":408,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":463,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":105,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":369,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":461,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":476,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":613,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":511,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":583,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":365,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":88,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":581,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":258,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":552,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":513,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":58,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":130,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":195,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":368,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":24,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":124,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":549,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":659,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.CollectionUtilsTest.filter":630,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":370,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":119,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":278,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":277,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":298,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":22,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":117,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":669,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":508,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":452,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":661,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":4,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":235,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":645,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":657,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":178,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":309,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":17,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":524,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":643,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":269,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":655,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":478,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":219,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":155,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":381,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":627,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":98,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":76,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":160,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":507,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":47,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":397,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":636,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":573,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":165,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":268,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":16,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":212,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":329,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":496,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":296,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":616,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":133,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":444,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":651,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":171,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":260,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":385,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":353,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":279,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":331,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":372,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":483,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":606,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":474,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":600,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":272,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":625,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":595,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":43,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":282,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":373,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":504,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":394,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":206,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":554,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":346,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":344,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":422,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":146,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":292,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":403,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":437,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":637,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":608,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":26,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":101,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":100,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":118,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":261,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":312,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":347,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":557,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":184,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":214,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":143,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":629,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":567,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":49,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":152,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":361,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":517,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":392,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":326,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":231,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":458,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":54,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":137,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":612,"org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":367,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":560,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":610,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":488,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":435,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":13,"org.apache.commons.collections4.set.CompositeSetTest.testContains":270,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":86,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":345,"org.apache.commons.collections4.ListUtilsTest.testSelect":609,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":104,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":199,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":399,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":321,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":287,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":1,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":200,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":285,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":505,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":469,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":267,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":382,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":8,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":457,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":79,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":164,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":585,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":0,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":239,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":157,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":340,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":194,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":582,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":575,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":421,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":68,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":244,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":477,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":12,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":589,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":459,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":562,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":151,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":253,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":576,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":639,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":64,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":91,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":667,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":168,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":441,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":383,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":371,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":114,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":466,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":169,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":579,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":578,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":577,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":584,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":379,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":405,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":534,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":506,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":69,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":112,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":484,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":227,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":236,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":252,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":420,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":641,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":494,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":110,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":286,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":374,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":433,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":535,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":77,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":449,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":357,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":402,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":336,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":439,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":521,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":19,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":666,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":418,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":564,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":247,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":558,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":654,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":131,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":96,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":362,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":396,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":360,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":617,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":196,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":480,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":205,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":375,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":670,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":218,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":471,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":223,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":450,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":486,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":592,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":401,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":428,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":159,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":343,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":93,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":380,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":593,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":51,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":516,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":339,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":503,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":262,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":341,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":60,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":167,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":316,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":150,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":453,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":44,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":156,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":126},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d33a937-3f03-11e6-bfe1-796673a47a05","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[0,1],"tindex":"0d341e68-3f03-11e6-bfe1-d5d50f238291","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[2,3],"tindex":"0d344579-3f03-11e6-bfe1-39a1502e04f6","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[4,5],"tindex":"0d34457a-3f03-11e6-bfe1-b9e7dc4eeff9","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d346c8b-3f03-11e6-bfe1-8dd94fc8cecd","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d346c8c-3f03-11e6-bfe1-8b69eec1c93b","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[6],"tindex":"0d346c8d-3f03-11e6-bfe1-7360fea76a12","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[7],"tindex":"0d34939e-3f03-11e6-bfe1-69d50503c2e9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[8],"tindex":"0d34939f-3f03-11e6-bfe1-ebc92df36a50","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d34bab0-3f03-11e6-bfe1-5de3921779dd","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[9,10],"tindex":"0d34bab1-3f03-11e6-bfe1-219aa5d5a3e9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d34bab2-3f03-11e6-bfe1-574af3b96c44","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[11,12],"tindex":"0d34e1c3-3f03-11e6-bfe1-5d52433676c6","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"0d34e1c4-3f03-11e6-bfe1-15d6c2ec8740","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list.isEmpty()) {\n                {\n                    if (list == null) {\n                        throw new java.lang.NullPointerException(\"List must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d3508d5-3f03-11e6-bfe1-e1492f435f04","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d3508d6-3f03-11e6-bfe1-6f772a5db193","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        {\n                            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n                            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d352fe7-3f03-11e6-bfe1-b1bc4c3de1ae","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        {\n                            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n                            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d352fe8-3f03-11e6-bfe1-d9efc173130d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[13],"tindex":"0d3556f9-3f03-11e6-bfe1-a9240e15d23b","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[14],"tindex":"0d3556fa-3f03-11e6-bfe1-d78ee73613d5","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d3556fb-3f03-11e6-bfe1-a51edfe37b05","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,7],"tindex":"0d357e0c-3f03-11e6-bfe1-33c6f3b29c91","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"0d357e0d-3f03-11e6-bfe1-dd382e12b6e4","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[],"tindex":"0d357e0e-3f03-11e6-bfe1-0faf7d1d950e","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list.isEmpty()) {\n                {\n                    if (list == null) {\n                        throw new java.lang.NullPointerException(\"List must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d35a51f-3f03-11e6-bfe1-e7787659eee1","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl"},"failures":[39,40,41,42,43,44],"tindex":"0d35a520-3f03-11e6-bfe1-3bf79ea6bc66","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"0d35a521-3f03-11e6-bfe1-b5a69c2a70d7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[61,62,63],"tindex":"0d35cc32-3f03-11e6-bfe1-6b1d1ec73d22","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d35cc33-3f03-11e6-bfe1-bf8453b19284","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d35cc34-3f03-11e6-bfe1-1b265b4ac18a","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d35cc35-3f03-11e6-bfe1-fb86daac3eb3","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl"},"failures":[64],"tindex":"0d35f346-3f03-11e6-bfe1-65b24ddb5b76","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[65,66],"tindex":"0d35f347-3f03-11e6-bfe1-45d6bd7396d1","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl"},"failures":[67,68,69,70,71,72,73,74,33,75,34],"tindex":"0d361a58-3f03-11e6-bfe1-01b584f2cd4d","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,35,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"0d361a59-3f03-11e6-bfe1-2dccbf176100","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[225,226,227,228,229,230],"tindex":"0d361a5a-3f03-11e6-bfe1-eba6f5480c3b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[231,232],"tindex":"0d36416b-3f03-11e6-bfe1-f105bc79c287","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[233],"tindex":"0d36416c-3f03-11e6-bfe1-f5964fa4cee1","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl"},"failures":[234,235],"tindex":"0d36416d-3f03-11e6-bfe1-334f13b30ed5","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtBinaryOperatorImpl"},"failures":[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"tindex":"0d36687e-3f03-11e6-bfe1-9d0e1c583ca9","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d36687f-3f03-11e6-bfe1-819dec429bb2","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[253],"tindex":"0d366880-3f03-11e6-bfe1-177e74300438","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl"},"failures":[254,255],"tindex":"0d366881-3f03-11e6-bfe1-d7fb1a483c0c","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl"},"failures":[256,257,258,259],"tindex":"0d368f92-3f03-11e6-bfe1-dbf7515b69d1","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281],"tindex":"0d368f93-3f03-11e6-bfe1-4d866c1a9c24","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[282],"tindex":"0d368f94-3f03-11e6-bfe1-679c152aa64f","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[283],"tindex":"0d368f95-3f03-11e6-bfe1-3fb338d0d3b9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[284,285],"tindex":"0d36b6a6-3f03-11e6-bfe1-5727b7b4eff0","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[286],"tindex":"0d36b6a7-3f03-11e6-bfe1-3b522cfe04a6","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d36b6a8-3f03-11e6-bfe1-9f37677795df","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d36ddb9-3f03-11e6-bfe1-7399a0a44579","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,26,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,238,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,111,114,119,120,122,126,129,386,387,388,389,390,391,392,393,394,395,396,207,208,209,210,211,212,214,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451],"tindex":"0d36ddba-3f03-11e6-bfe1-c58aa1c5ea47","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl"},"failures":[452],"tindex":"0d36ddbb-3f03-11e6-bfe1-7bf0fe1c5bf1","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d3704cc-3f03-11e6-bfe1-1b83d94e7bc0","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return defaultValue;\n                    } \n                    return longObject.longValue();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d3704cd-3f03-11e6-bfe1-59b0d9f16f4c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d3704ce-3f03-11e6-bfe1-3d9ca21f31eb","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl"},"failures":[453],"tindex":"0d3704cf-3f03-11e6-bfe1-cf9f9c3552b6","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484],"tindex":"0d372be0-3f03-11e6-bfe1-6b4c08a9c913","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d372be1-3f03-11e6-bfe1-59983d24f17f","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d372be2-3f03-11e6-bfe1-75dc830bc124","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index > 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[485],"tindex":"0d3752f3-3f03-11e6-bfe1-03cc6fb67a6e","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d3752f4-3f03-11e6-bfe1-330c4e806d0e","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[486],"tindex":"0d3752f5-3f03-11e6-bfe1-b5f78bd55077","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[487,488,489,490,491,492,493,494,495,496,497,498,499,500,501],"tindex":"0d3752f6-3f03-11e6-bfe1-094b6cff1b6c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl"},"failures":[502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,340,341,570,342,343,344,345,571,346,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591],"tindex":"0d377a07-3f03-11e6-bfe1-75aa0b5e22bf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[592,593],"tindex":"0d377a08-3f03-11e6-bfe1-53af6166c557","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (a == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d37a119-3f03-11e6-bfe1-790f81db21ca","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        {\n                            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n                            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d37a11a-3f03-11e6-bfe1-21ac3b77248c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d37a11b-3f03-11e6-bfe1-51d66dcc81d0","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[594],"tindex":"0d37a11c-3f03-11e6-bfe1-0be3b9266dfc","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d37c82d-3f03-11e6-bfe1-ff07f1ec07f0","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl"},"failures":[595,596],"tindex":"0d37c82e-3f03-11e6-bfe1-997013a5d316","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[62,63],"tindex":"0d37c82f-3f03-11e6-bfe1-d927a6503fa5","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[597,598],"tindex":"0d37ef40-3f03-11e6-bfe1-f95d2550d75c","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl"},"failures":[599],"tindex":"0d37ef41-3f03-11e6-bfe1-8d2d6e702395","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d37ef42-3f03-11e6-bfe1-df0cfdae6748","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[600],"tindex":"0d37ef43-3f03-11e6-bfe1-75fca5687533","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl"},"failures":[],"tindex":"0d37ef44-3f03-11e6-bfe1-8f5fcaa6b473","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (iterator.hasNext()) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d381655-3f03-11e6-bfe1-5bb8ebb48100","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d381656-3f03-11e6-bfe1-194f0fedc1bf","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return defaultValue;\n                    } \n                    return longObject.longValue();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[601],"tindex":"0d381657-3f03-11e6-bfe1-1bf530e31d06","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[602],"tindex":"0d383d68-3f03-11e6-bfe1-3359240c4fef","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl"},"failures":[99,100,101,176,177,178,603,604,605],"tindex":"0d383d69-3f03-11e6-bfe1-1993e406035c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"0d383d6a-3f03-11e6-bfe1-a9d49659be29","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d383d6b-3f03-11e6-bfe1-839394f08a3b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d38647c-3f03-11e6-bfe1-05847afc3104","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.util.Properties java.util.Properties = new java.util.Properties();\n                    if (map != null) {\n                        for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                            final java.lang.Object java.lang.Object = entry.getKey();\n                            final java.lang.Object java.lang.Object = entry.getValue();\n                            answer.put(key, value);\n                        }\n                    } \n                    return answer;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[606],"tindex":"0d38647d-3f03-11e6-bfe1-7d92b0c45dac","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[607,608,609,610,268,269,270,271,272,273,274,275,276,277,278,279,280,281],"tindex":"0d38647e-3f03-11e6-bfe1-f3b6c2790ca9","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d38647f-3f03-11e6-bfe1-5be243d7b957","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d388b90-3f03-11e6-bfe1-7fef426ba629","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d388b91-3f03-11e6-bfe1-e3d01d659878","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[293,611,612,316,320,325,613,614,615,616,617,618,332,337,619,620,621,622,623,624],"tindex":"0d388b92-3f03-11e6-bfe1-f7d71b00437e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[625,626],"tindex":"0d388b93-3f03-11e6-bfe1-4f93cfb53e42","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl"},"failures":[595,596,627,628],"tindex":"0d388b94-3f03-11e6-bfe1-2d0ef036c7a3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[629,630,631,632],"tindex":"0d38b2a5-3f03-11e6-bfe1-2f9a5b864124","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl"},"failures":[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,495,654,655,656,657],"tindex":"0d38b2a6-3f03-11e6-bfe1-dd28de9f8233","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[592],"tindex":"0d38d9b7-3f03-11e6-bfe1-69ab98f77c25","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl"},"failures":[658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673],"tindex":"0d38d9b8-3f03-11e6-bfe1-4b6cbf89ec70","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"0d38d9b9-3f03-11e6-bfe1-93debccc6933","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.util.Properties java.util.Properties = new java.util.Properties();\n                    if (map != null) {\n                        for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                            final java.lang.Object java.lang.Object = entry.getKey();\n                            final java.lang.Object java.lang.Object = entry.getValue();\n                            answer.put(key, value);\n                        }\n                    } \n                    return answer;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl"},"failures":[],"tindex":"0d38d9ba-3f03-11e6-bfe1-aff7ed085d92","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467314726273/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}