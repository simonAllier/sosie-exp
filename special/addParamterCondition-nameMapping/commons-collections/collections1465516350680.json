{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":244,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":12,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":93,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":242,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":220,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":245,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":137,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":152,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":146,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":223,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":76,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":179,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":125,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":88,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":231,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":70,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1,"org.apache.commons.collections4.CollectionUtilsTest.get":65,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":3,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":118,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":103,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":207,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":147,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":155,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":264,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":98,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":82,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":120,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":173,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":193,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":157,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":24,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":79,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":124,"org.apache.commons.collections4.CollectionUtilsTest.select":60,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":2,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":86,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":57,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":143,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":7,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":213,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":186,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":168,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":8,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":96,"org.apache.commons.collections4.CollectionUtilsTest.intersection":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":175,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":69,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":250,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":218,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":206,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":172,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":10,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":80,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":233,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":235,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":63,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":148,"org.apache.commons.collections4.map.CompositeMapTest.testPut":75,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":166,"org.apache.commons.collections4.map.CompositeMapTest.testGet":74,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":215,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":232,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":177,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":199,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":171,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":224,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":174,"org.apache.commons.collections4.set.CompositeSetTest.testContains":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":248,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":85,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":122,"org.apache.commons.collections4.list.TreeListTest.testBug35258":141,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":234,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":129,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":239,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":240,"org.apache.commons.collections4.ListUtilsTest.testSelect":50,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":241,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":184,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":261,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":189,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":119,"org.apache.commons.collections4.CollectionUtilsTest.union":67,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":72,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":71,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":230,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":216,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":128,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":263,"org.apache.commons.collections4.list.TreeListTest.testRemove":145,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":192,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":154,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":104,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":252,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":116,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":6,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":100,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":112,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":158,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":156,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":117,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":249,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":182,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.map.LRUMapTest.testClone":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":226,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":133,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":238,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":194,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":209,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":11,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":228,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":66,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":212,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":165,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":217,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":219,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":139,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":89,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":160,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":52,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":97,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":169,"org.apache.commons.collections4.map.SingletonMapTest.testClone":91,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":257,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":61,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":78,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":256,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":55,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":258,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":176,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":259,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":191,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":92,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":144,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":247},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[0,1],"tindex":"3a7ecb8e-2e9d-11e6-805d-d194fd5b9a4e","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[2],"tindex":"3a7f8edf-2e9d-11e6-805d-c7f3f9f7f9f2","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"3a7fb5f0-2e9d-11e6-805d-47c1862b3183","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"3a7fb5f1-2e9d-11e6-805d-2f9596a61856","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"3a7fdd02-2e9d-11e6-805d-9d4c723c7766","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[3,4,5],"tindex":"3a800413-2e9d-11e6-805d-775d00ad1063","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) != (coll.size())) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if (coll.contains(it.next())) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[],"tindex":"3a800414-2e9d-11e6-805d-bb4dab92986c","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[6,7],"tindex":"3a802b25-2e9d-11e6-805d-b5f42f7bcd98","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == (-1)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[8],"tindex":"3a802b26-2e9d-11e6-805d-897185100a17","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl","sourcecode":"(cacheSize) == 0"},"failures":[9,10,11],"tindex":"3a805237-2e9d-11e6-805d-1dcbc18950ac","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtVariableReadImpl","sourcecode":"first"},"failures":[12],"tindex":"3a805238-2e9d-11e6-805d-fba323e55c7f","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (doLoop) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"doLoop"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"3a807949-2e9d-11e6-805d-4b897afe521e","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,56,59,61,88,67,68,71,72],"tindex":"3a80a05a-2e9d-11e6-805d-836701c76d7d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"3a80a05b-2e9d-11e6-805d-29b5e4efd0a6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtBinaryOperatorImpl","sourcecode":"(validForUpdate) == false"},"failures":[],"tindex":"3a80c76c-2e9d-11e6-805d-ebd43614c3ba","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1817","type":"CtMethodImpl","sourcecode":"protected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive == false) {\n        {\n            final K K = getToKey();\n            final boolean boolean = isToInclusive();\n            final int int = getKeyAnalyzer().compare(key, toKey);\n            if (toInclusive || forceInclusive) {\n                return ret <= 0;\n            } else {\n                return ret < 0;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"validForUpdate":"forceInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[89,90],"tindex":"3a80c76d-2e9d-11e6-805d-87a0a806590c","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (a.isEmpty()) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[],"tindex":"3a80ee7e-2e9d-11e6-805d-5d9b1eaae11d","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[91,92,93,94],"tindex":"3a80ee7f-2e9d-11e6-805d-6f3c86b1669f","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        {\n            return isEqualValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"value","position2":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"3a811590-2e9d-11e6-805d-1d6729626892","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[111,112],"tindex":"3a811591-2e9d-11e6-805d-31a28b6ffa38","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"3a82c342-2e9d-11e6-805d-b3a0f07310b1","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[113,114,115,116,117,118,119,120,121,122,123],"tindex":"3a82ea53-2e9d-11e6-805d-ad6dba4a5a28","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[124],"tindex":"3a82ea54-2e9d-11e6-805d-bbad034d9119","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))"},"failures":[],"tindex":"3a831165-2e9d-11e6-805d-815e88771419","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if ((((index % 2) != 0) && ((delta - index) <= index)) && (k <= (delta + d))) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"index","delta":"index","k":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"3a831166-2e9d-11e6-805d-d9c4f78d40e0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"3a831167-2e9d-11e6-805d-dff7ec29836f","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl","sourcecode":"(root) != null"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"3a833878-2e9d-11e6-805d-7136ff565c42","method":{"position":"org.apache.commons.collections4.list.TreeList:699","type":"CtMethodImpl","sourcecode":"private int getOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return 0;\n            } \n            return node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"3a833879-2e9d-11e6-805d-e12444491727","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) != (coll.size())) {\n                {\n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if (coll.contains(it.next())) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"3a83387a-2e9d-11e6-805d-fb3d84a8e6f3","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[],"tindex":"3a835f8b-2e9d-11e6-805d-1507fc4051a7","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[249],"tindex":"3a835f8c-2e9d-11e6-805d-2553e6ec9d55","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[250,251,252,253,254,255,256,257,258,259],"tindex":"3a835f8d-2e9d-11e6-805d-49a6ced365b6","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[260,261],"tindex":"3a83869e-2e9d-11e6-805d-d940fc0525e6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2363","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n    if (prior != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(prior, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"prior"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[262,263,264,265,266,267],"tindex":"3a83adaf-2e9d-11e6-805d-39386f0aab6c","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":34,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}