{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":201,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":821,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":20,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":884,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":715,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":464,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":677,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":422,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":863,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":734,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":209,"org.apache.commons.collections4.CollectionUtilsTest.collect":594,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":761,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":160,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":267,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":710,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":805,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":341,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":764,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":8,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":312,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":822,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":156,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":836,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":150,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":50,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":524,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":433,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":607,"org.apache.commons.collections4.CollectionUtilsTest.select":795,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":567,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":237,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":321,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":577,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":730,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":626,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":136,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":847,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":666,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":219,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":296,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":540,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":210,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":439,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":47,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":126,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":424,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":77,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":692,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":168,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":483,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":754,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":3,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":54,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":104,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":217,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":867,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":258,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":871,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":861,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":19,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":95,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSimpleSerialization":589,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":497,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":499,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":498,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":359,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":675,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":768,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":96,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":720,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":793,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":713,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":116,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":21,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":556,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":543,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":608,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":232,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":839,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":76,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":810,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":830,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":235,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":91,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":375,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":559,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":368,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":547,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":771,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":620,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":712,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":346,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":758,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":361,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":739,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":689,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":823,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":824,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":825,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":119,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":651,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":263,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":242,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":747,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":471,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":514,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":866,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":649,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":803,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":373,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":374,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":308,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":855,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":596,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":399,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":427,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":849,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":811,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":565,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":304,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":597,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":163,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":421,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":152,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":444,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":532,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":198,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":542,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":789,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":466,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":881,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":200,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":70,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":512,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":639,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":551,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":631,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":59,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalEmptyCollectionExists":590,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":627,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":546,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":339,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":846,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":834,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":195,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":441,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":86,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":364,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":447,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":766,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":842,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":774,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":622,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":327,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":645,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":808,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":271,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":534,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":78,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":302,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":261,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":858,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":145,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":705,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":345,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":656,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":477,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":491,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":676,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":37,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":400,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":32,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":69,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":420,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":9,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":878,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":854,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":749,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":851,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":719,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":430,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":482,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":383,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":413,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":629,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":560,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":354,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":99,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":718,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":841,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":356,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":385,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":192,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":462,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":820,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":166,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":880,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":326,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":252,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":657,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":255,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":378,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":502,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":445,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":257,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":804,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":840,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":414,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":159,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":599,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":794,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":786,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":573,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":325,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":340,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":167,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":531,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":94,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":529,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":518,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":519,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":798,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":818,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":652,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":831,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":566,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":733,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":801,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":799,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":411,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":628,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":351,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":183,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":728,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":583,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":513,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":632,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":745,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":837,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":581,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":187,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":746,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":756,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":812,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":638,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":174,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":603,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":743,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":273,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":485,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":175,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":681,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":120,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":872,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":67,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":604,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":752,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":303,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":765,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":735,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":703,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":390,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":409,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":128,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":630,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":791,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":537,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":593,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":650,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":614,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":379,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":864,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":723,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":569,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":688,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":470,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":127,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":653,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":306,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":558,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":785,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":870,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":515,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":401,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":455,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":259,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":109,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":350,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":750,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":476,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":358,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":191,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":778,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":138,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":51,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":162,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":370,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":744,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":117,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":780,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":729,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":698,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":330,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":272,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":790,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":467,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":792,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":473,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":838,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":316,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":395,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":646,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":213,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":736,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":621,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":561,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":699,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":298,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":463,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":660,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":686,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":313,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":27,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":349,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":410,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":438,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":829,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":292,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":216,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":85,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":456,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":548,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":403,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":487,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":572,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":262,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":386,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":503,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":665,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":711,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":813,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":415,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":25,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":796,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":62,"org.apache.commons.collections4.CollectionUtilsTest.transform2":592,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":157,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":662,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":80,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":753,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":655,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":114,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":418,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":369,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":568,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":623,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":227,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":225,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":521,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":773,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":459,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":123,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":517,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":781,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":311,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":679,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":879,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":283,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":318,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":300,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":575,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":511,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":876,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":199,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":412,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":516,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":862,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":501,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":449,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":508,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":848,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":64,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":115,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":146,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":533,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":772,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":868,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":197,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":276,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":555,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":425,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":860,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":452,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":406,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":310,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":392,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":580,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":522,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":814,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":396,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":618,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":246,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":708,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":701,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":288,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":673,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":869,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":240,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":668,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":71,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":816,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":585,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":691,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":697,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":683,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":224,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":807,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":634,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":609,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":214,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":260,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":220,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":490,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":759,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":112,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":435,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":637,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":664,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":787,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":584,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":124,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":828,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":826,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":33,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":73,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":611,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":865,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":22,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":852,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":674,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":228,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":450,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":0,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":293,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":505,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":323,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":363,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":111,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":833,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":348,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":408,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":41,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":737,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":549,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":324,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":389,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":279,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":709,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":212,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":461,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":702,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":277,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":48,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":299,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":669,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":725,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":726,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":724,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":706,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":428,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":12,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":93,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":291,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":362,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":762,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":134,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":783,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":815,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":239,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":133,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":557,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":154,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":784,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":682,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":757,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":788,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":882,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":236,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":587,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":23,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":782,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":544,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":282,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":722,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":110,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":342,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":88,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":7,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":251,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":844,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":496,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":211,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":598,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":381,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":495,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":494,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":402,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":472,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":525,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":398,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":416,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":595,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":320,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":382,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":832,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":171,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":243,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":366,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":443,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":700,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":394,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":16,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":314,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":873,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":617,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":488,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":89,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":672,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":625,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":247,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":775,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":704,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":241,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":667,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":475,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":460,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":63,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":885,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":647,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":45,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":509,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":769,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":802,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":528,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":545,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":147,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":578,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":357,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":586,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":457,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":767,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":46,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":11,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":770,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":158,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":469,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":843,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":875,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":405,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":817,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":380,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":2,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":538,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":633,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":57,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":376,"org.apache.commons.collections4.set.CompositeSetTest.testContains":245,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":426,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":113,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":4,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":231,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":738,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":137,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":82,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":640,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":254,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":506,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":144,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":98,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":72,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":287,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":295,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":419,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":372,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":474,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":142,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":429,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":173,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":741,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":107,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalFullCollectionExists":591,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":343,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":442,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":153,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":468,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":284,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":670,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":776,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":874,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":576,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":286,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":285,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":732,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":760,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":687,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":731,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":571,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":727,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":431,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":605,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":845,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":74,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":131,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":644,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":453,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":182,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":748,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":221,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":654,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":297,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":539,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":125,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":835,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":579,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":315,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":859,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":222,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":856,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":353,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":751,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":417,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":14,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":883,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":797,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":17,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":83,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":671,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":149,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":536,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":877,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":24,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":523,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":26,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":857,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":436,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":448,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":684,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":853,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":600,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":388,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":694,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":249,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":165,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":250,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":520,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":716,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":30,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":696,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":384,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":685,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":777,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":779,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":484,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":42,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":850,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":570,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":553},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"7b67b50f-2eae-11e6-aff7-a3192dd0a7ef","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"7b689f70-2eae-11e6-aff7-1f63048fea81","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"7b68c681-2eae-11e6-aff7-57e11a22ff4c","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7b68ed92-2eae-11e6-aff7-cd4f55fdc841","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"7b68ed93-2eae-11e6-aff7-35119e9e2f14","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"7b6914a4-2eae-11e6-aff7-b52801878935","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[146],"tindex":"7b693bb5-2eae-11e6-aff7-45b3b4192a73","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"tindex":"7b693bb6-2eae-11e6-aff7-0f33f7665500","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[219],"tindex":"7b6962c7-2eae-11e6-aff7-896100fc3e61","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"7b6989d8-2eae-11e6-aff7-59df5f58a035","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"7b69b0e9-2eae-11e6-aff7-870eba98fa23","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,95,96,360,97,98,99,100,101,102,103,104,105,106,107,108,109,110,361,362,363,364,365,366,367],"tindex":"7b69ff0a-2eae-11e6-aff7-cd517904a2cb","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[368,369,370,371,372,373,374,375],"tindex":"7b69ff0b-2eae-11e6-aff7-571e791ffe41","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"7b6a261c-2eae-11e6-aff7-db62a54f373a","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7b6a4d2d-2eae-11e6-aff7-a7424bd797e6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[376],"tindex":"7b6a743e-2eae-11e6-aff7-378f336a2d46","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7b6a743f-2eae-11e6-aff7-63b3eafe037f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,317,318,400,401,402,403,319,320,404,405,406],"tindex":"7b6ac260-2eae-11e6-aff7-7950fe031f0e","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[407,44,408,116,409],"tindex":"7b6ac261-2eae-11e6-aff7-73d669b09fc8","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[410,411],"tindex":"7b6ae972-2eae-11e6-aff7-d56c4dc2a3dc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[412,413,414,415],"tindex":"7b6b1083-2eae-11e6-aff7-6f227c606997","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    K K = null;\n                    if (java.util.Map<V, K>.containsKey(value)) {\n                        key = java.util.Map<V, K>.remove(value);\n                        java.util.Map<K, V>.remove(key);\n                    } \n                    return key;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[217,221,231,234,235,238,239,240,241,242],"tindex":"7b6b1084-2eae-11e6-aff7-290d8ac0e587","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"7b6b3795-2eae-11e6-aff7-d5e56886175a","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7b6b5ea6-2eae-11e6-aff7-a36264c729f0","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565],"tindex":"7b6b5ea7-2eae-11e6-aff7-c5bae255855e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"7b6b5ea8-2eae-11e6-aff7-8b86620d1f7f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[566],"tindex":"7b6b85b9-2eae-11e6-aff7-9f7f1a21f5ba","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[567,568,569,570,571,128,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591],"tindex":"7b6b85ba-2eae-11e6-aff7-7bee33594f47","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[592,593,594],"tindex":"7b6b85bb-2eae-11e6-aff7-177d74a8dfc3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[595,596,597,598],"tindex":"7b6baccc-2eae-11e6-aff7-5992c74c8163","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"7b6baccd-2eae-11e6-aff7-9fe80dbbbb59","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"7b6bd3de-2eae-11e6-aff7-557a74c820b0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[599],"tindex":"7b6bd3df-2eae-11e6-aff7-370bb08f7c42","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"7b6bd3e0-2eae-11e6-aff7-f53b14ff817a","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7b6bd3e1-2eae-11e6-aff7-f109db958e9b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7b6bfaf2-2eae-11e6-aff7-d751a5fdf04d","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[600],"tindex":"7b6bfaf3-2eae-11e6-aff7-49d269c42194","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[601],"tindex":"7b6bfaf4-2eae-11e6-aff7-3bc0640f65c1","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7b6bfaf5-2eae-11e6-aff7-a5081f5f6c35","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7b6c2206-2eae-11e6-aff7-eb40dab759bc","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[383,384,389,390,316,317,318,319,320,602,603,604,605,606,607,608,609,610,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628],"tindex":"7b6c2207-2eae-11e6-aff7-9d3889f04db5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[629],"tindex":"7b6c4918-2eae-11e6-aff7-05f502c7b9c5","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7b6c4919-2eae-11e6-aff7-bb0be0acc85d","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"7b6c491a-2eae-11e6-aff7-4dca79cd882e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[630,631,49,50,632,633,634,635,344,348,636,637,121,122,638,639,640,641,642,643],"tindex":"7b6c702b-2eae-11e6-aff7-e7f5fef39ed8","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    if (coll != null) {\n                        final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                        while (i.hasNext()) {\n                            final boolean boolean = remove(i.next(), 1);\n                            result = result || changed;\n                        }\n                    } \n                    return result;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"7b6c702c-2eae-11e6-aff7-bb36d0b8236b","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[644,645],"tindex":"7b6c702d-2eae-11e6-aff7-f598344299d6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[646],"tindex":"7b6c973e-2eae-11e6-aff7-c9722f7d31e7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[647],"tindex":"7b6c973f-2eae-11e6-aff7-f7e13c74156c","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[648,373,374,375,649,650,651,652,653],"tindex":"7b6cbe50-2eae-11e6-aff7-4fe83666dc17","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                {\n                    if (methodName == null) {\n                        throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7b6cbe51-2eae-11e6-aff7-95a27b69b085","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[654],"tindex":"7b6cbe52-2eae-11e6-aff7-c55bfdafe6be","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"7b6ce563-2eae-11e6-aff7-e3f3dbb3974d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    if (coll != null) {\n                        final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                        while (i.hasNext()) {\n                            final boolean boolean = remove(i.next(), 1);\n                            result = result || changed;\n                        }\n                    } \n                    return result;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7b6ce564-2eae-11e6-aff7-cdf07d499692","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"7b6ce565-2eae-11e6-aff7-1729b5d67733","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == end) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[377,391,655,656,657,394,404,658,659,660],"tindex":"7b6dcfc6-2eae-11e6-aff7-9fe3f2b2dd9f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[661],"tindex":"7b6dcfc7-2eae-11e6-aff7-e1952ec9598b","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[166,662,663,664,665,666,667,668,669,670,671,672,450,673,674,675,676,677,678,679,680,681,682,480,514,683,684,685,686,687,547,560,688,689,690,691,692,693,694,695],"tindex":"7b6df6d8-2eae-11e6-aff7-9d575fb18fb7","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7b6e44f9-2eae-11e6-aff7-bd860e79befa","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7b6e44fa-2eae-11e6-aff7-3b7266d898cc","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(size(), coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"7b6e6c0b-2eae-11e6-aff7-6de41a69f3b0","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                {\n                    if (methodName == null) {\n                        throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[696,697,698],"tindex":"7b6e6c0c-2eae-11e6-aff7-098a2b4f5e99","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[699,700,701,702],"tindex":"7b6e931d-2eae-11e6-aff7-1de9dca0820b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"7b6eba2e-2eae-11e6-aff7-3db21845f1e2","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[703],"tindex":"7b6eba2f-2eae-11e6-aff7-c938a3b400da","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[704,646,705,706],"tindex":"7b6ee140-2eae-11e6-aff7-732f8c9c96a7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[707,708],"tindex":"7b6f0851-2eae-11e6-aff7-11b51151d9b0","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"7b6f0852-2eae-11e6-aff7-916ff19c69c2","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[709],"tindex":"7b6f2f63-2eae-11e6-aff7-dbf5107d32d3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if ((b == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"7b6f5674-2eae-11e6-aff7-79e1e7286d59","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7b6f5675-2eae-11e6-aff7-d5fdd288ea5a","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"7b6f7d86-2eae-11e6-aff7-d797ef5adc88","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7b6f7d87-2eae-11e6-aff7-f78be076e39c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[710,18],"tindex":"7b6fa498-2eae-11e6-aff7-6730c4b47374","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[711],"tindex":"7b6fa499-2eae-11e6-aff7-3bab1a505ba4","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[712,713,714,715,716,600],"tindex":"7b7019ca-2eae-11e6-aff7-f14d1b079824","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((end1 - end1) > (start2 - end2)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start2","end1":"end1","start2":"end2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"7b7067eb-2eae-11e6-aff7-b56a7e822320","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[339],"tindex":"7b708efc-2eae-11e6-aff7-41e80f118ee3","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[],"tindex":"7b708efd-2eae-11e6-aff7-6153d3481b97","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,677,745,746,747,748,749,750,751,752,753,754,755,756,678,757,758,759,760,761,566,762,763,764,629,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794],"tindex":"7b70dd1e-2eae-11e6-aff7-816d497d44fb","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[795],"tindex":"7b71042f-2eae-11e6-aff7-17b85b6cb1c1","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[796,797,704,646,706,798,799,800,801,802,803,804,805,806,807,808,809,810,685,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840],"tindex":"7b712b40-2eae-11e6-aff7-17da164e3bbc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870],"tindex":"7b712b41-2eae-11e6-aff7-c5a69db72762","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[871,872],"tindex":"7b715252-2eae-11e6-aff7-5140a0f278ab","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7b715253-2eae-11e6-aff7-a79e6550dd30","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"7b717964-2eae-11e6-aff7-dd361ce7d6d5","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"7b717965-2eae-11e6-aff7-737c91fbc9a0","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[593],"tindex":"7b71a076-2eae-11e6-aff7-27c682585641","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[790],"tindex":"7b71c787-2eae-11e6-aff7-21b5f2148015","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"7b71c788-2eae-11e6-aff7-f7981e1f6fbf","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7b71ee99-2eae-11e6-aff7-55faeff01d50","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[49,634,121,873],"tindex":"7b71ee9a-2eae-11e6-aff7-51ff453cf227","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[794],"tindex":"7b7215ab-2eae-11e6-aff7-0dfc73a4115e","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7b73000c-2eae-11e6-aff7-a33bfee3d804","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[],"tindex":"7b73000d-2eae-11e6-aff7-01a8fddd0a8b","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"removeCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"7b73271e-2eae-11e6-aff7-299bc9a995c4","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7b73271f-2eae-11e6-aff7-a1db69134d0f","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[874,875,876,877,878,879,880,881,882,883],"tindex":"7b734e30-2eae-11e6-aff7-f739f54b912e","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7b734e31-2eae-11e6-aff7-8deb89aa8c28","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    K K = null;\n                    if (java.util.Map<V, K>.containsKey(value)) {\n                        key = java.util.Map<V, K>.remove(value);\n                        java.util.Map<K, V>.remove(key);\n                    } \n                    return key;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[884,885],"tindex":"7b737542-2eae-11e6-aff7-7789f59dcea9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}