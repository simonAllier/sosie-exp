{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":967,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":151,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":504,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":968,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":314,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":804,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":1046,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":789,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":871,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":625,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":1142,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":1,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":786,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":972,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":617,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":926,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":252,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":385,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":251,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":69,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":977,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":200,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":349,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":274,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":764,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":680,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":941,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":486,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":846,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":229,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":969,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":502,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":761,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":1124,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":120,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":16,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":729,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":722,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":468,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":642,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":561,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":371,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":551,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":889,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":592,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":411,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":676,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":361,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":1056,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":319,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":613,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":932,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":1127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":335,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":1055,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":26,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":788,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":811,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":545,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":916,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":853,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":913,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":992,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":994,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":927,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":201,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":284,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":303,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":987,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":467,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":1006,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":661,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":1069,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":372,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":699,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":1048,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":1020,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":900,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":18,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":840,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":762,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":635,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":831,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":643,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":713,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":149,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":310,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":399,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":1084,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":419,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":756,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":379,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":139,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":1087,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":1102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":190,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":12,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":931,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":357,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":1116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":332,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":1038,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":590,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":851,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":447,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":448,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":859,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":856,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":113,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":366,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":772,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":484,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":1017,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":671,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":949,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":469,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":898,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":902,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":402,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":1154,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":423,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":1152,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":356,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":86,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":651,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":558,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":749,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":433,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":1053,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":908,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":985,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":725,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":581,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":1074,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":750,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":184,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":906,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":125,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":156,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":621,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":734,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":948,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":872,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":268,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":882,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":1140,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":1136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":697,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":975,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":933,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":0,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":628,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":1026,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":1122,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":810,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":792,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":1003,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":429,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":449,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":766,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":660,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":878,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":1027,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":639,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":974,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":312,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":723,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":382,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":870,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":473,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":602,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":267,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":363,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":569,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":37,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":1083,"org.apache.commons.collections4.IteratorUtilsTest.testToList":57,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":819,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":730,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":839,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":347,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":822,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":801,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":657,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":480,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":1138,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":645,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":855,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":9,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":741,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":787,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":296,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":373,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":641,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":689,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":518,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":647,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":1030,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":204,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":580,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":980,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":1085,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":25,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":163,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":696,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":880,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":760,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":890,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":535,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":50,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":600,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":277,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":694,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":861,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":431,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":407,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":571,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":199,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":1160,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":942,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":970,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":798,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":391,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":944,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":453,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":820,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":233,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":695,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":707,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":1153,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":306,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":709,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":708,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":1114,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":910,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":331,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":1110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":451,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":784,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":291,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":466,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":663,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":1015,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":281,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":409,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":915,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":56,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":973,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":1028,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":177,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":744,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":524,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":133,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":144,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":686,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":875,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":881,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":320,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":376,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":135,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":463,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":464,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":758,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":907,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":1149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":465,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":1050,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":60,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":359,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":847,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":1086,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":1034,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":98,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":712,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":797,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":740,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":794,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":316,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":1130,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":1156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":5,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":698,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":492,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":1079,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":1101,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":498,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":603,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":1129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":243,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":946,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":1155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":236,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":412,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":1097,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":991,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":1115,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":519,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":489,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":918,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":1005,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":1007,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":238,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":665,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":765,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":1088,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":23,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":117,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":434,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":208,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":1090,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":1091,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":1060,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":1089,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":418,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":119,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":539,"org.apache.commons.collections4.list.TreeListTest.testBug35258":403,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":353,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":1121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":103,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":427,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":568,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":566,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":1126,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":943,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":351,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":352,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":984,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":623,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":903,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":295,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":751,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":843,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":808,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":947,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":460,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":462,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":1163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":733,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":611,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":887,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":1128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":249,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":883,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":246,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":884,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":626,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":13,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":1043,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":112,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":627,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":1008,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":1108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":862,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":588,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":940,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":40,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":577,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":107,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":743,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":886,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":10,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":400,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":1146,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":633,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":844,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":1000,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":292,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":1052,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":648,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":276,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":1013,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":1059,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":34,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":739,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":33,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":1133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":32,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":510,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":849,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":266,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":367,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":961,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":963,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":962,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":440,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":1012,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":833,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":333,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":802,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":275,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":227,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":675,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":549,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":240,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":848,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":1044,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":234,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":1147,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":1162,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":506,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":653,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":752,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":753,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":754,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":210,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":795,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":909,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":996,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":1039,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":736,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":544,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":1033,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":129,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":154,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":945,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":631,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":137,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":337,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":720,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":1022,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":63,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":914,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":397,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":813,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":727,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":1066,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":100,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":624,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":398,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":526,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":546,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":270,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":1150,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":187,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":490,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":279,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":48,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":72,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":494,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":315,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":1077,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":3,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":737,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":1070,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":128,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":479,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":597,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":667,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":705,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":435,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":896,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":313,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":767,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":584,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":497,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":821,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":495,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":241,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":702,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":245,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":455,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":865,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":687,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":952,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":640,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":1137,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":1054,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":888,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":472,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":738,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":988,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":459,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":1019,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":380,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":550,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":1125,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":937,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":769,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":852,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":1032,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":997,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":834,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":1100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":215,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":1099,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":1098,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":272,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":934,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":530,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":1067,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":634,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":901,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":256,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":517,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":978,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":1096,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":515,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":242,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":80,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":1051,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":837,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":1143,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":378,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":828,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":36,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":771,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":1045,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":850,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":1018,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":278,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":488,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":438,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":778,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":1002,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":61,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":971,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":258,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":891,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":1161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":570,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":1037,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":893,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":922,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":192,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":983,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":559,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":21,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":1065,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":239,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":389,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":655,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":746,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":755,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":432,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":1025,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":904,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":644,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":827,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":387,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":742,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":982,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":1107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":294,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":892,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":999,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":171,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":512,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":1040,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":1063,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":73,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":718,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":964,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":288,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":965,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":370,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":966,"org.apache.commons.collections4.list.TreeListTest.testRemove":401,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":491,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":674,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":995,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":444,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":443,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":594,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":426,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":659,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":230,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":905,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":445,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":413,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":683,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":885,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":599,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":923,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":224,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":1112,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":1073,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":897,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":936,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":226,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":830,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":869,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":293,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":773,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":860,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":345,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":780,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":1104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":1106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":1105,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":522,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":548,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":1135,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":704,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":263,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":691,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":921,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":533,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":556,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":531,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":482,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":253,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":652,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":1021,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":326,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":620,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":1001,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":273,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":583,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":483,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":1082,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":219,"org.apache.commons.collections4.list.TreeListTest.testListEquals":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":22,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":593,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":1010,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":66,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":1092,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":1093,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":1094,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":823,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":167,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":1024,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":759,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":993,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":1031,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":700,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":608,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":1009,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":654,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":868,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":710,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":607,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":701,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":141,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":408,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":392,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":1158,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":1123,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":1072,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":341,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":805,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":829,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":622,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":955,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":956,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":954,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":271,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":325,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":244,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":717,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":217,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":591,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":925,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":6,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":365,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":854,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":678,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":1164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":867,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":1120,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":1148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":209,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":1119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":336,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":537,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":579,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":799,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":935,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":605,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":1080,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":155,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":960,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":959,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":121,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":958,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":547,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":763,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":706,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":1071,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":384,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":404,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":232,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":858,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":457,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":649,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":928,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":1042,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":322,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":785,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":543,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":990,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":1113,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":793,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":857,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":1035,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":513,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":986,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":496,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":218,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":815,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":816,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":1144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":318,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":814,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":321,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":2,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":726,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":196,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":170,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":920,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":406,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":770,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":383,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":866,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":879,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":911,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":116,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":664,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":672,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":1049,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":344,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":842,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":638,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":330,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":458,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":348,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":783,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":470,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":863,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":636,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":179,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":791,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":118,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":394,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":976,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":142,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":563,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":1041,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":565,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":1095,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":225,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":845,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":679,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":136,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":1016,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":877,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":368,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":1004,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":422,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":1145,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":779,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":1103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":334,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":690,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":436,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":1109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":307,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":874,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":1141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":912,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":777,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":776,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":735,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":835,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":283,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":575,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":1029,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":20,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":951,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":552,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":493,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":939,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":1036,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":235,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":471,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":1011,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":287,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":1078,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":214,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":812,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":260,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":437,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":782,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":832,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":658,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":841,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":1132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":174,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":405,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":476,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":646,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":298,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":668,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":328,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":838,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":47,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":953,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":1131,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":509,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":474,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":731,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":728,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":555,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":152,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":122,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":596,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":806,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":523,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":1157,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":396,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":774,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":1061,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":1014,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":615,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":790,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":614,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":979,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":1058,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":610,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":255,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":800,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":807,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":1139,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":919,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":1064,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":732,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":894,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":27,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":317,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":685,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":1075,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":49,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":930,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":950,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":836,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":576,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":824,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":924,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":1081,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":259,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":500,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":1117,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":1047,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":917,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":1062,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":164,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":895,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":30,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":1134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":31,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":289,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":632,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":768,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":1118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":175,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":721,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":340,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":39,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":311,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":520,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":1068,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":53,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":929,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":94,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":176,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":781,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":873,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":560,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":938,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":364,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":350,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":388,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":957,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":595,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":478,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":818,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":817,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":247,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":329,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":338,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":1111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":261,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":666,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":864,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":899,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":1159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":213,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":825,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":998,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":826,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":386,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":1076,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":487,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":981,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":420,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":250,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":989,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":1151,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":1057,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":505,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":876,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":1023,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":587},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0],"tindex":"f04a00d1-2e7d-11e6-838d-2f297563a054","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"f04ac422-2e7d-11e6-838d-373dcd0cbebf","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f04aeb33-2e7d-11e6-838d-252ebdcdcff6","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[47],"tindex":"f04aeb34-2e7d-11e6-838d-d5ee230f03d7","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f04b1245-2e7d-11e6-838d-49051ffed45f","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f04b3956-2e7d-11e6-838d-39b580114c9c","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[48],"tindex":"f04b3957-2e7d-11e6-838d-81c4e34c07f7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[49,50,51,52,53],"tindex":"f04b8778-2e7d-11e6-838d-371c66ccd3c0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[54],"tindex":"f04b8779-2e7d-11e6-838d-c7ab62d383a2","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[55,56,57],"tindex":"f04bae8a-2e7d-11e6-838d-838b6e7e7636","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[],"tindex":"f04bae8b-2e7d-11e6-838d-a527dd42a851","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((start2 - start1) > (end2 - start1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"end2","end1":"start2","start2":"start1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f04bfcac-2e7d-11e6-838d-9f885f36bd14","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[58],"tindex":"f04bfcad-2e7d-11e6-838d-17554ac89531","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll1.size())) {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f04c23be-2e7d-11e6-838d-0593ac966991","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"f04c4acf-2e7d-11e6-838d-d33c1afab0c0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[115,116],"tindex":"f04c71e0-2e7d-11e6-838d-a1bffab22122","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f04c71e1-2e7d-11e6-838d-ef2ec6fb94ac","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[117,118],"tindex":"f04c98f2-2e7d-11e6-838d-6980d17d21e6","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],"tindex":"f04d3533-2e7d-11e6-838d-b7d13f717590","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"f04d5c44-2e7d-11e6-838d-bb3e9ca3db41","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f04d5c45-2e7d-11e6-838d-6dbe2188ca6d","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[206,207],"tindex":"f04d8356-2e7d-11e6-838d-27f3a25c8f69","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"f04daa67-2e7d-11e6-838d-554d88fa310a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390],"tindex":"f04df888-2e7d-11e6-838d-b3e058575250","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"f04df889-2e7d-11e6-838d-61469abcf019","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[391,392,393,48],"tindex":"f04df88a-2e7d-11e6-838d-6353d4993c8b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key5"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[394,395,396,397,398],"tindex":"f04e1f9b-2e7d-11e6-838d-7fa3f1adc0e9","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[399,400],"tindex":"f04e1f9c-2e7d-11e6-838d-b3a7cb769fa2","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434],"tindex":"f04e1f9d-2e7d-11e6-838d-e3bdb29d5878","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"tindex":"f04e46ae-2e7d-11e6-838d-99a09474588e","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[468],"tindex":"f04e6dbf-2e7d-11e6-838d-edd2992b124d","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[469],"tindex":"f04e6dc0-2e7d-11e6-838d-1f2c0cf9f626","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"f04e93d1-2e7d-11e6-838d-91158eba581e","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"f04e93d2-2e7d-11e6-838d-fddec9e0f084","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[470],"tindex":"f04ebae3-2e7d-11e6-838d-ebc19b76bb64","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f04ebae4-2e7d-11e6-838d-59da075fc949","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[471],"tindex":"f04ebae5-2e7d-11e6-838d-5bd51ef9ff40","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"f04ebae6-2e7d-11e6-838d-29085dbf4da8","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f04ee1f7-2e7d-11e6-838d-897790570689","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[472],"tindex":"f04ee1f8-2e7d-11e6-838d-1d5d6a8b9da8","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f04ee1f9-2e7d-11e6-838d-490adb5f9f1b","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[473],"tindex":"f04f090a-2e7d-11e6-838d-fb232510c437","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[474,475,476,477],"tindex":"f04f090b-2e7d-11e6-838d-5bffc38f043a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"f04f572c-2e7d-11e6-838d-b9caa32c16c8","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f04f572d-2e7d-11e6-838d-1d2f158276f6","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[478],"tindex":"f04f7e3e-2e7d-11e6-838d-8712b376cba6","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f04f7e3f-2e7d-11e6-838d-63621d9ff1ee","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"f04fa550-2e7d-11e6-838d-fdbe260b699c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[479],"tindex":"f04fa551-2e7d-11e6-838d-f325f0cef9ab","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[480,198,481,482,483,484,485,486,487,488],"tindex":"f04fa552-2e7d-11e6-838d-95a63650079f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529],"tindex":"f04fcc63-2e7d-11e6-838d-b9527f885977","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[530,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,369,371,372,373,374,375,376,377,378,379,380,381,382,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,125,127,155,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,94,722,95,723,96,97,98,99,100,724,101,102,103,104,105,725,726,727,728,106,107,108,109,729,730,731,110,732,733,734,111,735,112,113,114,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766],"tindex":"f04fcc64-2e7d-11e6-838d-3b84018f0e25","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[767,768],"tindex":"f04ff375-2e7d-11e6-838d-7dcea6539e1e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[769],"tindex":"f0501a86-2e7d-11e6-838d-69bed597186d","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"f05068a7-2e7d-11e6-838d-b1044767c19a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:575","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[393,48,391,392],"tindex":"f0512bf8-2e7d-11e6-838d-ff5bb313f5c9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803],"tindex":"f0515309-2e7d-11e6-838d-4d421ac1c956","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[473],"tindex":"f0517a1a-2e7d-11e6-838d-153a54f43951","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f051a12b-2e7d-11e6-838d-191889eab78f","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[804],"tindex":"f051a12c-2e7d-11e6-838d-f51823b4c12e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[805,806,807,808,809,810,811,812,813,814,815,816,474,475,476,477],"tindex":"f051c83d-2e7d-11e6-838d-abb3c3769b7d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[817,818,819,820],"tindex":"f051ef4e-2e7d-11e6-838d-35db9982708e","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((preds.int) == 0) {\n                        return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n                    } \n                    if ((preds.int) == 1) {\n                        return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n                    } \n                    return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[821,822,823,824],"tindex":"f052165f-2e7d-11e6-838d-d9a67ef6e60e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[825,826,827,828,829],"tindex":"f0521660-2e7d-11e6-838d-d779c66e7fc6","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f0526481-2e7d-11e6-838d-a509a8cd76e9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[830,831,832,636,833,637,834,835,836,837,838,839,840,841,842,638,843,844,639,845,846,847,848,849,640,850,641,851,852,853,854,855,856,857,642,858,859,643,860,861,862,644,863,645,864,865,866,867,868,869,870,871,872,646,873,120,122,123,125,126,127,128,133,134,135,136,139,150,153,154,155,874,875,876,647,877,878,648,879,880,881,882,883,884,649,885,650,886,887,888,889,890,891,892,651,893,894,652,895,896,897,653,898,899,900,655,901,656,902,903,904,905,906,907,908,909,910,657,911,912,913,914,658,915,659,916,917,918,919,920,921,922,660,923,924,661,925],"tindex":"f0528b92-2e7d-11e6-838d-7b8c3fee702e","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"f052b2a3-2e7d-11e6-838d-73361abe8a29","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"f052b2a4-2e7d-11e6-838d-6989f215e195","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f052d9b5-2e7d-11e6-838d-e12f500a4a9b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[],"tindex":"f05300c6-2e7d-11e6-838d-dfd0942d18af","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"f05375f7-2e7d-11e6-838d-1367c22c9286","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((preds.int) == 0) {\n                        return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n                    } \n                    if ((preds.int) == 1) {\n                        return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n                    } \n                    return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[48,392,391],"tindex":"f05375f8-2e7d-11e6-838d-ab70c0e7c347","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"f0539d09-2e7d-11e6-838d-ed62fe624f38","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (count == 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f053c41a-2e7d-11e6-838d-8329a4f28b2d","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[770,771,773,779,926,780,781,783,785,786,787,788,927,790,928,792,793,794,795,796,797,798,799,800,801,802,803,929,930,931],"tindex":"f053c41b-2e7d-11e6-838d-fd9a49d308d6","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"f053c41c-2e7d-11e6-838d-591a1981cefa","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[932],"tindex":"f053c41d-2e7d-11e6-838d-bb0964ac017b","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtBinaryOperatorImpl","sourcecode":"endIndex < startIndex"},"failures":[405,402,403,404,933,934,935,401,407,408,936,937,409,410,411,412,413,414,415,416,938,939,940,941,417,418,419,420,421,422,423,406,424,425,942,426,427,428,429,430,431,432,433,434,943,944,945],"tindex":"f053eb2e-2e7d-11e6-838d-89d97f99bfb9","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index < startIndex) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex","endIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[556],"tindex":"f053eb2f-2e7d-11e6-838d-c7ec6fd9d434","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[946,400],"tindex":"f053eb30-2e7d-11e6-838d-c984923f9e3a","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f05571d1-2e7d-11e6-838d-3d3fd7c75c44","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f05598e2-2e7d-11e6-838d-d19872eb1dac","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f055bff3-2e7d-11e6-838d-755b472962fb","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[60,947,948,95,723],"tindex":"f055bff4-2e7d-11e6-838d-29e8747d2bd3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f055bff5-2e7d-11e6-838d-fdb88a6768b2","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[949,950,951],"tindex":"f055e706-2e7d-11e6-838d-ff7316a22a31","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[952,953],"tindex":"f055e707-2e7d-11e6-838d-e15bdd3f90c5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f055e708-2e7d-11e6-838d-ddbe58d5ef2e","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"f055e709-2e7d-11e6-838d-8377d903ad74","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[954,955,956,957,351,352,353,358,531,532,533,538,563,564,565,570,958,959,960,961,962,963,607,608,609,614,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,840,841,994,845,995,996,997,846,998,847,999,851,1000,1001,1002,1003,1004,857,858,1005,1006,1007,1008,1009,870,871,119,873,120,124,128,141,142,144,145,147,150,153,1010,1011,1012,875,1013,879,1014,1015,1016,880,1017,1018,1019,1020,1021,1022,892,893,1023,1024,1025,896,654,1026,898,1027,902,1028,1029,1030,1031,1032,908,909,1033,911,912,1034,916,1035,1036,1037,1038,1039,922,923,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,668,671,673,707,708,709,710,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,107,108,109,729,752,753,754,755,777,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,522,1130,526,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156],"tindex":"f0560e1a-2e7d-11e6-838d-2521aae13ac1","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"f0560e1b-2e7d-11e6-838d-835987a037d0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1157],"tindex":"f056352c-2e7d-11e6-838d-116a2cde776d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1158,1159],"tindex":"f056352d-2e7d-11e6-838d-f56b85163c12","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1160,1161,1162],"tindex":"f056352e-2e7d-11e6-838d-6f7644fc5b14","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[1163],"tindex":"f0565c3f-2e7d-11e6-838d-9bce4a211c3a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f0565c40-2e7d-11e6-838d-6df3ae398247","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"f0565c41-2e7d-11e6-838d-cd30b25fb143","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"f0568352-2e7d-11e6-838d-bb49b50f7684","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[1164],"tindex":"f0568353-2e7d-11e6-838d-cd713c96d66d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"f0568354-2e7d-11e6-838d-cf0a71c8952f","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}