{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":42,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":270,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":340,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":263,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":85,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":30,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":83,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":105,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":287,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":43,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":369,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":226,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":31,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":224,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":214,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":304,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":241,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":152,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":154,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":118,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":153,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":182,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":184,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":234,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":23,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":121,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":239,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":193,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":291,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":292,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":204,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":345,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":334,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":290,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":139,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":192,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":97,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":248,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":288,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":333,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":40,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":222,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":372,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":5,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":64,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":151,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":60,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":140,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":149,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":150,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":44,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":236,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":262,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":303,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":69,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":347,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":221,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":98,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":123,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":282,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":238,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":70,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":250,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":77,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":207,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":324,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":358,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":299,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":57,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":101,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":186,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":353,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":94,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":188,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":99,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":103,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":256,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":336,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":202,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":255,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":257,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":254,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":38,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":191,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":352,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":306,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":36,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":165,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":357,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":229,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":206,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":323,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":111,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":319,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":104,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":145,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":327,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":168,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":243,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":201,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":251,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":335,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":88,"org.apache.commons.collections4.list.TreeListTest.testBug35258":219,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":252,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":253,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":102,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":269,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":79,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":195,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":285,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":359,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":368,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":37,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":310,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":261,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":362,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":235,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":363,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":52,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":55,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":321,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":112,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":46,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":361,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":199,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":329,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":300,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":53,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":218,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":293,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":294,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":298,"org.apache.commons.collections4.list.TreeListTest.testRemove":215,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":245,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":125,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":12,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":213,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":246,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":160,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":227,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":274,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":233,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":272,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":297,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":322,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":367,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":183,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":348,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":81,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":179,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":185,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":318,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":72,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":278,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":314,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":237,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":273,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":354,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":100,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":228,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":7,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":80,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":289,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":247,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":143,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":120,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":280,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":196,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":260,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":172,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":180,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":281,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":130,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":332,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":338,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":305,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":320,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":232,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":11,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":124,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":311,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":22,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":116,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":144,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":296,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":76,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":339,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":156,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":349,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":87,"org.apache.commons.collections4.map.LRUMapTest.testLRU":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":0,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":75,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":342,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":61,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":309,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":325,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":132,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":337,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":51,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":211,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":366,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":1,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":230,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":209,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":365,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":231,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":3,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":142,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":205,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":344,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":110,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":212,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":240,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":279,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":208,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":49,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":341,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":107,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":169,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":91,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":89,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":129,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":330,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":308,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":216,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":86,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":210},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"e4d1f36a-2e98-11e6-95e1-4d0420c89587","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"e4d2b6bb-2e98-11e6-95e1-47a19829abab","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"e4d2ddcc-2e98-11e6-95e1-5dd3620dc981","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"e4d304dd-2e98-11e6-95e1-e79ae6c4ffe2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof java.lang.Long) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[99,100],"tindex":"e4d304de-2e98-11e6-95e1-7395c9584a26","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[101,102,103,104,105,106,107,108,109,110],"tindex":"e4d32bef-2e98-11e6-95e1-0582ad9284b9","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label instanceof java.lang.Long) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"e4d35300-2e98-11e6-95e1-d95d74f12e0d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[111,112],"tindex":"e4d35301-2e98-11e6-95e1-b32d10e72e82","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[113],"tindex":"e4d37a12-2e98-11e6-95e1-f373604ecda8","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[114,115,116,117,118,119,120],"tindex":"e4d3a123-2e98-11e6-95e1-d90956f0b291","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[121],"tindex":"e4d3c834-2e98-11e6-95e1-59d0a081baf4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"e4d3c835-2e98-11e6-95e1-71b7ee6b983e","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"e4d3ef46-2e98-11e6-95e1-4bb6d318b3c3","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:229","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (decorated().contains(next)) {\n                    collectionRetainAll.add(next);\n                } \n            }\n            if ((collectionRetainAll.size()) == (decorated().size())) {\n                return false;\n            } \n            if ((collectionRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(collectionRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[122],"tindex":"e4d41657-2e98-11e6-95e1-55dc09f3d411","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"e4d43d68-2e98-11e6-95e1-99e47a9e12b7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl","sourcecode":"(callCounter) == 0"},"failures":[],"tindex":"e4d46479-2e98-11e6-95e1-f7ba9acf43e9","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"start"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"e4d4647a-2e98-11e6-95e1-c7f4104e92ab","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (null == key1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[123],"tindex":"e4d4b29b-2e98-11e6-95e1-4f6f18beaaba","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(sub);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"toIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"e4d4d9ac-2e98-11e6-95e1-cbd340fe1a60","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e4d500bd-2e98-11e6-95e1-1b712b3b756c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4d500be-2e98-11e6-95e1-6330b5df1293","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"e4d527cf-2e98-11e6-95e1-fb538431ee9b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[119],"tindex":"e4d527d0-2e98-11e6-95e1-3b4d971f43d5","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[191,192,193,194,195,196,197,198],"tindex":"e4d54ee1-2e98-11e6-95e1-c155f6338c64","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object != null) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtFieldReadImpl","sourcecode":"previousObjectSet"},"failures":[],"tindex":"e4d54ee2-2e98-11e6-95e1-110c57830a85","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst) {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previousObjectSet":"trueFirst"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[199],"tindex":"e4d54ee3-2e98-11e6-95e1-499a45f22976","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"e4d575f4-2e98-11e6-95e1-87e833720fdc","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null ? key == null : nextElement.equals(p)) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"key","nextElement":"key"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[200,137],"tindex":"e4d575f5-2e98-11e6-95e1-e7784ef90757","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[201,202,203,204,205,206,207,208,209],"tindex":"e4d575f6-2e98-11e6-95e1-53bedeb185ee","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"hashIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[210,211,212,213,214],"tindex":"e4d59d07-2e98-11e6-95e1-b7a0cc54e2a4","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl","sourcecode":"(root) != null"},"failures":[137,215,216,217,218,219,220,221,222,223,224,192,193,225,226,197,227],"tindex":"e4d5c418-2e98-11e6-95e1-57c51291ae73","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (previous != null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"previous"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[114,228,115,229,116,117,230,231,118,119,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,120,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"e4d5c419-2e98-11e6-95e1-d9928e5852c2","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[112],"tindex":"e4d5eb2a-2e98-11e6-95e1-f7b8a0583107","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e4d5eb2b-2e98-11e6-95e1-8b16570d3959","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[137],"tindex":"e4d6876c-2e98-11e6-95e1-e7109b8f4037","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicates == null) {\n                        return null;\n                    } \n                    return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"e4d6876d-2e98-11e6-95e1-77625ca17a73","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"e4d6ae7e-2e98-11e6-95e1-2d7caf3a69c2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"tindex":"e4d6ae7f-2e98-11e6-95e1-f7ad92c35653","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[215,216,220,217,219,221,222,223,224,192,193,225,226,197,227],"tindex":"e4d6d590-2e98-11e6-95e1-9f884ebbd323","method":{"position":"org.apache.commons.collections4.list.TreeList:699","type":"CtMethodImpl","sourcecode":"private int getOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return 0;\n            } \n            return node.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[],"tindex":"e4d6d591-2e98-11e6-95e1-61daeb0f44aa","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[],"tindex":"e4d6fca2-2e98-11e6-95e1-ed8b9bc7f0ef","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"e4d6fca3-2e98-11e6-95e1-4550ec0713a9","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[],"tindex":"e4d6fca4-2e98-11e6-95e1-918a23b49386","method":{"position":"org.apache.commons.collections4.SplitMapUtils:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object arg0) {\n    if (arg0 instanceof java.lang.String) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (arg0 == (org.apache.commons.collections4.SplitMapUtils.WrappedGet.this)) {\n                return true;\n            } \n            return (arg0 instanceof org.apache.commons.collections4.SplitMapUtils.WrappedGet) && (((org.apache.commons.collections4.SplitMapUtils.WrappedGet<?, ?>)(arg0)).org.apache.commons.collections4.Get<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedGet.this.org.apache.commons.collections4.Get<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"arg0"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl","sourcecode":"(other.size()) != 1"},"failures":[308,309],"tindex":"e4d723b5-2e98-11e6-95e1-9dddad1b26e6","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[310],"tindex":"e4d723b6-2e98-11e6-95e1-7f3db93a22c0","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"e4d74ac7-2e98-11e6-95e1-0136e38bc1d2","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[311,312,313],"tindex":"e4d74ac8-2e98-11e6-95e1-3d7456d6eae5","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[314,315,316,317,318,319],"tindex":"e4d74ac9-2e98-11e6-95e1-41018cacb102","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[320,321,11,13,15,16,17],"tindex":"e4d771da-2e98-11e6-95e1-97d3212fd487","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[322,323,324],"tindex":"e4d771db-2e98-11e6-95e1-e1ba878d7315","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > count) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"count","newCapacity":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"e4d798ec-2e98-11e6-95e1-d929a839c1ed","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[325],"tindex":"e4d7bffd-2e98-11e6-95e1-6df2aefa478a","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.left, current)"},"failures":[],"tindex":"e4d7bffe-2e98-11e6-95e1-73ac5acb11c5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(h, current)) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"h","left":"h"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtBinaryOperatorImpl","sourcecode":"cur == cursor"},"failures":[],"tindex":"e4d80e1f-2e98-11e6-95e1-73667100a939","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == cursor) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor","cur":"cursor"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,310,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"e4d83530-2e98-11e6-95e1-fda5c5c4f461","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[111],"tindex":"e4d83531-2e98-11e6-95e1-977358b62f36","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[353],"tindex":"e4d85c42-2e98-11e6-95e1-dd908c6e6a27","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[354],"tindex":"e4d85c43-2e98-11e6-95e1-f30382305630","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e4d85c44-2e98-11e6-95e1-4593601aa708","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[1,10],"tindex":"e4d88355-2e98-11e6-95e1-952924be5522","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity <= oldCapacity"},"failures":[],"tindex":"e4d88356-2e98-11e6-95e1-5133d8b66984","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index <= index) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"index","newCapacity":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[355,356,357,358,359,360,361,362],"tindex":"e4d88357-2e98-11e6-95e1-e7f1f9eb8086","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"e4d88358-2e98-11e6-95e1-11dfae7ecca4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[363],"tindex":"e4d8aa69-2e98-11e6-95e1-4936d3edd0c6","method":{"position":"org.apache.commons.collections4.IteratorUtils:260","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array) {\n    if (array instanceof java.lang.Number) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"e4d8aa6a-2e98-11e6-95e1-5320fb7c5e21","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (predicates == null) {\n                        return null;\n                    } \n                    return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtUnaryOperatorImpl","sourcecode":"!(excess.isEmpty())"},"failures":[],"tindex":"e4d8aa6b-2e98-11e6-95e1-311b5b5e1eea","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (!(bag.isEmpty())) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excess":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"e4d8d17c-2e98-11e6-95e1-65d050a71274","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[364,356],"tindex":"e4d8d17d-2e98-11e6-95e1-8ff25ec6cce5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4d8f88e-2e98-11e6-95e1-a5c6038cc6d6","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[365,366,367,368,369,370],"tindex":"e4d8f88f-2e98-11e6-95e1-f9cdb54ea0f0","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if (start2 == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[205,371,372,206,207,208,209],"tindex":"e4d91fa0-2e98-11e6-95e1-37ca1d216ad8","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":71,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}