{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":20,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":115,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":162,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":113,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":139,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":67,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":116,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":239,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":146,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":250,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":189,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":83,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":197,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":70,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":14,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":158,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":229,"org.apache.commons.collections4.CollectionUtilsTest.collect":9,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":201,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":95,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":27,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":209,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":244,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":191,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":253,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":15,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":94,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":262,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":258,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":192,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":89,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":211,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":34,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":46,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":254,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":222,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":243,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":60,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":164,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":176,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":260,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":265,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":84,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":202,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":190,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":231,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":91,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":240,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":2,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":185,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":213,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":161,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":150,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":53,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":235,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":78,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":143,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":88,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":230,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":106,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":198,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":82,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":62,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":215,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":87,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":257,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":219,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":25,"org.apache.commons.collections4.list.TreeListTest.testBug35258":138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":23,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":183,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":170,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":131,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":175,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":119,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":233,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":207,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":255,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":30,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":172,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":226,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":26,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":206,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":31,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":156,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":63,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":134,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":135,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":256,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":171,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":136,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":177,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":13,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":144,"org.apache.commons.collections4.list.TreeListTest.testRemove":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":122,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":241,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":159,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":148,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":237,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":166,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":12,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":188,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":203,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":125,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":47,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":184,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":45,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":200,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":167,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":98,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":50,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":151,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":109,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":129,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":35,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":247,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":36,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":179,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":37,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":259,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":120,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":133,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":8,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":152,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":7,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":101,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":51,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":232,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":216,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":238,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":142,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":18,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":212,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":59,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":153,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":149,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":223,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":242,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":127,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":16,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":10,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":193,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":85,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":264,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":245,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":132,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":182,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":220,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":261,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":205,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":141,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":155,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":204,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":92,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":186,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":32,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":181,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":1,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":224,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":217,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":118},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"2a60a12a-2eb6-11e6-ae11-73897f53c7aa","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"2a61647b-2eb6-11e6-ae11-8764fdfce12f","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[0,1],"tindex":"2a618b8c-2eb6-11e6-ae11-517d053c813a","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:70","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> uniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[2,3,4,5],"tindex":"2a618b8d-2eb6-11e6-ae11-b72fd99ec8c5","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[6],"tindex":"2a61b29e-2eb6-11e6-ae11-97b7eec4a1ff","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 instanceof java.util.Collection<?>) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[7,8],"tindex":"2a61d9af-2eb6-11e6-ae11-95837f132e07","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:42","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[9],"tindex":"2a6227d0-2eb6-11e6-ae11-fd838ccd7a30","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (inputIterator == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"inputIterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[10],"tindex":"2a6227d1-2eb6-11e6-ae11-0fdcf133b0df","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[11],"tindex":"2a624ee2-2eb6-11e6-ae11-f960bbaa2f30","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if ((key1 instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"2a6275f3-2eb6-11e6-ae11-d320d32a7c50","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (((key == null) && (key == null)) || ((object != null) && (object.equals(current)))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"key","object":"key"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2a629d04-2eb6-11e6-ae11-7f03d80bb6d7","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list2 instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtBinaryOperatorImpl","sourcecode":"nextIterator != null"},"failures":[12],"tindex":"2a62c415-2eb6-11e6-ae11-0fb08c305e6b","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextIterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2a62c416-2eb6-11e6-ae11-790004dfde61","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"2a62eb27-2eb6-11e6-ae11-1f2212561383","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection == null) || (inputCollection == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"inputCollection","b":"inputCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[13,14],"tindex":"2a631238-2eb6-11e6-ae11-2bd1b7f59ff5","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"2a631239-2eb6-11e6-ae11-ab89c524b55f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[15],"tindex":"2a63394a-2eb6-11e6-ae11-8df2d4476a14","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[16,17,18,19,20,21,22,23,24],"tindex":"2a63605b-2eb6-11e6-ae11-37874314784f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof org.w3c.dom.NodeList) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"2a63605c-2eb6-11e6-ae11-a3ccfff78b02","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"2a63876d-2eb6-11e6-ae11-cb71022fdb8c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[],"tindex":"2a63ae7e-2eb6-11e6-ae11-dbcea2ec014f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[119,120,121,122,123],"tindex":"2a63ae7f-2eb6-11e6-ae11-2707fe838cbe","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"2a63d590-2eb6-11e6-ae11-afe7b8c935c0","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (defaultValue == 0) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[],"tindex":"2a63fca1-2eb6-11e6-ae11-3f2b2117ae35","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[124,125,126,127,128,129,130,131,132],"tindex":"2a6423b2-2eb6-11e6-ae11-af236b4f504c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[133,134],"tindex":"2a6423b3-2eb6-11e6-ae11-d57c110491a4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[135,136],"tindex":"2a644ac4-2eb6-11e6-ae11-d3769969d325","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl","sourcecode":"(callCounter) == 0"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"2a6471d5-2eb6-11e6-ae11-b93410e44544","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index == 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[149,150],"tindex":"2a6498e6-2eb6-11e6-ae11-d377ebde5445","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"2a64bff7-2eb6-11e6-ae11-fb7a1793ccf6","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Byte) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:908","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"2a64e708-2eb6-11e6-ae11-0d709c6348f4","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(indexRelativeToMe)) {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"indexRelativeToMe"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[246,247],"tindex":"2a650e19-2eb6-11e6-ae11-1fe60c149968","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl","sourcecode":"(item.isEmpty()) == false"},"failures":[],"tindex":"2a65352a-2eb6-11e6-ae11-010912cd0593","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if ((set.isEmpty()) == false) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"2a655c3b-2eb6-11e6-ae11-4d64359130dc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"2a65834c-2eb6-11e6-ae11-1b03b1e5ad30","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index == index) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtBinaryOperatorImpl","sourcecode":"(validForUpdate) == false"},"failures":[],"tindex":"2a65aa5d-2eb6-11e6-ae11-e1e26999a9f1","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"validForUpdate":"trueFirst"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"2a65aa5e-2eb6-11e6-ae11-db04cf551a96","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:203","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O> coerce(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Transformer<I, O>)(transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"2a65aa5f-2eb6-11e6-ae11-295e5d16d1aa","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[263,264,265],"tindex":"2a65d170-2eb6-11e6-ae11-d531408924f7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"2a65d171-2eb6-11e6-ae11-75e3a19eaf0f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2a65d172-2eb6-11e6-ae11-1925d8f9426d","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (listIterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"listIterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"2a65d173-2eb6-11e6-ae11-c94fa3591be7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":42,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}