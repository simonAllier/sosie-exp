{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":212,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":50,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":400,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":448,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":320,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":247,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":434,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":44,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":308,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":269,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":266,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":229,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":475,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":502,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":61,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":67,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":66,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":88,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":314,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":495,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":41,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":372,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":199,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":187,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":10,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":350,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":253,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":426,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":71,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":124,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":207,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":432,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":113,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":162,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":279,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":145,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":62,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":497,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":160,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":4,"org.apache.commons.collections4.CollectionUtilsTest.select":46,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":522,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":438,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":453,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":175,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":490,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":506,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":239,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":341,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":312,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":210,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":405,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":250,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":331,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":463,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":461,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":507,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":87,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":163,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":264,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":265,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":224,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":194,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":353,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":429,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":111,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":237,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":391,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":102,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":203,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":96,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":469,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":516,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":326,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":98,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":242,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":58,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":549,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":431,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":2,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":31,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":306,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":116,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":14,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":411,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":121,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":216,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":323,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":201,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":128,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":309,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":303,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":304,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":370,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":440,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":27,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":332,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":221,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":222,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":220,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":285,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":357,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":100,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":518,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":8,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":464,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":403,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":513,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":414,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":415,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":551,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":340,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":540,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":165,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":358,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":240,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":218,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":30,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":217,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":298,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":374,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":436,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":435,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":11,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":297,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":146,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":280,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":465,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":548,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":471,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":417,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":419,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":337,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":408,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":451,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":251,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":338,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":441,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":416,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":377,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":161,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":131,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":231,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":267,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":536,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":86,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":452,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":147,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":508,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":379,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":544,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":321,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":281,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":399,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":52,"org.apache.commons.collections4.IteratorUtilsTest.testToList":3,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":514,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":215,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":384,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":407,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":527,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":428,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":494,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":485,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":493,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":550,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":300,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":366,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":492,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":543,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":398,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":397,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":227,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":396,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":538,"org.apache.commons.collections4.map.LRUMapTest.testReset":360,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":476,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":39,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":24,"org.apache.commons.collections4.map.SingletonMapTest.testClone":19,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":517,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":174,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":206,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":425,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":170,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":450,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":336,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":483,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":421,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":21,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":410,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":349,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":554,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":166,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":378,"org.apache.commons.collections4.map.LinkedMapTest.testReset":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":382,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":457,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":213,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":248,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":168,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":313,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":106,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":142,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":294,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":134,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":51,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":159,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":512,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":130,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":401,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":238,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":112,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":104,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":60,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":447,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":143,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":439,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":446,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":151,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":474,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":164,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":156,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":310,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":449,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":144,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":1,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":290,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":462,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":169,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":103,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":252,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":275,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":183,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":376,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":345,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":346,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":347,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":316,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":289,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":123,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":179,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":49,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":171,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":505,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":509,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":473,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":232,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":386,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":409,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":481,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":292,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":478,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":299,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":236,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":328,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":364,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":110,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":139,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":257,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":424,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":404,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":329,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":91,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":92,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":93,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":443,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":200,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":444,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":241,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":225,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":420,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":363,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":274,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":468,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":423,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":467,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":115,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":501,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":534,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":34,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":499,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":500,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":488,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":114,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":141,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":532,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":330,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":454,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":74,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":547,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":132,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":268,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":388,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":413,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":418,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":521,"org.apache.commons.collections4.ListUtilsTest.testSelect":47,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":529,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":202,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":472,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":286,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":0,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":32,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":258,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":368,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":101,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":553,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":73,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":254,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":552,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":69,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":489,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":17,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":94,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":348,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":375,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":85,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":90,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":99,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":352,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":433,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":211,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":195,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":484,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":95,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":105,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":208,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":537,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":205,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":204,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":84,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":155,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":72,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":387,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":369,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":29,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":148,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":524,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":343,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":150,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":81,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":80,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":287,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":487,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":209,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":510,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":270,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":140,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":422,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":486,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":260,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":327,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":354,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":25,"org.apache.commons.collections4.map.LRUMapTest.testLRU":361,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":288,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":325,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":255,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":233,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":539,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":97,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":135,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":322,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":479,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":133,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":392,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":333,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":531,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":109,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":395,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":56,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":244,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":59,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":393,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":394,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":390,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":365,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":198,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":262,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":427,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":117,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":120,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":515,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":127},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"5864160b-2ed3-11e6-b0f7-fbc5f8610025","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"5864b24c-2ed3-11e6-b0f7-01bba06723cf","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[0],"tindex":"5865277d-2ed3-11e6-b0f7-25f1a086d473","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[1,2,3],"tindex":"58654e8e-2ed3-11e6-b0f7-2917cbe513a5","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[4,5,6,7,8,9,10,11,12,13],"tindex":"5865759f-2ed3-11e6-b0f7-7f771ab00e85","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"586575a0-2ed3-11e6-b0f7-6bdeb2a59f93","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[14,15],"tindex":"58659cb1-2ed3-11e6-b0f7-39b3e59da6cc","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"58659cb2-2ed3-11e6-b0f7-e74970dd2717","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"5865c3c3-2ed3-11e6-b0f7-437025912f2e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"5865c3c4-2ed3-11e6-b0f7-5fa2404a9237","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"5865ead5-2ed3-11e6-b0f7-4797845ffa82","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (b instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[16],"tindex":"5865ead6-2ed3-11e6-b0f7-3dadaea594ed","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                        return tmpMap;\n                    } \n                    return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[17],"tindex":"586611e7-2ed3-11e6-b0f7-abf691dbb28e","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[18],"tindex":"586638f8-2ed3-11e6-b0f7-1341803f47e1","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[],"tindex":"586638f9-2ed3-11e6-b0f7-f7c399999155","method":{"position":"org.apache.commons.collections4.list.LazyList:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex > 0) {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.LazyList<E>(sub , org.apache.commons.collections4.Factory<? extends E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"toIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[19,20,21,22],"tindex":"586638fa-2ed3-11e6-b0f7-5b6c718d145c","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Long) {\n        {\n            return isEqualValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[23],"tindex":"5866600b-2ed3-11e6-b0f7-2bee9be06974","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"5866600c-2ed3-11e6-b0f7-2fbd6688341e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"5866871d-2ed3-11e6-b0f7-9fcadfb22434","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[],"tindex":"5866871e-2ed3-11e6-b0f7-53ab88e863a4","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[24,25,26,27,28],"tindex":"5866d53f-2ed3-11e6-b0f7-29a1dbbf2ef5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value instanceof java.lang.Short) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"5866fc50-2ed3-11e6-b0f7-453d1ef4e627","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"5866fc51-2ed3-11e6-b0f7-232e6b37c533","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[46,47],"tindex":"58672362-2ed3-11e6-b0f7-7d0678c4109f","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[48,49,50,51,52],"tindex":"58674a73-2ed3-11e6-b0f7-0595c2488a9a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 == null) {\n                {\n                    int int = 0;\n                    if (key1 != null) {\n                        h ^= key1.hashCode();\n                    } \n                    if (key2 != null) {\n                        h ^= key2.hashCode();\n                    } \n                    h += ~(h << 9);\n                    h ^= h >>> 14;\n                    h += h << 4;\n                    h ^= h >>> 10;\n                    return h;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"58674a74-2ed3-11e6-b0f7-978c1234bb00","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 == null) {\n                {\n                    int int = 0;\n                    if (key1 != null) {\n                        h ^= key1.hashCode();\n                    } \n                    if (key2 != null) {\n                        h ^= key2.hashCode();\n                    } \n                    h += ~(h << 9);\n                    h ^= h >>> 14;\n                    h += h << 4;\n                    h ^= h >>> 10;\n                    return h;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"58677185-2ed3-11e6-b0f7-cbb146db23d6","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[],"tindex":"58677186-2ed3-11e6-b0f7-a1808f3ce4a9","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (defaultValue == null) {\n        {\n            if (defaultValue == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[94],"tindex":"58679897-2ed3-11e6-b0f7-57d9c9d41785","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"58679898-2ed3-11e6-b0f7-e16fbbc3638d","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[50,51,52],"tindex":"58679899-2ed3-11e6-b0f7-9f1f5c42ba01","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[95,96,97,98,99],"tindex":"5867bfaa-2ed3-11e6-b0f7-c590e3bce5dd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[100,101],"tindex":"5867bfab-2ed3-11e6-b0f7-e7a152ee397d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"5867e6bc-2ed3-11e6-b0f7-c3e0c33c8c2d","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[102,103],"tindex":"5867e6bd-2ed3-11e6-b0f7-bb21c5c6c852","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"5867e6be-2ed3-11e6-b0f7-2d257563f5f5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key.isAssignableFrom(key.getReturnType())) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key","method":"key"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[104],"tindex":"58680dcf-2ed3-11e6-b0f7-978b3bf388e0","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl","sourcecode":"proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[105],"tindex":"58680dd0-2ed3-11e6-b0f7-65915ae36e0a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > index) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","proposedCapacity":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[106],"tindex":"58680dd1-2ed3-11e6-b0f7-0f3c345f82e7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"586833e2-2ed3-11e6-b0f7-bd3747cc3dc2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"586833e3-2ed3-11e6-b0f7-cdeda38ebb40","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:129","type":"CtMethodImpl","sourcecode":"public void setTransformer(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.org.apache.commons.collections4.Transformer<? super I, ? extends O> = transformer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"58691e44-2ed3-11e6-b0f7-816a6e33f6f2","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (defaultValue == null) {\n        {\n            if (defaultValue == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[107],"tindex":"58696c65-2ed3-11e6-b0f7-09b4f84b3890","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if ((collection.isEmpty()) && (collection.isEmpty())) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"collection","pendingInsertions":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl","sourcecode":"index > (size)"},"failures":[108,1,2,3,109,110],"tindex":"58696c66-2ed3-11e6-b0f7-61367d18221b","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (estimatedSize > estimatedSize) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"estimatedSize","index":"estimatedSize"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"58699377-2ed3-11e6-b0f7-a7290d5bf528","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                {\n                    return java.util.Map<E, ? super V>.containsKey(obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[123,124],"tindex":"58699378-2ed3-11e6-b0f7-1760c08e9e0e","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"5869ba89-2ed3-11e6-b0f7-69249928f3c7","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Set) {\n                {\n                    return java.util.Map<E, ? super V>.containsKey(obj);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[],"tindex":"5869e19a-2ed3-11e6-b0f7-3706a42331db","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[125],"tindex":"5869e19b-2ed3-11e6-b0f7-7f6596e5a58f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[52],"tindex":"5869e19c-2ed3-11e6-b0f7-d19e4afed8e1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 instanceof java.util.Collection<?>) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key5"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl","sourcecode":"proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[126,127,128,129,130,131,132,111,112,133,134,113,135,114,136,137,115,116,138,139,140,141,142,143,144,117,118,145,146,119,147,120,148,149,121,122,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,125,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"586a2fbd-2ed3-11e6-b0f7-971758bf8da7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode > dataSize) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"dataSize","proposedCapacity":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[460,461],"tindex":"586a56ce-2ed3-11e6-b0f7-d561b751ae40","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"586a7ddf-2ed3-11e6-b0f7-75d02fc21157","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"586a7de0-2ed3-11e6-b0f7-c3e22d0028a5","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                        return tmpMap;\n                    } \n                    return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:310","type":"CtBinaryOperatorImpl","sourcecode":"loop == null"},"failures":[153],"tindex":"586aa4f1-2ed3-11e6-b0f7-77cf71b50f62","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loop":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536],"tindex":"586aa4f2-2ed3-11e6-b0f7-499bb3018073","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[537],"tindex":"586acc03-2ed3-11e6-b0f7-81660dba43bd","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[538,539],"tindex":"586acc04-2ed3-11e6-b0f7-3998690befa5","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:180","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().retainAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[540,541,542],"tindex":"586af315-2ed3-11e6-b0f7-0f878bb96e4e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtBinaryOperatorImpl","sourcecode":"index1 >= endIndex1"},"failures":[],"tindex":"586af316-2ed3-11e6-b0f7-8fd290f6c3a6","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index >= index) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"endIndex1":"index","index1":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[543],"tindex":"586b1a27-2ed3-11e6-b0f7-bd7d13f4e726","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[2,544,545],"tindex":"586b1a28-2ed3-11e6-b0f7-cb07b6aa9d1a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[546],"tindex":"586b4139-2ed3-11e6-b0f7-371f31f43d1b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[547,547,548,549,549,550,551,552,553,554],"tindex":"586b413a-2ed3-11e6-b0f7-99fc14a20254","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"586b684b-2ed3-11e6-b0f7-313a800f2c22","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"o"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":65,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}