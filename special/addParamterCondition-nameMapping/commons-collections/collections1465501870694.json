{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":168,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":160,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":15,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":128,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":78,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":214,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":175,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":29,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":179,"org.apache.commons.collections4.CollectionUtilsTest.get":222,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":185,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":19,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":130,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":164,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":171,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":17,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":125,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":140,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":4,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":193,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":202,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":174,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":212,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":38,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":88,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":217,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":149,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":178,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":225,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":68,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":117,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":66,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":133,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":188,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":143,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":210,"org.apache.commons.collections4.set.CompositeSetTest.testContains":158,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":173,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":177,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":115,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":121,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":36,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":139,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":142,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":124,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":83,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":89,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":43,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":87,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":90,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":218,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":5,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":208,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":215,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":116,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":91,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":32,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":147,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":196,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":221,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":145,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":24,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":67,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":8,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":223,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":165,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":23,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":41,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":31,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":207,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":219,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":166,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":170,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":172},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"83bc9c74-2e7b-11e6-af9b-53504bf10a98","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list1 == null) || (list1 == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"list1","set1":"list1"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"83be9845-2e7b-11e6-af9b-5d5e5fd71a93","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"83bebf56-2e7b-11e6-af9b-ef444327ecf9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[112,113],"tindex":"83bee667-2e7b-11e6-af9b-effbe531e89d","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"83bf0d78-2e7b-11e6-af9b-4717671dd58e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"83bf3489-2e7b-11e6-af9b-a5e6f4e14038","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"83bf348a-2e7b-11e6-af9b-c7b697b43e46","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[168],"tindex":"83bf5b9b-2e7b-11e6-af9b-7fd6be438593","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[],"tindex":"83bf5b9c-2e7b-11e6-af9b-4d1ff1173bee","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"83bf82ad-2e7b-11e6-af9b-f51ff5669c0b","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[169],"tindex":"83c17e7e-2e7b-11e6-af9b-4b381f103fbb","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218],"tindex":"83c1a58f-2e7b-11e6-af9b-5351b17624cd","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"83c1cca0-2e7b-11e6-af9b-8bb215ae430e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[219],"tindex":"83c1cca1-2e7b-11e6-af9b-e39723e02c86","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"83c1f3b2-2e7b-11e6-af9b-fdb7c9add800","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:86","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> nonUniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[220,221,222,223,224,225,226],"tindex":"83c21ac3-2e7b-11e6-af9b-e1007a90c3ad","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object == null) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"object"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":16,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}